?{"Nome do Arquivo INI","DEISSITA.INI"}
?{"Descrição Completa do Arquivo Magnético","Declaração Eletrônica do Imposto sobre Serviços - Itabira - MG"}
?{"A Quem se Destina","Todas as pessoas jurídicas estabelecidas no município, independentemente de serem contribuintes ou não do ISSQN, mesmo as que gozam de isenção ou imunidade, inclusive os órgãos, empresas e entidades da Administração Pública, Direta ou Indireta, de quaisquer dos poderes da União, Estado e Município, as empresas individuais, os condomínios residenciais/comerciais, as associações, sindicatos e cartórios notariais e de registros."}
?{"Objetivo","A DES é uma declaração de serviços que deve ser elaborada através do sistema DEISS, para ser enviada à PMI todo mês, por todas as pessoas jurídicas prestadoras de serviços no município de Itabira e que tem as seguintes finalidades básicas: a) escriturar eletronicamente todos os serviços prestados, acobertados ou não por documentos fiscais; b) apurar o imposto devido e proporcionar a geração e impressão da(s) guia(s) de ISSQN; c) escriturar eletronicamente todos os serviços tomados (recebidos), sujeitos ou não à retenção na fonte, cujos prestadores estejam ou não domiciliados em Itabira."}
?{"Prazo de Entrega","Regra geral, a entrega da declaração deve ser feita mensalmente até o dia 10 do mês seguinte ao da ocorrência dos serviços prestados e/ou tomados, por todas as pessoas jurídicas domiciliadas em Itabira."}
?{"Aplicativo Disponibilizado pelo Fisco","Deiss - Declaração Eletrônica de Imposto sobre Serviços (Validação On-line)."}
?{"Versão do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentarios",""}

[XXX Inicializacao]
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02              
(PRE) _aTotal[03] := ""              
(PRE) _aTotal[04] := {}      
(PRE) _aTotal[05] := {}      
(PRE) _aTotal[06] := .F.      
(PRE) _aTotal[07] := {}                        
(PRE) _aTotal[08] := 0

[XXX Montagem do CFP Utilizado pela rotina - PRINCIPAL]
(PRE) aAdd(_aTotal[04],"Geração da DEISS - Itabira - MG")
(PRE) aAdd(_aTotal[04],"")
(PRE) aAdd(_aTotal[04],"Preencha corretamente as informações solicitadas.")
(PRE) aAdd(_aTotal[04],"Informações necessárias à geração do arquivo de exportação para           geração da DEISS - Declaração Eletrônica do Imposto sobre Serviços                 da Prefeitura Municipal de Itabira - MG.")

[XXX Painel 1 - Configuracoes Gerais]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][1],"Exportação DEISS - Itabira - MG")
(PRE) aAdd(_aTotal[05][1],"Configurações gerais:")
(PRE) aAdd(_aTotal[05][1],{})
(PRE) aAdd(_aTotal[05][1][3],{1,"Layout do arquivo: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"XXX",1,0,,,3})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Número da Declaração: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"99",2,0,,,2})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Código de Acesso: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"99999999999999",2,0,,,14})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"CPF/CNPJ contabilidade/contador: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"99999999999999",2,0,,,14})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Gera registro F (faturamento)?",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{3,,,,,{"1-Sim","2-Não"},,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Tipo de faturamento:",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{3,,,,,{"I-Indústria","C-Comércio","O-Outros"},,})
                                                   
[XXX Chamada do Wizard]
(PRE) _aTotal[06] := xMagWizard(_aTotal[04],_aTotal[05],"DEISSITA")
(PRE) Iif(_aTotal[06],xMagLeWiz("DEISSITA",@_aTotal[07],.T.),Nil)
(PRE) lAbtMT950	:= !_aTotal[06]

[XXX Registro H - Identificador]  
(DEL) , M
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
IDENT      C 000 0 "'H'"
CNPJ       C 000 0 "'" + SM0->M0_CGC + "'"
ANO        C 000 0 StrZero(Year(_aTotal[01]),4)
MES        C 000 0 StrZero(Month(_aTotal[02]),2)
NRODECLARA C 000 0 Alltrim(_aTotal[07][01][02])
CODACESSO  C 000 0 Alltrim(_aTotal[07][01][03])
CNPJCONT   C 000 0 "'" + _aTotal[07][01][04] + "'"
INSCRM     C 000 0 Alltrim(SubStr(aRetDig(Alltrim(SM0->M0_INSCM),.F.),1,15))
(POS)

[XXX Query SF3 - Notas Recebidas]
(PRE) SA1->(dbSetOrder(1))
(PRE) SA2->(dbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1)) 
(PRE) _aTotal[09] := {"SF3",""}
(PRE) FsQuery(_aTotal[09],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + DTOS(_aTotal[01]) + "' AND F3_ENTRADA <= '" + DTOS(_aTotal[02]) + "' AND F3_CFO < '5' AND F3_CODISS <> '' AND F3_TIPO = 'S'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. F3_CFO < '5' .And. !Empty(F3_CODISS) .And. F3_TIPO = 'S'",SF3->(IndexKey()))


[SF3 - Registro N - Notas]
(DEL) , M
(PRE) SF3->(dbGoTop())                        
(PRE) _aTotal[30] := 0
(PRE) _aTotal[31] := 0
(PRE) _aTotal[32] := 0
(PRE) _aTotal[33] := 0
(PRE) _aTotal[34] := 0
(PRE) _aTotal[35] := 0
(PRE) _aTotal[36] := 0
(PRE) _aTotal[37] := 0
(PRE) _aTotal[38] := 0
(PRE) _aTotal[23] := .T.
(PREREG) _aTotal[18] := ""
(PREREG) (_aTotal[10] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","SF2","SF1"),.T.)
(PREREG) (_aTotal[11] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","SA1","SA2"),.T.)
(PREREG) (_aTotal[12] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","F2_","F1_"),.T.)
(PREREG) (_aTotal[13] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","A1_","A2_"),.T.)
(PREREG) (_aTotal[11])->(dbSeek(xFilial(_aTotal[11])+SF3->F3_CLIEFOR+SF3->F3_LOJA)) 
// Verifica a indicacao de retencao do imposto (SF3 ou pelo cliente/fornecedor)
(PREREG) (_aTotal[16] := SF3->F3_RECISS,.T.)
(PREREG) (_aTotal[17] := Iif((SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[16] $ "1S") .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[16] $ "2N"),"R","N"),.T.)
// Verifica se a empresa que esta gerando as informacoes e de Itabira - MG
(PREREG) (_aTotal[21] := Alltrim(Upper(SM0->M0_CIDENT)) == "ITABIRA" .And. SM0->M0_ESTENT == "MG",.T.)
// Verifica se o cliente/fornecedor e de Itabira - MG                                                    
(PREREG) (_aTotal[22] := Alltrim(Upper((_aTotal[11])->&(_aTotal[13]+"MUN"))) == "ITABIRA" .And. (_aTotal[11])->&(_aTotal[13]+"EST") == "MG",.T.)
// Verifica o tipo de recolhimento do imposto:
// C = Cancelada
(PREREG) (_aTotal[18] := Iif(!Empty(SF3->F3_DTCANC) .Or. "CANCELAD"$SF3->F3_OBSERV,"C",_aTotal[18]),.T.)
// I = Imposto Isento
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. SF3->F3_ISENICM > 0,"I",_aTotal[18]),.T.)
// P = Imposto proprio - somente para notas emitidas e quando o emissor e responsavel pelo recolhimento
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. SF3->F3_BASEICM > 0 .And. _aTotal[17] == "N" .And. SubStr(SF3->F3_CFO,1,1) >= "5","P",_aTotal[18]),.T.)
// S = Imposto retido por empresa do municipio (nota emitida) ou retido de empresa do municipio (nota recebida) 
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. _aTotal[17] == "R" .And. ((SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[21]) .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[22])),"S",_aTotal[18]),.T.)
// F = Imposto retido por empresa de fora do municipio (nota emitida) ou retido de empresa fora do municipio (nota recebida) 
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. _aTotal[17] == "R" .And. ((SubStr(SF3->F3_CFO,1,1) >= "5" .And. !_aTotal[21]) .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. !_aTotal[22])),"F",_aTotal[18]),.T.)
// O = Imposto pago na origem
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]),"O",_aTotal[18]),.T.)
// Procura o cabecalho do documento
(PREREG) Iif(_aTotal[18] == "C",.T.,(_aTotal[10])->(dbSeek(xFilial(_aTotal[10])+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))) 
// Total de notas fiscais no registro
(PREREG) (_aTotal[30] += 1,.T.)
// Total de notas fiscais emitidas
(PREREG) (_aTotal[31] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5",1,0),.T.)
// Somatorio do valor bruto das notas fiscais emitidas
(PREREG) (_aTotal[32] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[18] <> "C",(_aTotal[10])->&(_aTotal[12]+"VALBRUT"),0),.T.)
// Somatorio do valor do imposto das notas emitidas
(PREREG) (_aTotal[33] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
// Somatorio do valor do imposto retido por outras empresas (tipo S ou F)
(PREREG) (_aTotal[34] += Iif(_aTotal[18]$"S/F" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
// Total de notas fiscais recebidas
(PREREG) (_aTotal[35] += Iif(SubStr(SF3->F3_CFO,1,1) < "5",1,0),.T.)
// Somatorio do valor bruto das notas fiscais recebidas
(PREREG) (_aTotal[36] += Iif(SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[18] <> "C",(_aTotal[10])->&(_aTotal[12]+"VALBRUT"),0),.T.)
// Somatorio do valor do imposto das notas recebidas
(PREREG) (_aTotal[37] += Iif(SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'N'" 
SERIE      C 000 0 "'" + SubStr( SerieNfId("SF3",2,"F3_SERIE") ,1,3) + "'" 
TIPONOTA   C 000 0 "'" + Iif(SubStr(SF3->F3_CFO,1,1) >= "5","E","R") + "'"
TIPODOC    C 000 0 "'N'" 
NUMERO     C 000 0 Alltrim(SubStr(SF3->F3_NFISCAL,1,14))
EMISSAO    C 000 0 Iif(_aTotal[18] == "C","//",StrZero(Day(SF3->F3_ENTRADA),2) + "/" + StrZero(Month(SF3->F3_ENTRADA),2) + "/" + StrZero(Year(SF3->F3_ENTRADA),4))
PREST_TOM  C 000 0 "'" + Iif(_aTotal[18] == "C","",Alltrim((_aTotal[11])->&(_aTotal[13]+"CGC"))) + "'"
VALORBRUTO C 000 0 Iif(_aTotal[18] == "C","0",AllTrim(StrTran(Transform((_aTotal[10])->&(_aTotal[12]+"VALBRUT"),"@E 999999999999.99"),",",".")))
TPRECOLHE  C 000 0 "'" + _aTotal[18] + "'"
NOME       C 000 0 "'" + Iif(_aTotal[18] == "C","",AllTrim(SubStr((_aTotal[11])->&(_aTotal[13]+"NOME"),1,85))) + "'"
CIDADE     C 000 0 "'" + Iif(_aTotal[18] == "C","",AllTrim(SubStr((_aTotal[11])->&(_aTotal[13]+"MUN"),1,30))) + "'"
ESTADO     C 000 0 "'" + Iif(_aTotal[18] == "C","",(_aTotal[11])->&(_aTotal[13]+"EST")) + "'"
{SD1 Registro I - Itens Notas}
(DEL) , M
(PRE) _aTotal[038] := {"SD1",""}
(PRE) SD1->(dbSetOrder(1))
(PRE) SB1->(dbSetOrder(1))
(PRE) FsQuery(_aTotal[038],1,"D1_FILIAL = '" + xFilial("SD1") + "' AND D1_DOC = '" + SF3->F3_NFISCAL + "' AND D1_SERIE = '" + SF3->F3_SERIE + "' AND D1_FORNECE = '" + SF3->F3_CLIEFOR + "' AND D1_LOJA = '" + SF3->F3_LOJA + "' AND D1_CODISS<>'"+Space(Len(SD1->D1_CODISS))+"'","D1_FILIAL == '" + xFilial("SD1") + "' .AND. D1_DOC == '" + SF3->F3_NFISCAL + "' .AND. D1_SERIE == '" + SF3->F3_SERIE + "' .AND. D1_FORNECE == '" + SF3->F3_CLIEFOR + "' .AND. D1_LOJA == '" + SF3->F3_LOJA + "' .AND. D1_CODISS<>'"+Space(Len(SD1->D1_CODISS))+"'",SD1->(IndexKey()))
(PRE) SD1->(dbGoTop())
(PREREG) SB1->(dbSeek(xFilial("SB1")+SD1->D1_COD),.T.)
(PREREG) SD1->D1_FILIAL == xFilial("SD1") .And. SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA == SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'I'"
CODATV     C 007 0 Substr(SB1->B1_CNAE,1,7)
VLBASE     C 015 0 StrTran(Transform(SD1->D1_BASEISS,"@E 999999999999.99"),",",".")
ALIQUOTA   C 005 0 StrTran(Transform(SD1->D1_ALIQISS,"@E 99.99"),",",".")
VLIMP      C 015 0 StrTran(Transform(SD1->D1_VALISS,"@E 999999999999.99"),",",".")
(POS) FsQuery(_aTotal[038],2)   

[XXX Excluindo areas de trabalho]                                                 
(PRE) FsQuery(_aTotal[09],2)

[XXX Query SF3 - Notas Emitidas]
(PRE) SF3->(DbSetOrder(1))
(PRE) SA1->(dbSetOrder(1))
(PRE) SA2->(dbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1)) 
(PRE) _aTotal[70] := {"SF3",""}
(PRE) FsQuery(_aTotal[70],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + DTOS(_aTotal[01]) + "' AND F3_ENTRADA <= '" + DTOS(_aTotal[02]) + "' AND F3_CFO >= '5' AND F3_CODISS <> '' AND F3_TIPO = 'S'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. F3_CFO >= '5' .And. !Empty(F3_CODISS) .And. F3_TIPO = 'S'",SF3->(IndexKey()))


[SF3 - Registro N - Notas]
(DEL) , M
(PRE) SF3->(dbGoTop())                        
(PRE) _aTotal[30] := 0
(PRE) _aTotal[31] := 0
(PRE) _aTotal[32] := 0
(PRE) _aTotal[33] := 0
(PRE) _aTotal[34] := 0
(PRE) _aTotal[35] := 0
(PRE) _aTotal[36] := 0
(PRE) _aTotal[37] := 0
(PRE) _aTotal[38] := 0
(PRE) _aTotal[23] := .T.
(PREREG) _aTotal[18] := ""
(PREREG) (_aTotal[10] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","SF2","SF1"),.T.)
(PREREG) (_aTotal[11] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","SA1","SA2"),.T.)
(PREREG) (_aTotal[12] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","F2_","F1_"),.T.)
(PREREG) (_aTotal[13] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5","A1_","A2_"),.T.)
(PREREG) (_aTotal[11])->(dbSeek(xFilial(_aTotal[11])+SF3->F3_CLIEFOR+SF3->F3_LOJA)) 
// Verifica a indicacao de retencao do imposto (SF3 ou pelo cliente/fornecedor)
(PREREG) (_aTotal[16] := SF3->F3_RECISS ,.T.)
(PREREG) (_aTotal[17] := Iif((SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[16] $ "1S") .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[16] $ "2N"),"R","N"),.T.)
// Verifica se a empresa que esta gerando as informacoes e de Itabira - MG
(PREREG) (_aTotal[21] := Alltrim(Upper(SM0->M0_CIDENT)) == "ITABIRA" .And. SM0->M0_ESTENT == "MG",.T.)
// Verifica se o cliente/fornecedor e de Itabira - MG                                                    
(PREREG) (_aTotal[22] := Alltrim(Upper((_aTotal[11])->&(_aTotal[13]+"MUN"))) == "ITABIRA" .And. (_aTotal[11])->&(_aTotal[13]+"EST") == "MG",.T.)
// Verifica o tipo de recolhimento do imposto:
// C = Cancelada
(PREREG) (_aTotal[18] := Iif(!Empty(SF3->F3_DTCANC) .Or. "CANCELAD"$SF3->F3_OBSERV,"C",_aTotal[18]),.T.)
// I = Imposto Isento
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. SF3->F3_ISENICM > 0,"I",_aTotal[18]),.T.)
// P = Imposto proprio - somente para notas emitidas e quando o emissor e responsavel pelo recolhimento
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. SF3->F3_BASEICM > 0 .And. _aTotal[17] == "N" .And. SubStr(SF3->F3_CFO,1,1) >= "5","P",_aTotal[18]),.T.)
// S = Imposto retido por empresa do municipio (nota emitida) ou retido de empresa do municipio (nota recebida) 
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. _aTotal[17] == "R" .And. ((SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[21]) .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[22])),"S",_aTotal[18]),.T.)
// F = Imposto retido por empresa de fora do municipio (nota emitida) ou retido de empresa fora do municipio (nota recebida) 
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]) .And. _aTotal[17] == "R" .And. ((SubStr(SF3->F3_CFO,1,1) >= "5" .And. !_aTotal[21]) .Or. (SubStr(SF3->F3_CFO,1,1) < "5" .And. !_aTotal[22])),"F",_aTotal[18]),.T.)
// O = Imposto pago na origem
(PREREG) (_aTotal[18] := Iif(Empty(_aTotal[18]),"O",_aTotal[18]),.T.)
// Procura o cabecalho do documento
(PREREG) Iif(_aTotal[18] == "C",.T.,(_aTotal[10])->(dbSeek(xFilial(_aTotal[10])+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))) 
// Total de notas fiscais no registro
(PREREG) (_aTotal[30] += 1,.T.)
// Total de notas fiscais emitidas
(PREREG) (_aTotal[31] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5",1,0),.T.)
// Somatorio do valor bruto das notas fiscais emitidas
(PREREG) (_aTotal[32] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[18] <> "C",(_aTotal[10])->&(_aTotal[12]+"VALBRUT"),0),.T.)
// Somatorio do valor do imposto das notas emitidas
(PREREG) (_aTotal[33] += Iif(SubStr(SF3->F3_CFO,1,1) >= "5" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
// Somatorio do valor do imposto retido por outras empresas (tipo S ou F)
(PREREG) (_aTotal[34] += Iif(_aTotal[18]$"S/F" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
// Total de notas fiscais recebidas
(PREREG) (_aTotal[35] += Iif(SubStr(SF3->F3_CFO,1,1) < "5",1,0),.T.)
// Somatorio do valor bruto das notas fiscais recebidas
(PREREG) (_aTotal[36] += Iif(SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[18] <> "C",(_aTotal[10])->&(_aTotal[12]+"VALBRUT"),0),.T.)
// Somatorio do valor do imposto das notas recebidas
(PREREG) (_aTotal[37] += Iif(SubStr(SF3->F3_CFO,1,1) < "5" .And. _aTotal[18] <> "C",SF3->F3_VALICM,0),.T.)
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'N'" 
SERIE      C 000 0 "'" + SubStr( SerieNfId("SF3",2,"F3_SERIE") ,1,3) + "'" 
TIPONOTA   C 000 0 "'" + Iif(SubStr(SF3->F3_CFO,1,1) >= "5","E","R") + "'"
TIPODOC    C 000 0 "'N'" 
NUMERO     C 000 0 Alltrim(SubStr(SF3->F3_NFISCAL,1,14))
EMISSAO    C 000 0 Iif(_aTotal[18] == "C","//",StrZero(Day(SF3->F3_ENTRADA),2) + "/" + StrZero(Month(SF3->F3_ENTRADA),2) + "/" + StrZero(Year(SF3->F3_ENTRADA),4))
PREST_TOM  C 000 0 "'" + Iif(_aTotal[18] == "C","",Alltrim((_aTotal[11])->&(_aTotal[13]+"CGC"))) + "'"
VALORBRUTO C 000 0 Iif(_aTotal[18] == "C","0",AllTrim(StrTran(Transform((_aTotal[10])->&(_aTotal[12]+"VALBRUT"),"@E 999999999999.99"),",",".")))
TPRECOLHE  C 000 0 "'" + _aTotal[18] + "'"
NOME       C 000 0 "'" + Iif(_aTotal[18] == "C","",AllTrim(SubStr((_aTotal[11])->&(_aTotal[13]+"NOME"),1,85))) + "'"
CIDADE     C 000 0 "'" + Iif(_aTotal[18] == "C","",AllTrim(SubStr((_aTotal[11])->&(_aTotal[13]+"MUN"),1,30))) + "'"
ESTADO     C 000 0 "'" + Iif(_aTotal[18] == "C","",(_aTotal[11])->&(_aTotal[13]+"EST")) + "'"
{SD2 Registro I - Itens Notas}
(DEL) , M
(PRE) _aTotal[042] := {"SD2",""}
(PRE) SD2->(dbSetOrder(3))
(PRE) SB1->(dbSetOrder(1))
(PRE) FsQuery(_aTotal[042],1,"D2_FILIAL = '" + xFilial("SD2") + "' AND D2_DOC = '" + SF3->F3_NFISCAL + "' AND D2_SERIE = '" + SF3->F3_SERIE + "' AND D2_CLIENTE = '" + SF3->F3_CLIEFOR + "' AND D2_LOJA = '" + SF3->F3_LOJA + "' AND D2_CODISS<>'"+Space(Len(SD2->D2_CODISS))+"'"  ,"D2_FILIAL == '" + xFilial("SD2") + "' .AND. D2_DOC == '" + SF3->F3_NFISCAL + "' .AND. D2_SERIE == '" + SF3->F3_SERIE + "' .AND. D2_CLIENTE == '" + SF3->F3_CLIEFOR + "' .AND. D2_LOJA == '" + SF3->F3_LOJA + "' .AND. D2_CODISS<>'"+Space(Len(SD2->D2_CODISS))+"'",SD2->(IndexKey()))
(PRE) SD2->(dbGoTop())
(PREREG) SB1->(dbSeek(xFilial("SB1")+SD2->D2_COD),.T.)
(PREREG) SD2->D2_FILIAL == xFilial("SD2") .And. SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA == SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'I'"
CODATV     C 007 0 Substr(SB1->B1_CNAE,1,7)
VLBASE     C 015 0 StrTran(Transform(SD2->D2_BASEISS,"@E 999999999999.99"),",",".")
ALIQUOTA   C 005 0 StrTran(Transform(SD2->D2_ALIQISS,"@E 99.99"),",",".")
VLIMP      C 015 0 StrTran(Transform(SD2->D2_VALISS,"@E 999999999999.99"),",",".")
(POS) FsQuery(_aTotal[042],2) 


[XXX Excluindo areas de trabalho]                                                 
(PRE) FsQuery(_aTotal[70],2)

 

[XXX Registro F - Faturamento]  
(DEL) , M
(PRE) _aTotal[08] := 0
(PREREG) SubStr(_aTotal[07][01][05],1,1) == "1"
(PREREG) (_aTotal[08] := CalcRB(_aTotal[01],_aTotal[02],0,,) ,.T.)
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'F'"
TIPOFAT    C 000 0 "'" + AllTrim(Substr(_aTotal[07][01][06],1,1)) + "'"
VALFAT     C 000 0 Alltrim(StrTran(Transform(_aTotal[08],"@E 999999999999.99"),",","."))
(POS)
              
[XXX Registro T - Registro de fim do arquivo.]
(DEL) , M
VERSAO     C 000 0 "'" + Alltrim(_aTotal[07][01][01]) + "'"
TIPOREG    C 000 0 "'T'"
TOTALNOTAS C 000 0 Alltrim(Str(_aTotal[30]))
TOTEMI     C 000 0 Alltrim(Str(_aTotal[31]))
BRUTOEMI   C 000 0 Alltrim(StrTran(Transform(_aTotal[32],"@E 999999999999.99"),",","."))
IMPEMI     C 000 0 Alltrim(StrTran(Transform(_aTotal[33],"@E 999999999999.99"),",","."))
RETIDO     C 000 0 Alltrim(StrTran(Transform(_aTotal[34],"@E 999999999999.99"),",","."))
TOTRECEB   C 000 0 Alltrim(Str(_aTotal[35]))
BRUTORECEB C 000 0 Alltrim(StrTran(Transform(_aTotal[36],"@E 999999999999.99"),",","."))
IMPRECEB   C 000 0 Alltrim(StrTran(Transform(_aTotal[37],"@E 999999999999.99"),",","."))
(POS)
