?{"Nome do Arquivo INI","DMSCAMP.INI"}
?{"Descricao Completa do Arquivo Magnetico","Declaracao Mensal de Servico"}
?{"A Quem se Destina","As pessoas juridicas, orgaos da administracao publica, direta e indireta, de quaisquer dos entes politicos, bem como empresas publicas e sociedades de economia mista"}
?{"Objetivo","Gerar automaticamente: Guia de Recolhimento de ISSQN com codigo de barras; Recibo de Retencao na Fonte; Livro Fiscal Eletronico; Declaracao Digital de Servicos para ser entregue ao fisco municipal, transmitido atraves da Internet."}
?{"Prazo de Entrega","Até o dia 10 (dez) do mês subseqüente à prestação do serviço."}
?{"Aplicativo Disponibilizado pelo Fisco","DMS"}
?{"Versao do Aplicativo Contemplada pela Microsiga","1.00.12"}
?{"Legislacao Contemplada","Lei Municipal nº 12.392/05, alterada pela de nº 13.208/07, no Decreto nº 15.356/05 e, especificamente, na Instrução Normativa nº 001/08 - DRM/SMF"}
?{"Comentarios",""}
                                                               
[XXX Inicializacao]      
(PRE) _aTotal[2]  := ""
(PRE) _aTotal[4]  := Alltrim(Upper(GetNewPar("MV_CIDADE","")))
(PRE) _aTotal[5]  := SA1->(FieldPos("A1_RECISS"))
(PRE) _aTotal[6]  := SA2->(FieldPos("A2_RECISS"))         
(PRE) _aTotal[7]  := Alltrim(Upper(GetNewPar ("MV_SIMPLES","")))
// Campo na tabela SA1 que contem o codigo SIAF do municipio do cliente (sem o alias)
(PRE) _aTotal[10] := Alltrim(GetNewPar("MV_CAMPSCC",""))   
// Campo na tabela SA2 que contem o codigo SIAF do municipio do fornecedor (sem o alias)
(PRE) _aTotal[11] := Alltrim(GetNewPar("MV_CAMPSCF",""))
// Campo na tabela SA1 que contem o motivo da nao retencao do imposto, conforme a tabela 3.4.3
(PRE) _aTotal[15] := ""
(PRE) _aTotal[16] := 0
(PRE) _aTotal[17] := 0
(PRE) _aTotal[18] := 0
(PRE) _aTotal[20] := {}
(PRE) _aTotal[21] := {}
(PRE) _aTotal[22] := .F.
(PRE) _aTotal[23] := {} 
(PRE) _aTotal[24] := ""           
(PRE) _aTotal[25] := Alltrim(GetNewPar("MV_CAMPRET",""))
(PRE) _aTotal[26] := 0         
(PRE) _aTotal[27] := ""
(PRE) _aTotal[96] := ""
(PRE) _aTotal[97] := ""                   
(PRE) _aTotal[99] := MV_PAR01
(PRE) _aTotal[98] := MV_PAR02

//MV_CAMPSE - Configuração da série a ser apresentada pelos documentos na DMS no arquivo de Notas Emitidas e Notas Recebidas.
//MV_CAMPME - Configuração do Modelo a ser apresentada pelos documentos na DMS no arquivo de Notas Emitidas.
//MV_CAMPML - Configuração do Modelo a ser apresentado pelos documentos na DMS no arquivo de Notas Emitidas em lote.
//MV_CAMPMR - Configuração do Modelo a ser apresentado pelos documentos na DMS no arquivo de Notas Recebidas.

// Modelo do documento a ser apresentado na DMS
// SS-D/SS-D - Serie da DMS - conforme informado no MV_CAMPME e modelo do documento conforme o layout tabela 4.2 - NOTAS EMITIDAS
(PRE) _aTotal[56] := Alltrim(GetNewPar("MV_CAMPME",""))

// SS-D/SS-D - Serie da DMS - conforme informado no MV_CAMPMR e modelo do documento conforme o layout tabela 4.2 - NOTAS RECEBIDAS
(PRE) _aTotal[57] := Alltrim(GetNewPar("MV_CAMPMR",""))

// SS-D/SS-D - Serie da DMS - conforme informado no MV_CAMPML e modelo do documento conforme o layout tabela 4.2 - NOTAS EMITIDAS EM LOTE
(PRE) _aTotal[58] := Alltrim(GetNewPar("MV_CAMPML",""))      

(PRE) _aTotal[60] := GetNewPar("MV_CAMPNFC", .F.)
(PRE) _aTotal[61] := FisxForm(SuperGetMv("MV_CAMPSER",,""),"/")
(PRE) _aTotal[66] := strtran(SuperGetMv("MV_CAMPSER",,""),"","")    
(PRE) _aTotal[62] := "F3_FILIAL='"+xFilial("SF3")+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND (SUBSTRING (F3_CFO,1,1)>='5' OR  (SUBSTRING (F3_CFO,1,1)<'5' AND F3_FORMUL ='S'))  AND F3_SERIE IN "+_aTotal[61]+" "
(PRE) _aTotal[63] := "F3_FILIAL='"+xFilial("SF3")+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND (SUBSTRING (F3_CFO,1,1)>='5' OR  (SUBSTRING (F3_CFO,1,1)<'5' AND F3_FORMUL ='S')) AND F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' AND F3_TIPO IN ('S','L') "
(PRE) _aTotal[64] := "F3_FILIAL=='"+xFilial ("SF3")+"' .And. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .And. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .And. (SUBS (F3_CFO, 1, 1)>='5' .Or. (SUBS (F3_CFO, 1, 1)<='5' .And. F3_FORMUL ='S )) .And. F3_SERIE $'"+strtran(_aTotal[66],"'","")+"'"
(PRE) _aTotal[65] := "F3_FILIAL=='"+xFilial ("SF3")+"' .And. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .And. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .And. SUBS (F3_CFO, 1, 1)>='5' .And. F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' .And. F3_FORMUL$' N' .And. F3_TIPO='S' "
// Campo na tabela SF1 que contem o codigo SIAF do Local da Prestação do Serviço (Fornecedor) quando esse for diferente da localidade do Fornecedor
(PRE) _aTotal[67] := Alltrim(GetNewPar("MV_CAMPFOR",""))                    
// Campo na tabela SF2 que contem o codigo SIAF do Local da Prestação do Serviço (Cliente) quando esse for diferente da localidade do Cliente
(PRE) _aTotal[68] := Alltrim(GetNewPar("MV_CAMPCLI",""))   
				      
[XXX Wizard da rotina]
// Tela principal - apresentacao da rotina
(PRE) aAdd (_aTotal[21], "Processamento da ISSQN de Campinas - SP")
(PRE) aAdd (_aTotal[21], "")
(PRE) aAdd (_aTotal[21], "Preencha corretamente as informações solicitadas.")
(PRE) aAdd (_aTotal[21], "Informações necessárias para a geração automática da ISSQN Campinas")
// Tela para lancamento das configuracoes necessarias
(PRE) aAdd (_aTotal[20], {})
(PRE) aAdd (_aTotal[20][1], "Processamento da ISSQN de Campinas - SP")
(PRE) aAdd (_aTotal[20][1], "Informações necessárias para a geração automática da ISSQN Campinas")
(PRE) aAdd (_aTotal[20][1], {})
(PRE) aAdd (_aTotal[20][1][3], {1, "Informe a versão do Sistema da DMS?",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Informe o código do Município?",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {2,,"@!",1,0,,,3})
(PRE) aAdd (_aTotal[20][1][3], {2,,"@!",1,0,,,10})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Filtra NF?",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Filtra Série?",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {3,,,,,{"1-Ambos","2-Entrada","3-Saída"},,})
(PRE) aAdd (_aTotal[20][1][3], {2,,"@!",1,0,,,3})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
// Chamada da wizard
(PRE) _aTotal[22] := xMagWizard (_aTotal[21], _aTotal[20], "ISSCAMP")
(PRE) Iif (_aTotal[22], xMagLeWiz ("ISSCAMP", @_aTotal[23], .T.), Nil)
(PRE) lAbtMT950	:= !_aTotal[22]

// Amarra a serie dos documentos do Protheus com a serie que deve ser apresentada na DMS (tabela 4.1 do manual de importacao)
// PPP-DD/PPP-DD/ (serie do Protheus com 3 digitos / serie da DMS com 2 digitos (tabela 4.1 do manual de importacao)
[SX6 Verificando parametros ]
(PRE) _aTotal[55] := ""
(PRE) SX6->(DbGoTop ())
(PRE) SX6->(DbSeek (xFilial ("SX6")+"MV_CAMPSE"))
(PREREG) !SX6->(Eof ()) .And. xFilial ("SX6")==SX6->X6_FIL .And. "MV_CAMPSE"$SX6->X6_VAR
(PREREG) (_aTotal[55] += SX6->X6_CONTEUD, .T.)   


[XXX Verifica se os campos necessarios foram implementados]
(PRE) _aTotal[50] := ""
(PRE) Iif(SA1->(FieldPos(_aTotal[10]))	== 0,_atotal[50] += _aTotal[10],.T.)
(PRE) Iif(SA2->(FieldPos(_aTotal[11]))	== 0,_atotal[50] += _aTotal[11],.T.)
(PRE) Iif(SA2->(FieldPos(_aTotal[25]))	== 0,_atotal[50] += _aTotal[25],.T.)                                                                             
(PRE) Iif(!empty(_aTotal[67]),Iif(SF1->(FieldPos(_aTotal[67])) == 0,_atotal[50] += _aTotal[67],.T.),.T.)
(PRE) Iif(!empty(_aTotal[68]),Iif(SF2->(FieldPos(_aTotal[68])) == 0,_atotal[50] += _aTotal[68],.T.),.T.)

(PRE) _aTotal[31] := "Atenção"
(PRE) _aTotal[32] := "Campo informado no parametro "
(PRE) _aTotal[32] += "não existe no dicionario de dados "
(PRE) _aTotal[32] += "Campos: " + _aTotal[50]
(PRE) _aTotal[33] := "verifique a documentação que acompanha a rotina e "
(PRE) _aTotal[33] += "execute todos os procedimentos indicados e processe "
(PRE) _aTotal[33] += "esta rotina novamente."
(PRE) Iif(!Empty(_aTotal[50]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) Iif(!Empty(_aTotal[50]),_aTotal[51] := .T.,_aTotal[51] := .F.)
[XXX Aborta a rotina, caso nao tenham sido implementados os campos]
(PRE) lAbtMT950	:= _aTotal[51]

[XXX Registro Tipo H - Identificacao ]
IDENTREG   C 001 0 "H"
INSCRMUN   C 011 0 StrZero(val(StrTran(SM0->M0_INSCM,"-","")), 11)
// Versao informada pelo usuario na Wizard da rotina
VERSAODMS  C 003 0 _aTotal[23][1][1]

[SF3 Registro Tipo E - Notas Fiscais Emitidas ]

(PRE) SB1->(dbSetOrder(1))
(PRE) SA1->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1))
(PRE) SA2->(dbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) SFT->(dbSetOrder(3))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1,Iif(_aTotal[60],_aTotal[62],_aTotal[63]) ,Iif(_aTotal[60],_aTotal[64],_aTotal[65]) ,SF3->(IndexKey ()))
(PRE) SF3->(dbGotop())
(PRE) _aITEMS := {}
(PRE) _aITEMSC := {}

//Tratamento para inclusão de NF`s Mercadoria 
(PREREG) (_aTotal[16] := Iif(empty(SF3->F3_CODISS),aScan(_aITEMS,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA),aScan(_aITEMS,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA+STRZERO(SF3->F3_ALIQICM,5,2))))
(PREREG) (Iif(_aTotal[60],Iif(_aTotal[16] == 0,.T.,IIf(!empty(SF3->F3_DTCANC),.T.,Iif(!empty(SF3->F3_CODISS) .and. SF3->F3_ALIQICM <> _aTotal[17],.T.,.F.))),.T.))
(PREREG) (Iif(_aTotal[16] == 0,Iif(empty(SF3->F3_CODISS),AADD(_aITEMS,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA),AADD(_aITEMS,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA+STRZERO(SF3->F3_ALIQICM,5,2))),.T.),.T.)
//Tratamento para NF`s Mercadorias Canceladas
(PREREG) (_aTotal[18] := Iif(!empty(SF3->F3_DTCANC),aScan(_aITEMSC,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA),aScan(_aITEMSC,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA+STRZERO(SF3->F3_ALIQICM,5,2))))
(PREREG) (Iif(_aTotal[60],Iif(_aTotal[18] == 0,.T.,.F.),.T.))
(PREREG) (Iif(_aTotal[18] == 0,Iif(!empty(SF3->F3_DTCANC),AADD(_aITEMSC,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA),AADD(_aITEMSC,SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA+STRZERO(SF3->F3_ALIQICM,5,2))),.T.),.T.)
(PREREG) (_aTotal[17] := Iif(!empty(SF3->F3_CODISS) .and. empty(SF3->F3_DTCANC),SF3->F3_ALIQICM,0))        
//Posiciona Cliente/Fornecedor de acordo com o Tipo da NF
(PREREG) (_aTotal[27] :=Iif(SF3->F3_FORMUL ='S',iif(!(SF3->F3_TIPO$'DB'),SA2->(DbSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA1->(dbSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA))),iif(!(SF3->F3_TIPO$'DB'),SA1->(dbSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(DbSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))),.T.)
//Posiciona SF1/SF2 de acordo com o Tipo da NF
(PREREG) (_aTotal[24] := Iif(SF3->F3_FORMUL ='S',SF1->(DbSeek(xFilial("SF1")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SF2->(DbSeek(xFilial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))),.T.)
(PREREG) (Iif(SF3->F3_FORMUL ='S',.T.,iif(empty(SF3->F3_CODISS) .and. SF2->F2_VALISS<>0,.F.,.T.)))

// Serie da NF de acordo com o Layout (correspondencia da serie do Protheus com a do Layout) 
(PREREG) (_aTotal[2]  := Iif(Empty(_aTotal[55]),Left ( SerieNfId("SF3",2,"F3_SERIE") , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2)), .T.)

(PREREG) (_aTotal[3]  := Iif(SF3->F3_FORMUL ='S',SA2->(FieldGet(_aTotal[6])),SA1->(FieldGet(_aTotal[5]))),.T.)
(PREREG) (_aTotal[8]  := Iif(SF3->F3_FORMUL ='S',SA2->A2_SIMPNAC,SA1->A1_SIMPNAC),.T.)
// Tributacao do documento
// E = fora do municipio
// C = isenta de ISS
// H = Tributavel pelo Simples Nacional (_aTotal[8] guarda se o cliente/fornecedor eh do Simples Nacional)
// T = Tributavel (quando tiver ISS e nao for do Simples)
// N = Nao tributavel (quando nao atender a nenhuma das anteriores)
// Em 24/08, Prefeitura Campinas indicou para preencher esse campo com "T" para NF`s Devol.Mercadoria/Benef. com Formulário Próprio=SIM
(PREREG) (_aTotal[9]  := Iif(!empty(SF3->F3_CODISS),Iif(SF3->F3_ISSST=="2","E",Iif(SF3->F3_ISENICM > 0,"C",Iif(SF3->F3_VALICM > 0,Iif(_aTotal[8]=="1","H","T"),"N"))),IIF(SF3->F3_TIPO$'DB',"T","N")),.T.)

(PREREG) (_aTotal[12] := Iif(Empty(_aTotal[56]),"",SubStr (_aTotal[56], Iif( At(_aTotal[2],_aTotal[56])>0, At(_aTotal[2], _aTotal[56])+3, At(_aTotal[2], _aTotal[56])+4), 2)), .T.)
(PREREG) (_aTotal[13] := Iif(Empty(_aTotal[58]),"",SubStr (_aTotal[58], Iif( At(_aTotal[2],_aTotal[58])>0, At(_aTotal[2], _aTotal[58])+3, At(_aTotal[2], _aTotal[58])+4), 2)), .T.)
// Montagem da relacao de operacoes
// Sem deducao = "A"
// Se tiver deducao (materiais ou subempreitada) = "B"
(PREREG) (_aTotal[15] := Iif((SF3->F3_ISSMAT > 0) .Or. (SF3->F3_ISSSUB > 0),"B",""),.T.)
(PREREG) (_aTotal[15] := Iif(SF3->F3_TIPO == "D","D",_aTotal[13]),.T.)
// Informacoes das tabelas SFT e SB1
(PREREG) (_aTotal[19] := SFT->(dbSeek(xFilial("SF3")+Iif(SF3->F3_CFO >="5","S","E")+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_IDENTFT)),.T.)
(PREREG) (_aTotal[28] := SB1->(dbSeek(xFilial("SB1")+SFT->FT_PRODUTO)),.T.)

// Verifico o Codigo Município do cliente + Especie da Nota para saber se devemos gravar o registro ou não.
(PREREG) _aTotal[96] :=  Iif(!Empty(SA1->&(_aTotal[10])),SA1->&(_aTotal[10]),SA1->A1_COD_MUN)
(PREREG) Iif(((Alltrim(_aTotal[96]) == '09502') .And. ((Alltrim(SF3->F3_ESPECIE) == 'RPS') .Or. (Alltrim(SF3->F3_ESPECIE) == 'NFSE') .Or. (!Empty(F3_NFELETR)))), .F., .T.)

//Tratamentos por filtro
//Filtro por tipo de NF 1=Ambos ou 3= Saída e Série
(PREREG) SubStr(_aTotal[23][1][3],1,1)$"1/3" 
(PREREG) iif(empty(_aTotal[23][1][4]) .Or. Alltrim(_aTotal[23][1][4]) == Alltrim(SF3->F3_SERIE),.T.,.F.)

IDENTREG   C 001 0 "E"
EMISSAO    C 010 0 Iif(!Empty(SF3->F3_DTCANC),StrZero(Day(SF3->F3_DTCANC),2)+"/"+StrZero(Month(SF3->F3_DTCANC),2)+"/"+StrZero(Year(SF3->F3_DTCANC),4),StrZero(Day(SF3->F3_EMISSAO),2)+"/"+StrZero(Month(SF3->F3_EMISSAO),2)+"/"+StrZero(Year(SF3->F3_EMISSAO),4))
MODELONF   C 002 0 Iif( SF3->F3_FORMUL ='S',Iif(SF3->F3_TIPO=="L",_aTotal[13],_aTotal[2]),_aTotal[2])    
SERIENF    C 001 0 _aTotal[12]   
TRIBUTA    C 001 0 _aTotal[9]     
NF         C 009 0 Iif( !Empty(SF3->F3_PDV),SubStr(SF3->F3_PDV,1,3)+RetNf(SF3->F3_NFISCAL,6,"N"),RetNf(SF3->F3_NFISCAL,9,"N"))
VLRBRUTO   C 015 0 Iif(_aTotal[60],Iif(SF3->F3_FORMUL ='S',StrZero(SF1->F1_VALBRUT,15,2),StrZero(SF2->F2_VALBRUT,15,2)),StrZero(SF3->F3_VALCONT,15,2))
VLRSERV    C 015 0 Iif(_aTotal[60],Iif(SF3->F3_FORMUL <>'S',Iif(!Empty(SF3->F3_CODISS),StrZero(SF3->F3_VALCONT,15,2),StrZero(SF2->F2_VALISS,15,2)),StrZero(0,15,2)),Iif(!Empty(SF3->F3_CODISS),StrZero(SF3->F3_VALCONT,15,2),StrZero(0,15,2)))
// A = a Recolher
// R = Retido por terceiros
FORMAREC   C 001 0 Iif(Empty(SF3->F3_DTCANC),Iif(SF2->F2_VALISS<>0,Iif( SF3->F3_FORMUL ='S',Iif(SF3->F3_RECISS$"1S" , "R" , "A" ),Iif(SF3->F3_RECISS$"1S" , "R" , "A" )),"A"),"")
ALQISSQN   C 005 0 Iif(!EMPTY(SF3->F3_CODISS),Iif( _aTotal[9]=="N",StrZero(0,5,2),Iif(Empty(_aTotal[7]),StrZero(SF3->F3_ALIQICM,5,2),IIf (At(Substr(SM0->M0_CODIGO+SM0->M0_CODFIL,1,4),_aTotal[7])>0,StrZero(0,5,2),StrZero(SF3->F3_ALIQICM,5,2)))),StrZero(0,15,2))
CNPJ       C 014 0 Iif( SF3->F3_FORMUL ='S',iif(!(SF3->F3_TIPO$"DB"),Iif( RetPessoa(SA2->A2_CGC)=="F".Or.SA2->A2_EST=="EX" .Or. SF3->F3_TIPO=="L" ,Replicate("0",14),aFisFill(Num2Chr(Val(SA2->A2_CGC),14,0),14)),Iif( RetPessoa(SA1->A1_CGC)=="F".Or.SA1->A1_EST=="EX" .Or. SF3->F3_TIPO=="L" ,Replicate("0",14),aFisFill(Num2Chr(Val(SA1->A1_CGC),14,0),14))),iif(!(SF3->F3_TIPO$'DB'),Iif( RetPessoa(SA1->A1_CGC)=="F".Or.SA1->A1_EST=="EX" .Or. SF3->F3_TIPO=="L" ,Replicate("0",14),aFisFill(Num2Chr(Val(SA1->A1_CGC),14,0),14)),Iif( RetPessoa(SA2->A2_CGC)=="F".Or.SA2->A2_EST=="EX" .Or. SF3->F3_TIPO=="L" ,Replicate("0",14),aFisFill(Num2Chr(Val(SA2->A2_CGC),14,0),14))))
CPF        C 011 0 Iif( SF3->F3_FORMUL ='S',iif(!(SF3->F3_TIPO$"DB"),Iif( RetPessoa(SA2->A2_CGC)=="J".Or.SA2->A2_EST=="EX",Replicate("0",11),Iif(SF3->F3_TIPO=="L",Replicate("7",11),SA2->A2_CGC)),Iif( RetPessoa(SA1->A1_CGC)=="J".Or.SA1->A1_EST=="EX",Replicate("0",11),Iif(SF3->F3_TIPO=="L",Replicate("7",11),SA1->A1_CGC))),iif((!SF3->F3_TIPO$'DB'),Iif( RetPessoa(SA1->A1_CGC)=="J".Or.SA1->A1_EST=="EX",Replicate("0",11),Iif(SF3->F3_TIPO=="L",Replicate("7",11),SA1->A1_CGC)),Iif( RetPessoa(SA2->A2_CGC)=="J".Or.SA2->A2_EST=="EX",Replicate("0",11),Iif(SF3->F3_TIPO=="L",Replicate("7",11),SA2->A2_CGC))))
NOME       C 040 0 Iif( SF3->F3_FORMUL ='S',iif(!(SF3->F3_TIPO$"DB"),Iif( SF3->F3_TIPO=="L",Left("CONSUMIDOR",40),Left(Alltrim(SA2->A2_NOME),40)),Iif( SF3->F3_TIPO=="L",Left("CONSUMIDOR",40),Left(Alltrim(SA1->A1_NOME),40))),iif((SF3->F3_TIPO$"DB"),Iif( SF3->F3_TIPO=="L",Left("CONSUMIDOR",40),Left(Alltrim(SA2->A2_NOME),40)),Iif( SF3->F3_TIPO=="L",Left("CONSUMIDOR",40),Left(Alltrim(SA1->A1_NOME),40))))
// Codigo SIAF do municipio do tomador/prestador (de acordo com campos indicados nos parâmetros MV_CAMPSCC/MV_CAMPSCF)
TOMSIAFI   C 010 0 Iif( SF3->F3_FORMUL ='S',iif(!(SF3->F3_TIPO$"DB"),Iif( SA2->A2_EST=="EX","9999",SA2->&(_aTotal[11])),Iif( SA1->A1_EST=="EX","9999",SA1->&(_aTotal[10]))),iif((SF3->F3_TIPO$"DB"),Iif( SA2->A2_EST=="EX","9999",SA2->&(_aTotal[11])),Iif( SA1->A1_EST=="EX","9999",SA1->&(_aTotal[10]))))
//Para NF`s Serviços grava F3_CNAE do Produto Serviços;
//Se Mercadorias grava 263290000. 
//Segundo a Prefeitura-DSF, caso seja NF Devol./Benef. Form. Próprio=SIM, deve gravar qquer CNAE de SERVIÇOS (620230002 indicado pelo Adriano) uma vez que esse será desconsiderado de qquer forma.
CNAE       C 010 0 Iif(SF3->F3_TIPO == "S",SF3->F3_CNAE,Iif(Alltrim(GetNewPar("MV_CAMPCNA",""))=="",SB1->B1_CNAE,Alltrim(GetNewPar("MV_CAMPCNA",""))))
// Codigo do municipio onde foi prestado o servico
// Se for dentro do municipio - informa o codigo do contribuinte informado na wizard, senão, verifica o campo informado no parâmetro de codigo do municipio
// Se o campo informado no parâmetro estiver em branco, não deve pegar do A1/A2_COD_MUN pois é CÓD.IBGE que causa inconsistência no validador e dúvidas ao usuário
PRESIAFI   C 010 0 Iif( SF3->F3_FORMUL ='S',Iif(SF3->F3_ISSST$" 2",Iif(!(SF3->F3_TIPO$'DB'),Iif( SA2->A2_EST=="EX","9999",iif(!empty(_aTotal[67]) .and. !empty(SF1->&(_aTotal[67])),SF1->&(_aTotal[67]),Iif(!Empty(SA2->&(_aTotal[11])),SA2->&(_aTotal[11]),""))),Iif( SA1->A1_EST=="EX","9999", iif(!empty(_aTotal[68]) .and. !empty(SF2->&(_aTotal[68])),SF2->&(_aTotal[68]),Iif(!Empty(SA1->&(_aTotal[10])),SA1->&(_aTotal[10]),"")))),_aTotal[23][1][2]),Iif(SF3->F3_ISSST$" 2",Iif( SA1->A1_EST=="EX","9999", iif(!empty(_aTotal[68]) .and. !empty(SF2->&(_aTotal[68])),SF2->&(_aTotal[68]),Iif(!Empty(SA1->&(_aTotal[10])),SA1->&(_aTotal[10]),""))),_aTotal[23][1][2]))
NFFINAL    N 009 0 Iif( SF3->F3_FORMUL ='S', 0 ,Iif( SF3->F3_TIPO=="L" ,Replicate("0",9-Len(Alltrim(SF2->F2_NFORI))) + Alltrim(SF2->F2_NFORI) , 0 ))
SITNF      C 001 0 Iif( !Empty(SF3->F3_DTCANC),"C","N")
// Informa se o tomador eh cadastrado no Simples Nacional
TOMSIMP    C 001 0 Iif(SF2->F2_VALISS<>0,Iif( SF3->F3_FORMUL ='S',Iif((SA2->A2_SIMPNAC=="1"),"S","N"),Iif((SA1->A1_SIMPNAC=="1"),"S","N")),"")
// Operacao de acordo com a tabela 4.4
OPERACAO   C 001 0  Iif(!Empty(_aTotal[15]),_aTotal[15],Iif(Iif( SF3->F3_FORMUL ='S',Iif(SF3->F3_TIPO=="L",_aTotal[13],_aTotal[12]),_aTotal[12])$"40/42/G","A","B"))
(POS) FsQuery(_aTotal[1],2)

[SF3 Registro Tipo D - Deducao de Materiais das NF Emitidas de Const Civil]
// Montar para subempreitada - hoje trata apenas materiais                                       
(PRE) SF3->(dbSetOrder(1))
(PRE) SA1->(dbSetOrder(1))   
(PRE) SF2->(dbSetOrder(1))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+xFilial("SF3")+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING (F3_CFO,1,1)>='5' AND F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' AND F3_FORMUL IN(' ','N') AND F3_ISSMAT<>0 AND F3_TIPO='S' " ,"F3_FILIAL=='"+xFilial ("SF3")+"' .And. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .And. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .And. SUBS (F3_CFO, 1, 1)>='5' .And. F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' .And. F3_FORMUL$' N' .And. F3_ISSMAT<>0 .And. F3_TIPO='S' ",SF3->(IndexKey ()))
(PRE) SF3->(dbGotop())
(PREREG) (_aTotal[2] := IIF(Empty(_aTotal[55]),Left ( SerieNfId("SF3",2,"F3_SERIE") , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr (  SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2)), .T.)
(PREREG) SA1->(dbSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) SF2->(DbSeek(xFilial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) (_aTotal[12] := Iif(Empty(_aTotal[56]),"",SubStr (_aTotal[56], Iif( At(_aTotal[2],_aTotal[56])>0, At(_aTotal[2], _aTotal[56])+3, At(_aTotal[2], _aTotal[56])+4), 1)), .T.)
(PREREG) (_aTotal[13] := Iif(Empty(_aTotal[58]),"",SubStr (_aTotal[58], Iif( At(_aTotal[2],_aTotal[58])>0, At(_aTotal[2], _aTotal[58])+3, At(_aTotal[2], _aTotal[58])+4), 1)), .T.)
IDENTREG   C 001 0 "D"
EMISSAO    C 010 0 StrZero(Day(SF3->F3_EMISSAO),2)+"/"+StrZero(Month(SF3->F3_EMISSAO),2)+"/"+StrZero(Year(SF3->F3_EMISSAO),4)
SERIENF    C 002 0 _aTotal[2]
MODELONF   C 001 0 Iif(SF3->F3_TIPO=="L",_aTotal[13],Iif(Alltrim(SA1->A1_MUN)<>_aTotal[4],"R",_aTotal[12]))
NF         C 009 0 IiF( !Empty(SF3->F3_PDV),SubStr(SF3->F3_PDV,1,3)+RetNf(SF3->F3_NFISCAL,6,"N"),RetNf(SF3->F3_NFISCAL,9,"N"))
VLRBRUTO   C 015 0 Iif( !Empty(SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV,StrZero(0,15,2),StrZero(SF3->F3_VALCONT,15,2) )
DEDUCAO    C 001 0 "M"
NF         C 009 0 IiF( !Empty(SF3->F3_PDV),SubStr(SF3->F3_PDV,1,3)+RetNf(SF3->F3_NFISCAL,6,"N"),RetNf(SF3->F3_NFISCAL,9,"N"))
VLRBRUTO   C 015 0 Iif( !Empty(SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV,StrZero(0,15,2),StrZero(SF3->F3_VALCONT,15,2) )
VLRDEDU    C 015 0 Iif( !Empty(SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV,StrZero(0,15,2),StrZero(SF3->F3_ISSMAT,15,2) )
CNPJ       C 014 0 Iif( RetPessoa(SA1->A1_CGC)=="F".Or.SA1->A1_EST=="EX" .Or. SF3->F3_TIPO=="L" ,Replicate("0",14),aFisFill(Num2Chr(Val(SA1->A1_CGC),14,0),14) )
CPF        C 011 0 Iif( RetPessoa(SA1->A1_CGC)=="J".Or.SA1->A1_EST=="EX",Replicate("0",11),Iif(SF3->F3_TIPO=="L",Replicate("7",11),SA1->A1_CGC) )
NOME       C 040 0 Iif( SF3->F3_TIPO=="L",Left("CONSUMIDOR",40),Left(Alltrim(SA1->A1_NOME),40))
TOMSIAFI   C 010 0 Iif( SA1->A1_EST=="EX","9999",SA1->&(_aTotal[10]))
(POS) FsQuery(_aTotal[1],2)

[SF3 Registro Tipo R - Notas Fiscais Recebidas]
(PRE) SF3->(DbSetOrder(1))
(PRE) SA2->(DbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) SD1->(dbSetOrder(1))
(PRE) SF4->(dbSetOrder(1))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+xFilial("SF3")+"' AND F3_EMISSAO>='"+DTOS(_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS(_aTotal[98])+"' AND SUBSTRING (F3_CFO,1,1)<'5' AND F3_FORMUL IN(' ','N') AND F3_TIPO='S'", "F3_FILIAL=='"+xFilial("SF3")+"' .And. DTOS(F3_EMISSAO)>='"+DTOS(_aTotal[99])+"' .And. DTOS (F3_EMISSAO)<='"+DTOS(_aTotal[98])+"' .And. SUBS (F3_CFO,1,1)<'5' .And. F3_TIPO=='S'",SF3->(IndexKey()))
(PRE) SF3->(DbGotop())
(PREREG) SA2->(dbSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) SF1->(DbSeek(xFilial("SF1")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) SD1->(dbSeek(xFilial("SD1")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) SF4->(DbSeek(xFilial("SF4")+SD1->D1_TES))
(PREREG) Iif(!Empty(SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, .F., .T.)

// Verifico o Codigo Município do fornecedor + Especie da Nota para saber se devemos gravar o registro ou não.
(PREREG) _aTotal[97] :=  Iif(!Empty(SA2->&(_aTotal[11])),SA2->&(_aTotal[11]),SA2->A2_COD_MUN)
(PREREG) Iif(((Alltrim(_aTotal[97]) == '09502') .And. ((Alltrim(SF3->F3_ESPECIE) == 'RPS') .Or. (Alltrim(SF3->F3_ESPECIE) == 'NFSE') .Or. (!Empty(F3_NFELETR)))), .F., .T.)

(PREREG) (_aTotal[2]  := Iif(Empty(_aTotal[55]),Left (  SerieNfId("SF3",2,"F3_SERIE") , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2)), .T.)
(PREREG) (_aTotal[14] := Iif(Empty(_aTotal[57]),"",SubStr (_aTotal[57], Iif( At(_aTotal[2],_aTotal[57])>0, At(_aTotal[2], _aTotal[57])+3, At(_aTotal[2], _aTotal[57])+4), 1)), .T.)
// Montagem da relacao das operacoes
// Sem deducao = "A"
// Se tiver deducao (materiais ou subempreitada) = "B"
(PREREG) (_aTotal[15] := Iif((SF3->F3_ISSMAT > 0) .Or. (SF3->F3_ISSSUB > 0),"B",""),.T.)
(PREREG) (_aTotal[15] := Iif(SF3->F3_TIPO == "D","D",_aTotal[15]),.T.)

//COMENTAR ESTA LINHA PARA USAR DIRETO O _ATOTAL[80]
// Serie da NF de acordo com o Layout (correspondencia da serie do Protheus com a do Layout) 
(PREREG) (_aTotal[80]  := Iif(Empty(_aTotal[55]),Left ( SerieNfId("SF3",2,"F3_SERIE") , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr (  SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2)), .T.)

// Segundo a prefeitura, nao informar a serie e sim a tabela 4.6  
(PREREG) (_aTotal[81] := Iif(Left(SF3->F3_ESPECIE,2)=="NF" .And. _aTotal[80] == "OT","F",Iif(_aTotal[80]=="OT","T","")),.T.)

(PREREG) (_aTotal[81] := Iif(Empty(_aTotal[81]) .And. _aTotal[80] == "OM","R",_aTotal[81]),.T.)
(PREREG) (_aTotal[81] := Iif(Empty(_aTotal[81]),_aTotal[14],_aTotal[81]),.T.)

//Tratamentos por filtro
//Filtro por tipo de NF 1=Ambos ou 3= Saída
(PREREG) SubStr(_aTotal[23][1][3],1,1)$"1/2"
//Filtro por série
(PREREG) iif(empty(_aTotal[23][1][4]) .Or. Alltrim(_aTotal[23][1][4]) == Alltrim(SF3->F3_SERIE),.T.,.F.)

IDENTREG   C 001 0 "R"
DTRETEN    C 010 0 StrZero(Day(SF3->F3_EMISSAO),2)+"/"+StrZero(Month(SF3->F3_EMISSAO),2)+"/"+StrZero(Year(SF3->F3_EMISSAO),4)
EMISSAO    C 010 0 StrZero(Day(SF3->F3_EMISSAO),2)+"/"+StrZero(Month(SF3->F3_EMISSAO),2)+"/"+StrZero(Year(SF3->F3_EMISSAO),4)

SERIENF    C 002 0 _aTotal[80]
MODELONF   C 001 0 _aTotal[81]
// Se houve a retencao no documento, 
MOTVRET    C 001 0 Iif(SF4->F4_LFISS$"IO",SA2->&(_aTotal[25]),"")
NF         C 009 0 RetNf(SF3->F3_NFISCAL,9,"N")
VLRBRUTO   C 015 0 StrZero(SF3->F3_VALCONT,15,2)
VLRSERV    C 015 0 StrZero(SF3->F3_VALCONT,15,2)
ALQISSQN   C 005 0 StrZero(SF3->F3_ALIQICM,5,2)
PARCELA    C 006 0 "000000"
QTDPARC    C 006 0 "000000"
MOTIVONRET C 030 0 Space(30)
CNPJ       C 014 0 Iif(RetPessoa(SA2->A2_CGC)=="F".Or.SA2->A2_EST=="EX",Replicate("0",14),aFisFill(Num2Chr(Val(SA2->A2_CGC),14,0),14))
CPF        C 011 0 Iif(RetPessoa(SA2->A2_CGC)=="F",aFisFill(Num2Chr(Val(SA2->A2_CGC),11,0),11),Replicate("0",11))         
NOMEPREST  C 040 0 Left(Alltrim(SA2->A2_NOME),40)
PRESIAFI   C 010 0 Iif(!Empty(SA2->&(_aTotal[11])),SA2->&(_aTotal[11]),"")
PRESSIMP   C 001 0 Iif((SA2->A2_SIMPNAC=="1"),"S","N")
INSMUN     C 001 0 Iif((SA2->A2_INSCMU=="1"),"S","N")
CODSERV    C 010 0 SF3->F3_CODISS
LOCSIAFI   C 010 0 Iif(SF3->F3_ISSST$" 2",iif(!empty(_aTotal[67]) .and. !empty(SF1->&(_aTotal[67])),SF1->&(_aTotal[67]),Iif(!Empty(SA2->&(_aTotal[11])),SA2->&(_aTotal[11]),"")),_aTotal[23][1][2])
// Operacao de acordo com a tabela 4.4
OPERACAO   C 001 0 Iif(!Empty(_aTotal[15]),_aTotal[15],Iif(Alltrim(_aTotal[80])$"40/42/G","A","B")) 
(POS) FsQuery(_aTotal[1],2)
