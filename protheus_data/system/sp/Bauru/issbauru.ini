?{"Nome do Arquivo INI","ISSBAURU.INI"}
?{"Descrição Completa do Arquivo Magnético","Sistema Tributário Municipal On Line - Prefeitura Municipal de Bauru - SP."}
?{"A Quem se Destina","Aos contribuintes do ISSQN do município de Bauru - SP."}
?{"Objetivo","Gerar arquivo magnético pré-formatado para a importação do ISS Eletrônico de Bauru."}
?{"Prazo de Entrega","Poderão ser lançados os documentos do período anterior (anteriores ao mês em vigor), período em vigor (mês em vigor) e períodos finalizados (onde houve o fechamento do livro)."}
?{"Aplicativo Disponibilizado pelo Fisco","Não há. O arquivo deverá ser importado através do site da prefeitura, em área exclusiva ao contribuinte."}
?{"Versao do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentarios",""} 

// Indica que o arquivo devera ser montado em XML (sem tamanho definido das colunas)
@XML

[XXX Inicializacao]
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02
(PRE) _aTotal[03] := GetNewPar("MV_BAURUAT","")
(PRE) _aTotal[04] := GetNewPar("MV_BAURUSE","")

[XXX Verificacao da existencia dos parametros]
(PRE) _aTotal[05] := "Parâmetro inexistente"
(PRE) _aTotal[06] := "O parâmetro MV_BAURUAT não está definido no dicionário de dados ou "
(PRE) _aTotal[06] += "seu contúdo está vazio. Este parâmetro contém o código de atividade "
(PRE) _aTotal[06] += "do contribuinte, de acordo com a tabela de atividades municipal "
(PRE) _aTotal[06] += "(Anexo II do layout para importação dos lançamentos das notas fiscais "
(PRE) _aTotal[06] += "de prestação de serviços). O layout exige que esta informação seja "
(PRE) _aTotal[06] += "apresentada, impossibilitando a importação do arquivo gerado caso o "
(PRE) _aTotal[06] += "código esteja em branco ou com informação divergente da disponibilizada "
(PRE) _aTotal[06] += "no anexo. Para tanto, será necessário observar a solução proposta abaixo: "
(PRE) _aTotal[07] := "Estrutura do parâmetro MV_BAURUAT: "
(PRE) _aTotal[07] += "< código de atividades do contribuinte conforme tabela de atividades municipal "
(PRE) _aTotal[07] += "(Anexo II) >. Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[03]),xMagHelpFis(_aTotal[05],_aTotal[06],_aTotal[07]),.T.)
(PRE) _aTotal[05] := "Parâmetro inexistente"
(PRE) _aTotal[06] := "O parâmetro MV_BAURUSE não está definido no dicionário de dados ou "
(PRE) _aTotal[06] += "seu contúdo está vazio. Este parâmetro contém as séries utilizadas no "
(PRE) _aTotal[06] += "Protheus e as séries que deverão ser apresentadas no arquivo magnético "
(PRE) _aTotal[06] += "de importação, conforme as instruções do Anexo I - Série - do layout para "
(PRE) _aTotal[06] += "importação dos lançamentos das notas fiscais de prestação de serviços. "
(PRE) _aTotal[06] += "O layout exige que esta informação seja apresentada conforme o anexo. "
(PRE) _aTotal[06] += "Caso o parâmetro não esteja configurado corretamente, as séries informadas "	
(PRE) _aTotal[06] += "no arquivo serão as mesmas utilizadas no Protheus, podendo ocorrer divergências. "
(PRE) _aTotal[06] += "Para tanto, será necessário observar a solução proposta abaixo: "
(PRE) _aTotal[07] := "Estrutura do parâmetro MV_BAURUSE: "
(PRE) _aTotal[07] += "< série utilizada no Protheus/Série disponível no Layout, "
(PRE) _aTotal[07] += "série utilizada no Protheus/Série disponível no Layout, "
(PRE) _aTotal[07] += "série utilizada no Protheus/Série disponível no Layout,... >. "
(PRE) _aTotal[07] += "Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[03]),xMagHelpFis(_aTotal[05],_aTotal[06],_aTotal[07]),.T.)

[XXX Cabecalho do XML]
(PRE) _aTotal[09]:= "<?xml version="+'"1.0"'+" encoding="+'"ISO-8859-1"'+" ?>"
Linha1     C 000 0 _aTotal[09]

[XXX Importacao - Inicio do arquivo]
Imp        C 000 0 MontaXML("importacao",,,,,,0,.T.,.F.,.F.)

[XXX Contribuinte - Inicio do arquivo]         
(PRE) _aTotal[10] := aRetDig(AllTrim(SM0->M0_INSCM),.T.,"")                                                    
InscrMun   C 000 0 MontaXML('contribuinte im="'+_aTotal[10] + '"',,,,,,6,.T.,.F.,.F.)

[SF3 - Movimentos do Periodo - Servicos Prestados]
(PRE) SF3->(dbSetOrder(5))
(PRE) _aTotal[08] := {"SF3",""}
(PRE) FsQuery(_aTotal[08],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + dTos(_aTotal[01]) + "' AND F3_ENTRADA <= '" + dTos(_aTotal[02]) + "' AND F3_CODISS <> '' AND F3_TIPO = 'S' AND SUBSTRING(F3_CFO,1,1) >= '5'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. !Empty(F3_CODISS) .And. F3_TIPO == 'S' .And. SubStr(F3_CFO,1,1) >= '5'",SF3->(IndexKey()))
(PRE) SF3->(dbGoTop())                        
(PRE) SA1->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))
(PRE) _aTotal[19] := .T.
// Monta a serie a ser apresentada
(PREREG) (_aTotal[11] := At(Alltrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[04]),.T.)
(PREREG) (_aTotal[12] := Iif(_aTotal[11]>0,SubStr(_aTotal[04],_aTotal[11]+4,1),Alltrim( SerieNfId("SF3",2,"F3_SERIE") )),.T.)
// Verifica o cliente/fornecedor do documento
(PREREG) SA1->(dbSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) (_aTotal[13] := SA1->A1_CGC,.T.)
(PREREG) (_aTotal[16] := RetPessoa(_aTotal[13]),.T.)
(PREREG) (_aTotal[18] := SA1->A1_RECISS,.T.)
// Tipo da pessoa - Fisica / Juridica
(PREREG) (_aTotal[17] := Iif(_aTotal[16]=="J","2","1"),.T.)
// O CNPJ/CPF devera ser apresentado com mascaras
(PREREG) (_aTotal[13] := Iif(_aTotal[16]=="J",Transform(_aTotal[13],"@R 99.999.999/9999-99"),Transform(_aTotal[13],"@R 999.999.999-99")),.T.)
// ISS Retido
(PREREG) (_aTotal[20] := Iif(_aTotal[19],SF3->F3_RECISS,&_aTotal[18]),.T.)
(PREREG) (_aTotal[21] := Iif(_aTotal[20] $ "S1","1","2"),.T.)
// Descricao do servico prestado
(PREREG) (SX5->(dbSeek(xFilial("SX5")+"60"+SF3->F3_CODISS)),.T.)
(PREREG) (_aTotal[15] := SX5->X5_DESCRI,.T.)
// Situacao do documento - Cancelado ou Original
(PREREG) (_aTotal[24] := Iif(!Empty(SF3->F3_DTCANC),"2","1"),.T.)
// Nota fiscal tributada ou nao
(PREREG) (_aTotal[22] := Iif(SF3->F3_VALICM>0,"1","2"),.T.)
// Data de emissao/entrada a ser apresentada
(PREREG) (_aTotal[23] := StrZero(Day(SF3->F3_ENTRADA),2) + "/" + StrZero(Month(SF3->F3_ENTRADA),2)  + "/" + StrZero(Year(SF3->F3_ENTRADA),4),.T.)
NOTA       C 000 0 MontaXML("nota",,,,,,12,.T.,.F.,.T.)
Numero     C 000 0 MontaXML("numero",Str(Val(SF3->F3_NFISCAL)),"C",TamSX3("F3_NFISCAL")[01],0,"",18,.T.,.T.,.T.)
Serie      C 000 0 MontaXML("serie",_aTotal[12],"C",1,0,"",18,.T.,.T.,.T.)
EmiEnt     C 000 0 MontaXML("data",_aTotal[23],"C",10,0,"",18,.T.,.T.,.T.)
Valor      C 000 0 MontaXML("valor",SF3->F3_VALCONT,"N",TamSX3("F3_VALCONT")[01],TamSX3("F3_VALCONT")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
Base       C 000 0 MontaXML("baseCalculo",SF3->F3_BASEICM,"N",TamSX3("F3_BASEICM")[01],TamSX3("F3_BASEICM")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
Aliquota   C 000 0 MontaXML("aliquota",SF3->F3_ALIQICM,"N",TamSX3("F3_ALIQICM")[01],TamSX3("F3_ALIQICM")[02],"@R 99.99",18,.T.,.T.,.T.)
ValIssqn   C 000 0 MontaXML("valorIssqn",SF3->F3_VALICM,"N",TamSX3("F3_VALICM")[01],TamSX3("F3_VALICM")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
TipoNota   C 000 0 MontaXML("tipoNota","1","C",1,0,"",18,.T.,.T.,.T.)
Atividade  C 000 0 MontaXML("atividade",_aTotal[03],"C",Len(Alltrim(_aTotal[03])),0,"",18,.T.,.T.,.T.)
Descricao  C 000 0 MontaXML("descricaoServico",SX5->X5_DESCRI,"C",TamSX3("X5_DESCRI")[01],0,"",18,.T.,.T.,.T.)
Situacao   C 000 0 MontaXML("situacao",_aTotal[24],"C",1,0,"",18,.T.,.T.,.T.)
Enquadra   C 000 0 MontaXML("enquadramentoFiscal",_aTotal[22],"C",1,0,"",18,.T.,.T.,.T.)
Retencao   C 000 0 MontaXML("retencao",_aTotal[21],"C",1,0,"",18,.T.,.T.,.T.)
TipoPessoa C 000 0 MontaXML("tipoPessoa",_aTotal[17],"C",1,0,"",18,.T.,.T.,.T.)
Inscricao  C 000 0 MontaXML("inscricao",_aTotal[13],"C",Len(Alltrim(_aTotal[13])),0,"",18,.T.,.T.,.T.)
TipoTalao  C 000 0 MontaXML("tipotalao","","C",2,0,"",18,.T.,.T.,.T.)
SubSerie   C 000 0 MontaXML("subserie","","C",1,0,"",18,.T.,.T.,.T.)
NOTAFIM    C 000 0 MontaXML("nota",,,,,,12,.F.,.T.,.F.)
(POS) FsQuery(_aTotal[08],2)                 

[SF3 - Movimentos do Periodo - Servicos Tomados]
(PRE) SF3->(dbSetOrder(5))
(PRE) _aTotal[08] := {"SF3",""}
(PRE) FsQuery(_aTotal[08],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + dTos(_aTotal[01]) + "' AND F3_ENTRADA <= '" + dTos(_aTotal[02]) + "' AND F3_CODISS <> '' AND F3_TIPO = 'S' AND SUBSTRING(F3_CFO,1,1) < '5'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. !Empty(F3_CODISS) .And. F3_TIPO == 'S' .And. SubStr(F3_CFO,1,1) < '5'",SF3->(IndexKey()))
(PRE) SF3->(dbGoTop())                        
(PRE) SA2->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))
(PRE) _aTotal[19] := .T.
// Monta a serie a ser apresentada
(PREREG) (_aTotal[11] := At(Alltrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[04]),.T.)
(PREREG) (_aTotal[12] := Iif(_aTotal[11]>0,SubStr(_aTotal[04],_aTotal[11]+4,1),Alltrim( SerieNfId("SF3",2,"F3_SERIE") )),.T.)
// Verifica o cliente/fornecedor do documento
(PREREG) SA2->(dbSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) (_aTotal[13] := SA2->A2_CGC,.T.)
(PREREG) (_aTotal[16] := RetPessoa(_aTotal[13]),.T.)
(PREREG) (_aTotal[18] := SA2->A2_RECISS,.T.)
// Tipo da pessoa - Fisica / Juridica
(PREREG) (_aTotal[17] := Iif(_aTotal[16]=="J","2","1"),.T.)
// O CNPJ/CPF devera ser apresentado com mascaras
(PREREG) (_aTotal[13] := Iif(_aTotal[16]=="J",Transform(_aTotal[13],"@R 99.999.999/9999-99"),Transform(_aTotal[13],"@R 999.999.999-99")),.T.)
// ISS Retido
(PREREG) (_aTotal[20] := Iif(_aTotal[19],SF3->F3_RECISS,&_aTotal[18]),.T.)
(PREREG) (_aTotal[21] := Iif(_aTotal[20] $ "N2","1","2"),.T.)
// Descricao do servico prestado
(PREREG) (SX5->(dbSeek(xFilial("SX5")+"60"+SF3->F3_CODISS)),.T.)
(PREREG) (_aTotal[15] := SX5->X5_DESCRI,.T.)
// Situacao do documento - Cancelado ou Original
(PREREG) (_aTotal[24] := Iif(!Empty(SF3->F3_DTCANC),"2","1"),.T.)
// Nota fiscal tributada ou nao
(PREREG) (_aTotal[22] := Iif(SF3->F3_VALICM>0,"1","2"),.T.)
// Data de emissao/entrada a ser apresentada
(PREREG) (_aTotal[23] := StrZero(Day(SF3->F3_ENTRADA),2) + "/" + StrZero(Month(SF3->F3_ENTRADA),2)  + "/" + StrZero(Year(SF3->F3_ENTRADA),4),.T.)
NOTA       C 000 0 MontaXML("nota",,,,,,12,.T.,.F.,.T.)
Numero     C 000 0 MontaXML("numero",Str( Val(SF3->F3_NFISCAL)),"C",TamSX3("F3_NFISCAL")[01],0,"",18,.T.,.T.,.T.)
Serie      C 000 0 MontaXML("serie",_aTotal[12],"C",1,0,"",18,.T.,.T.,.T.)
EmiEnt     C 000 0 MontaXML("data",_aTotal[23],"C",10,0,"",18,.T.,.T.,.T.)
Valor      C 000 0 MontaXML("valor",SF3->F3_VALCONT,"N",TamSX3("F3_VALCONT")[01],TamSX3("F3_VALCONT")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
Base       C 000 0 MontaXML("baseCalculo",SF3->F3_BASEICM,"N",TamSX3("F3_BASEICM")[01],TamSX3("F3_BASEICM")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
Aliquota   C 000 0 MontaXML("aliquota",SF3->F3_ALIQICM,"N",TamSX3("F3_ALIQICM")[01],TamSX3("F3_ALIQICM")[02],"@R 99.99",18,.T.,.T.,.T.)
ValIssqn   C 000 0 MontaXML("valorIssqn",SF3->F3_VALICM,"N",TamSX3("F3_VALICM")[01],TamSX3("F3_VALICM")[02],"@R 99999999999.99",18,.T.,.T.,.T.)
TipoNota   C 000 0 MontaXML("tipoNota","2","C",1,0,"",18,.T.,.T.,.T.)
Atividade  C 000 0 MontaXML("atividade",_aTotal[03],"C",Len(Alltrim(_aTotal[03])),0,"",18,.T.,.T.,.T.)
Descricao  C 000 0 MontaXML("descricaoServico",SX5->X5_DESCRI,"C",TamSX3("X5_DESCRI")[01],0,"",18,.T.,.T.,.T.)
Situacao   C 000 0 MontaXML("situacao",_aTotal[24],"C",1,0,"",18,.T.,.T.,.T.)
Enquadra   C 000 0 MontaXML("enquadramentoFiscal",_aTotal[22],"C",1,0,"",18,.T.,.T.,.T.)
Retencao   C 000 0 MontaXML("retencao",_aTotal[21],"C",1,0,"",18,.T.,.T.,.T.)
TipoPessoa C 000 0 MontaXML("tipoPessoa",_aTotal[17],"C",1,0,"",18,.T.,.T.,.T.)
Inscricao  C 000 0 MontaXML("inscricao",_aTotal[13],"C",Len(Alltrim(_aTotal[13])),0,"",18,.T.,.T.,.T.)
TipoTalao  C 000 0 MontaXML("tipotalao","","C",2,0,"",18,.T.,.T.,.T.)
SubSerie   C 000 0 MontaXML("subserie","","C",1,0,"",18,.T.,.T.,.T.)
NOTAFIM    C 000 0 MontaXML("nota",,,,,,12,.F.,.T.,.F.)
(POS) FsQuery(_aTotal[08],2)                 

[XXX Contribuinte - Final do arquivo]         
Contrib    C 000 0 MontaXML("contribuinte",,,,,,6,.F.,.T.,.F.)

[XXX Rodape do XML]                                        
XML        C 000 0 MontaXML("importacao",,,,,,0,.F.,.T.,.F.)
