?{"Nome do Arquivo INI","NFEMO.INI"}
?{"Descrição Completa do Arquivo Magnético","Arquivo de Importacão de Recibos Provisórios de Serviços (RPS) para importação no site da Prefeitura Municipal de Mogi das Cruzes - SP - para conversão em Nota Fiscal Digital de Servi;o (ISS.NET)."}                                       
?{"A Quem se Destina","A todos os prestadores de serviços estabelecidos no município de Mogi das Cruzes- SP - com receita bruta de serviços igual ou superior a R$ 1.000,00. Quem não quiser aderir, deve entrar com processo de solicitação em regime especial."}
?{"Objetivo","Gerar um arquivo magnético com as informações que devem ser convertidas em Nota Fiscal Digital."}
?{"Prazo de Entrega","Não há prazo de entrega. Após emitido, um RPS deverá ser transformado em Nota Fiscal Digital no prazo máximo de 10 dias."}
?{"Aplicativo Disponibilizado pelo Fisco","Não há. O meio magnético deverá ser enviado via Internet para processamento."}
?{"Versão do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentarios",""}

[XXX Inicializacao]
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02
(PRE) _aTotal[03] := .T.
(PRE) _aTotal[04] := {}                                         
(PRE) _aTotal[05] := {}      
(PRE) _aTotal[06] := .F.      
(PRE) _aTotal[07] := {}                        
(PRE) _aTotal[20] := 0                        
(PRE) _aTotal[21] := 0                        
(PRE) _aTotal[22] := 0          
(PRE) _aTotal[24] := 0           
// Total COFINS
(PRE) _aTotal[25] := 0          
// Total CSLL  
(PRE) _aTotal[26] := 0          
// Total INSS   
(PRE) _aTotal[27] := 0          
// Total IRRF  
(PRE) _aTotal[28] := 0          
// Total PIS   
(PRE) _aTotal[29] := 0          
(PRE) _aTotal[34] := ""
(PRE) _aTotal[78] := ""
(PRE) _aTotal[79] := ""
(PRE) _aTotal[85] := IntTMS()
(PRE) _aTotal[86] := {}
(PRE) _aTotal[57] := 0
(PRE) _aTotal[96] :=  ""                       

[XXX Parametros da rotina]                 
(PRE) _aTotal[30] := GetNewPar("MV_NFESERV","")
(PRE) _aTotal[31] := "Parâmetro inexistente"
(PRE) _aTotal[32] := "O parâmetro MV_NFESERV não está definido no dicionário de dados. "
(PRE) _aTotal[32] += "Este parâmetro irá indicar como deverá ser composta a descrição "
(PRE) _aTotal[32] += "do serviço prestado no documento. Caso este parâmetro não seja "
(PRE) _aTotal[32] += "cadastrado, a descrição sempre será composta pelo conteúdo "
(PRE) _aTotal[32] += "da tabela 60 do SX5. O programa tem a opção de compor a descrição "
(PRE) _aTotal[32] += "do serviço prestado observando também a mensagem da nota fiscal "
(PRE) _aTotal[32] += "lançada no pedido de vendas. Para tanto, será necessário observar "
(PRE) _aTotal[32] += "a solução proposta abaixo: "
(PRE) _aTotal[33] := "Estrutura do parâmetro MV_NFESERV: "
(PRE) _aTotal[33] += "<indica se a descrição do serviço prestado na Nota Fiscal "
(PRE) _aTotal[33] += "Eletrônica deverá ser composta 1 = pelo pedido de vendas ou "
(PRE) _aTotal[33] += "descrição do SX5 ou 2 - somente pela descrição do SX5>."
(PRE) _aTotal[33] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[30]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) _aTotal[30] := Iif(Empty(_aTotal[30]),"2",_aTotal[30])
(PRE) _aTotal[36] := GetNewPar("MV_SERIE","")
(PRE) _aTotal[37] := "Parâmetro não existe"
(PRE) _aTotal[38] := "O parâmetro MV_SERIE não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[38] += "Para que as séries dos documentos fiscais sejam lançadas corretamente no meio magnético "
(PRE) _aTotal[38] += "é necessário respeitar a solução proposta abaixo"
(PRE) _aTotal[39] := "Incluir o parâmetro MV_SERIE (tipo caractere) na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[39] += "[Serie no Sistema (com três caracteres)]-[Serie no Sistema da Prefeitura (com dois caracteres)]" 
(PRE) _aTotal[39] += "  Exemplo:  1  -U /2  -U /. Para separar a serie do sistema da serie da Prefeitura, utilize o '-' (hífen)."
(PRE) _aTotal[39] += " Para separar grupos de séries, utilize a '/' (barra). Para maiores informações, consultar a documentação da rotina"
(PRE) Iif(Empty(_aTotal[36]),xMagHelpFis(_aTotal[37],_aTotal[38],_aTotal[39]),.T.)

[XXX Montagem do CFP Utilizado pela rotina - PRINCIPAL]
(PRE) aAdd(_aTotal[04],"Exportação da Nota Fiscal Digital de Serviço")
(PRE) aAdd(_aTotal[04],"")
(PRE) aAdd(_aTotal[04],"Preencha corretamente as informações solicitadas.")
(PRE) aAdd(_aTotal[04],"Informações necessárias à geração do arquivo de exportação para geração da Nota Fiscal Digital de Mogi das Cruzes - SP.")

[XXX Painel 1 - Configuracoes Gerais]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][1],"Exportação da Nota Fiscal Digital de Serviço")
(PRE) aAdd(_aTotal[05][1],"Configurações gerais:")
(PRE) aAdd(_aTotal[05][1],{})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Inscrição Municipal do contribuinte: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"XXXXXXXXXXXXXXXXXXXX",1,,,,20})


[XXX Painel 2 - Filtros para selecao dos RPSs]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][2],"Exportação da Nota Fiscal Digital de Serviço")
(PRE) aAdd(_aTotal[05][2],"Filtros para seleção dos Documentos:")
(PRE) aAdd(_aTotal[05][2],{})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente Inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente Final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Documento Inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Documento Final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})

[XXX Chamada do Wizard]
(PRE) _aTotal[06] := xMagWizard(_aTotal[04],_aTotal[05],"NFEMO")
(PRE) Iif(_aTotal[06],xMagLeWiz("NFEMO",@_aTotal[07],.T.),Nil)
(PRE) lAbtMT950	:= !_aTotal[06]

[XXX Movimentos que serao apresentados no periodo - RPS]
(PRE) SF3->(dbSetOrder(1))
(PRE) _aTotal[10] := {"SF3",""}
(PRE) _aTotal[78] := "F3_FILIAL='"+xFilial("SF3")+"' AND F3_ENTRADA>='"+DTOS(_aTotal[01])+"' AND F3_ENTRADA<='"+DTOS(_aTotal[02])+"' AND "
(PRE) _aTotal[78] += " SUBSTRING(F3_CFO,1,1)>='5' AND F3_CODISS<>'' AND F3_PDV='' AND (F3_DTCANC='' OR F3_OBSERV NOT LIKE '%CANCELAD%') AND "
(PRE) _aTotal[78] += " F3_CLIEFOR>='"+_aTotal[07][02][01]+"' AND F3_LOJA>='"+_aTotal[07][02][02]+"' AND F3_CLIEFOR<='"+_aTotal[07][02][03]+"' AND F3_LOJA<='"+_aTotal[07][02][04]+"' AND "
(PRE) _aTotal[78] += " F3_NFISCAL>='"+_aTotal[07][02][05]+"' AND F3_NFISCAL<= '"+_aTotal[07][02][06]+"'"
(PRE) _aTotal[79] := "F3_FILIAL=='"+xFilial("SF3")+"' .AND. DTOS(F3_ENTRADA)>='"+DTOS(_aTotal[01])+"' .AND. DTOS(F3_ENTRADA)<='"+DTOS(_aTotal[02])+"' .And. "
(PRE) _aTotal[79] += "SubStr(AllTrim(F3_CFO),1,1)>='5' .And. !Empty(F3_CODISS) .And. Empty(F3_PDV) .And.( Empty(F3_DTCANC) .Or. !'CANCEL'$F3_OBSERV) .And. "
(PRE) _aTotal[79] += "F3_CLIEFOR>='"+_aTotal[07][02][01]+"' .And. F3_LOJA>='"+_aTotal[07][02][02]+"' .And. F3_CLIEFOR<='"+_aTotal[07][02][03]+"' .And. F3_LOJA<='"+_aTotal[07][02][04]+"' .And. "
(PRE) _aTotal[79] += "F3_NFISCAL>='"+_aTotal[07][02][05]+"' .And. F3_NFISCAL<='"+_aTotal[07][02][06]+"'"
(PRE) FsQuery(_aTotal[10],1,_aTotal[78],_aTotal[79],SF3->(IndexKey()))
(PRE) SF3->(dbGoTop())  

[XXX Parametro para desconsiderar a IM passada na wizard]
(PRE) _aTotal[90] := GetNewPar("MV_NFEINSC","")
(PRE) _aTotal[91] := Iif(!Empty(_aTotal[90]),_aTotal[90],_aTotal[07][01][01]) 

[SF3 - Registro tipo 991 - Faturamento]
(PRE) SA1->(dbSetOrder(1))
(PRE) SC6->(dbSetOrder(4))
(PRE) SX5->(dbSetOrder(1))
(PRE) SYA->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1))                     
// Cliente/fornecedor do documento
(PREREG) Iif(!(SF3->F3_TIPO$"D/B"),SA1->(MsSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(MsSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[40] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_MUN,SA2->A2_MUN),.T.)
(PREREG) (_aTotal[41] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_CGC,SA2->A2_CGC),.T.)
(PREREG) (_aTotal[42] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_INSCRM,.F.),aRetDig(SA2->A2_INSCRM,.F.)),.T.)
(PREREG) (_aTotal[43] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_TEL,SA2->A2_TEL),.T.)
(PREREG) (_aTotal[44] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_NOME,SA2->A2_NOME),.T.)
(PREREG) (_aTotal[45] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_END,SA2->A2_END),.T.)
(PREREG) (_aTotal[46] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_BAIRRO,SA2->A2_BAIRRO),.T.)
(PREREG) (_aTotal[47] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EST,SA2->A2_EST),.T.)
(PREREG) (_aTotal[48] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_CEP,.F.),aRetDig(SA2->A2_CEP,.F.)),.T.)
(PREREG) (_aTotal[49] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EMAIL,SA2->A2_EMAIL),.T.)
(PREREG) (_aTotal[60] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_RECISS,SA2->A2_RECISS),.T.)  
(PREREG) (_aTotal[97] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_PAIS,SA2->A2_PAIS),.T.)  
(PREREG) (_aTotal[95] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_NREDUZ,SA2->A2_NREDUZ),.T.)  
(PREREG) (_aTotal[70] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_DDD,SA2->A2_DDD),.T.)  
(PREREG) (_aTotal[34] := SF2->(MsSeek(F3Filial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.)
// CNPJ em branco para tomadores do exterior
(PREREG) (_aTotal[41] := Iif(_aTotal[47] == "EX","",_aTotal[41]),.T.)
// Verifica a situacao do RPS
// T = tributado conforme o documento
// I = isenta ou nao tributavel, executada em Mogi das Cruzes
// F = isenta ou nao tributavel pelo municipio Manuas, executada em outro municipio
// C = cancelado
// E = extraviado                                     
// J = ISS suspenso por decisao judicial
(PREREG) (_aTotal[87] := SF3->F3_ISSST,.T.)
(PREREG) (_aTotal[17] := NFePstServ(_aTotal[40],_aTotal[47],"MOGI DAS CRUZES","SP",SF3->F3_DTCANC,_aTotal[87],SF3->F3_ISENICM+SF3->F3_OUTRICM),.T.)
(PREREG) (_aTotal[21] += Iif(_aTotal[17] == "C",0,SF3->F3_VALCONT),.T.)
(PREREG) (_aTotal[22] += Iif(_aTotal[17] == "C",0,SF3->F3_ISSSUB),.T.)
(PREREG) (_aTotal[24] += Iif(_aTotal[17] == "C",0,SF3->F3_ISSMAT),.T.)
// Total Cofins
(PREREG) (_aTotal[25] += Iif(_aTotal[17] == "C",0,SF2->F2_VALCOFI),.T.)
// Total CSLL  
(PREREG) (_aTotal[26] += Iif(_aTotal[17] == "C",0,SF2->F2_VALCSLL),.T.)
// Total INSS   
(PREREG) (_aTotal[27] += Iif(_aTotal[17] == "C",0,SF2->F2_VALINSS),.T.)
// Total IRRF   
(PREREG) (_aTotal[28] += Iif(_aTotal[17] == "C",0,SF2->F2_VALIRRF),.T.)
// Total PIS   
(PREREG) (_aTotal[29] += Iif(_aTotal[17] == "C",0,SF2->F2_VALPIS),.T.)
// Somente tomadores do municipio de MOGI DAS CRUZES devem ter Inscricao Municipal
(PREREG) (_aTotal[42] := Iif(Alltrim(_aTotal[40])$"MOGI DAS CRUZES" .And. _aTotal[47] == "SP",_aTotal[42],""),.T.)
// Bairro deve conter o nome da cidade e o pais do tomador do exterior   
(PREREG) (SYA->(dbSeek(xFilial("SYA")+_aTotal[97])),.T.)
(PREREG) (_aTotal[46] := Iif(_aTotal[47] == "EX",Alltrim(_aTotal[40]) + "-" + Alltrim(SYA->YA_DESCR),_aTotal[46]),.T.)
// CEP em branco para os tomadores do exterior 
(PREREG) (_aTotal[48] := Iif(_aTotal[47] == "EX","",_aTotal[48]),.T.)
// Cidade em branco para os tomadores do exterior
(PREREG) (_aTotal[40] := Iif(_aTotal[47] == "EX","",_aTotal[40]),.T.)
// UF em branco para os tomadores do exterior
(PREREG) (_aTotal[47] := Iif(_aTotal[47] == "EX","",_aTotal[47]),.T.)      
(PREREG) (_aTotal[18] := Iif(!(AllTrim( SerieNfId("SF3",2,"F3_SERIE") )$_aTotal[36]),0,At(AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[36])), .T.)
(PREREG) (_aTotal[19] := SubStr(_aTotal[36],_aTotal[18]+4,2),.T.)
(PREREG) (_aTotal[96] := F3_FILIAL+DTOS(F3_ENTRADA)+F3_NFISCAL+F3_SERIE+F3_CLIEFOR+F3_LOJA+F3_CFO,.T.)
TIPO       C 003 0 "991"
SERIERPS   C 002 0 Replicate("0",2-Len(Alltrim(_aTotal[19]))) + Alltrim(_aTotal[19])
NUMERORPS  C 007 0 RetNf(SF3->F3_NFISCAL,7,"N")
NATUREZA   C 001 0 SubStr(AllTrim (SF3->F3_CFOEXT), 1, 1)
EMISRPS    C 008 0 StrZero(Day(SF3->F3_ENTRADA),2) + StrZero(Month(SF3->F3_ENTRADA),2)+StrZero(Year(SF3->F3_ENTRADA),4)
SITTRIB    C 001 0 Iif(_aTotal[17]$"T/I", "S","N")
CPFCNPJPRE C 014 0 SM0->M0_CGC
INSCMUNPRE C 020 0 Transform(Replicate(" ",20-Len(Alltrim(_aTotal[91]))) + Alltrim(_aTotal[91]),"@E 999999999999999999-9")
CODMUN     C 003 0 "003"
CPFCNPJTO  C 014 0 _aTotal[41]
RAZAOSOC   C 050 0 Alltrim(_aTotal[44])
NOMEFANT   C 050 0 Alltrim(_aTotal[95])
ENDERECO   C 050 0 _aTotal[45]
BAIRRO     C 020 0 _aTotal[46]
CIDADE     C 030 0 _aTotal[40]
UF         C 002 0 _aTotal[47]
CEP        C 008 0 Replicate("0",8-Len(Alltrim(_aTotal[48]))) + Alltrim(_aTotal[48])
TELEFONE   C 010 0 Right(Alltrim(_aTotal[70]),2)+ Alltrim(_aTotal[43])
EMAIL      C 050 0 Alltrim(_aTotal[49])
VALPIS     N 012 2 SF2->F2_VALPIS   
VALCOF     N 012 2 SF2->F2_VALCOFI
VALCSLL    N 012 2 SF2->F2_VALCSLL
VALIRRF    N 012 2 SF2->F2_VALIRRF 
VALINSS    N 012 2 SF2->F2_VALINSS
DESCDED    C 100 0 ""
VALDED     N 012 2 (Iif(_aTotal[17] == "C",0,SF3->F3_ISSMAT))
EMISRPS    C 008 0 StrZero(Day(SF3->F3_ENTRADA),2) + StrZero(Month(SF3->F3_ENTRADA),2)+StrZero(Year(SF3->F3_ENTRADA),4)
SERIERPS   C 002 0 Replicate("0",2-Len(Alltrim(_aTotal[19])))+_aTotal[19]
NUMERORPS  C 010 0 RetNf(SF3->F3_NFISCAL,10,"N") 
PAISTOM    C 020 0 Alltrim(SYA->YA_DESCR)
(POS) FsQuery(_aTotal[10],2)
{SF3 - Registro tipo 992 - SERVICO}   
(CHV) F3_FILIAL+DTOS(F3_ENTRADA)+F3_NFISCAL+F3_SERIE+F3_CLIEFOR+F3_LOJA+F3_CFO == _aTotal[96]   
(PRE) SD2->(dbSetOrder(3)) 
(PRE) SA1->(dbSetOrder(1))
(PRE) SC6->(dbSetOrder(4))
(PRE) SC5->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))
(PREREG) (SD2->(DbSeek (xFilial ("SD2")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA)), .T.)
// Cliente/fornecedor do documento
(PREREG) Iif(!(SF3->F3_TIPO$"D/B"),SA1->(MsSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(MsSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[60] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_RECISS,SA2->A2_RECISS),.T.)  
// Descricao dos servicos pelo pedido
(PREREG) (_aTotal[23] := "",.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC6->(dbSeek(xFilial("SC6")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC5->(dbSeek(xFilial("SC5")+SC6->C6_NUM)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",_aTotal[23] := SC5->C5_MENNOTA,.T.),.T.)
// Descricao dos servicos pelo codigo do servico - F3_CODISS
(PREREG) (Iif(Empty(_aTotal[23]),SX5->(dbSeek(xFilial("SX5")+"60"+SF3->F3_CODISS)),.T.),.T.)
(PREREG) (_aTotal[23] := Iif(Empty(_aTotal[23]),SX5->X5_DESCRI,_aTotal[23]),.T.)
(PREREG) (_aTotal[23] := Iif(_aTotal[17] == "C","",_aTotal[23]),.T.)                    
// Recolhimento do ISS de responsabilidade do cliente
(PREREG) (_aTotal[61] := SF3->F3_RECISS,.T.)
(PREREG) (_aTotal[23] := Iif(!Empty(_aTotal[81]),_aTotal[81],_aTotal[23]),.T.)
TIPO       C 003 0 "992"                                                                                   
CODSERV    C 008 0 Replicate("",8-Len(Alltrim(SF3->F3_CODISS))) + Alltrim(SF3->F3_CODISS)
QUANTI     N 006 0 SD2->D2_QUANT
SERVICOS   C 100 0 AllTrim(_aTotal[23])
ALIQUOTA   N 005 2 SF3->F3_ALIQICM
VALSERV    N 012 2 Iif(_aTotal[17] == "C",0,SF3->F3_VALCONT)
ISSRET     C 001 0 Iif(Empty(_aTotal[61]),"N",_aTotal[61])
{SF3 - Registro tipo 993 - FINANCEIRO} 
(CHV) F3_FILIAL+DTOS(F3_ENTRADA)+F3_NFISCAL+F3_SERIE+F3_CLIEFOR+F3_LOJA+F3_CFO == _aTotal[96]  
(PRE) SE1->(DbSetOrder (2))
(PREREG) (SE1->(DbSeek (xFilial ("SE1")+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_SERIE+SF3->F3_NFISCAL)), .T.)
TIPO       C 003 0 "993"
FATURA     C 010 O SE1->E1_NUM
DTVENC     C 008 0 StrZero(Day(SE1->E1_VENCTO),2) + StrZero(Month(SE1->E1_VENCTO),2)+StrZero(Year(SE1->E1_VENCTO),4)
VALOR      N 012 2 Iif(Empty(SE1->E1_VENCTO),0,SF3->F3_VALCONT)
(POS)

