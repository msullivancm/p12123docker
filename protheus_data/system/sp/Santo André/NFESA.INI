?{"Nome do Arquivo INI","NFESA.INI"}
?{"Descrição Completa do Arquivo Magnético","Arquivo de Importacão de Recibos Provisórios de Serviços (RPS) para importação no site da Prefeitura Municipal de São Paulo - SP - para conversão em Nota Fiscal Eletrônica (NF-e)."}
?{"A Quem se Destina","A todos os prestadores de serviços estabelecidos no município de Santo Andre - SP - com receita bruta de serviços igual ou superior a R$ 240.000,00. Abaixo desta receita bruta, a utilização é opcional."}
?{"Objetivo","Gerar um arquivo magnético com as informações que devem ser convertidas em NF-e."}
?{"Prazo de Entrega","Não há prazo de entrega. Após emitido, um RPS deverá ser transformado em NF-e no prazo máximo de 10 dias."}
?{"Aplicativo Disponibilizado pelo Fisco","Não há. O meio magnético deverá ser enviado via Internet para processamento."}
?{"Versão do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentarios",""}

[XXX Inicializacao]
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02
(PRE) _aTotal[03] := .T.
(PRE) _aTotal[04] := {}      
(PRE) _aTotal[05] := {}      
(PRE) _aTotal[06] := .F.      
(PRE) _aTotal[07] := {}                        
(PRE) _aTotal[20] := 0                        
(PRE) _aTotal[21] := 0                        
(PRE) _aTotal[22] := 0  
(PRE) _aTotal[24] := 0         
(PRE) _aTotal[85] := IntTMS()
(PRE) _aTotal[86] := {}
(PRE) _aTotal[78] := ""
(PRE) _aTotal[79] := ""

[XXX Parametros da rotina]                 
(PRE) _aTotal[30] := GetNewPar("MV_NFESERV","")
(PRE) _aTotal[31] := "Parâmetro inexistente"
(PRE) _aTotal[32] := "O parâmetro MV_NFESERV não está definido no dicionário de dados. "
(PRE) _aTotal[32] += "Este parâmetro irá indicar como deverá ser composta a descrição "
(PRE) _aTotal[32] += "do serviço prestado no documento. Caso este parâmetro não seja "
(PRE) _aTotal[32] += "cadastrado, a descrição sempre será composta pelo conteúdo "
(PRE) _aTotal[32] += "da tabela 60 do SX5. O programa tem a opção de compor a descrição "
(PRE) _aTotal[32] += "do serviço prestado observando também a mensagem da nota fiscal "
(PRE) _aTotal[32] += "lançada no pedido de vendas. Para tanto, será necessário observar "
(PRE) _aTotal[32] += "a solução proposta abaixo: "
(PRE) _aTotal[33] := "Estrutura do parâmetro MV_NFESERV: "
(PRE) _aTotal[33] += "<indica se a descrição do serviço prestado na Nota Fiscal "
(PRE) _aTotal[33] += "Eletrônica deverá ser composta 1 = pelo pedido de vendas ou "
(PRE) _aTotal[33] += "descrição do SX5 ou 2 - somente pela descrição do SX5>."
(PRE) _aTotal[33] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[30]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) _aTotal[30] := Iif(Empty(_aTotal[30]),"2",_aTotal[30])

[XXX Verifica se os campos necessarios foram implementados]
(PRE) _aTotal[50] := ""
(PRE) _aTotal[31] := ""	
(PRE) _aTotal[32] := ""
(PRE) Iif(!Empty(_aTotal[50]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) Iif(!Empty(_aTotal[50]),_aTotal[51] := .T.,_aTotal[51] := .F.)

[XXX Aborta a rotina, caso nao tenham sido implementados os campos]
(PRE) lAbtMT950	:= _aTotal[51]   

[XXX Montagem do CFP Utilizado pela rotina - PRINCIPAL]
(PRE) aAdd(_aTotal[04],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[04],"")
(PRE) aAdd(_aTotal[04],"Preencha corretamente as informações solicitadas.")
(PRE) aAdd(_aTotal[04],"Informações necessárias à geração do arquivo de importação para           geração da Nota Fiscal Eletrônica no site da Prefeitura Municipal de       Santo Andre.")

[XXX Painel 1 - Configuracoes Gerais]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][1],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[05][1],"Configurações gerais:")
(PRE) aAdd(_aTotal[05][1],{})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Inscrição Municipal do contribuinte: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"99999999",2,0,,,8})

[XXX Painel 2 - Filtros para selecao dos RPSs]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][2],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[05][2],"Filtros para seleção dos RPSs:")
(PRE) aAdd(_aTotal[05][2],{})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"RPS inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"RPS final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})

[XXX Chamada do Wizard]
(PRE) _aTotal[06] := xMagWizard(_aTotal[04],_aTotal[05],"NFESA")
(PRE) Iif(_aTotal[06],xMagLeWiz("NFESA",@_aTotal[07],.T.),Nil)
(PRE) lAbtMT950	:= !_aTotal[06]
                                                                                          
	
[XXX Movimentos que serao apresentados no periodo - RPS]
(PRE) SF3->(dbSetOrder(1))
(PRE) _aTotal[10] := {"SF3",""}
(PRE) _aTotal[78] := "F3_FILIAL='"+xFilial("SF3")+"' AND F3_ENTRADA>='"+DTOS(_aTotal[01])+"' AND F3_ENTRADA<='"+DTOS(_aTotal[02])+"' AND "
(PRE) _aTotal[78] += " SUBSTRING(F3_CFO,1,1)>='5' AND F3_CODISS<>'' AND F3_PDV='' AND F3_NFELETR='' AND (F3_DTCANC='' OR F3_OBSERV NOT LIKE '%CANCELAD%') AND "
(PRE) _aTotal[78] += " F3_CLIEFOR>='"+_aTotal[07][02][01]+"' AND F3_LOJA>='"+_aTotal[07][02][02]+"' AND F3_CLIEFOR<='"+_aTotal[07][02][03]+"' AND F3_LOJA<='"+_aTotal[07][02][04]+"' AND "
(PRE) _aTotal[78] += " F3_NFISCAL>='"+_aTotal[07][02][05]+"' AND F3_NFISCAL<= '"+_aTotal[07][02][06]+"'"
(PRE) _aTotal[79] := "F3_FILIAL=='"+xFilial("SF3")+"' .AND. DTOS(F3_ENTRADA)>='"+DTOS(_aTotal[01])+"' .AND. DTOS(F3_ENTRADA)<='"+DTOS(_aTotal[02])+"' .And. "
(PRE) _aTotal[79] += "SubStr(AllTrim(F3_CFO),1,1)>='5' .And. !Empty(F3_CODISS) .And. Empty(F3_PDV) .And. Empty(F3_NFELETR) .And.( Empty(F3_DTCANC) .Or. !'CANCEL'$F3_OBSERV) .And. "
(PRE) _aTotal[79] += "F3_CLIEFOR>='"+_aTotal[07][02][01]+"' .And. F3_LOJA>='"+_aTotal[07][02][02]+"' .And. F3_CLIEFOR<='"+_aTotal[07][02][03]+"' .And. F3_LOJA<='"+_aTotal[07][02][04]+"' .And. "
(PRE) _aTotal[79] += "F3_NFISCAL>='"+_aTotal[07][02][05]+"' .And. F3_NFISCAL<='"+_aTotal[07][02][06]+"'"
(PRE) FsQuery(_aTotal[10],1,_aTotal[78],_aTotal[79],SF3->(IndexKey()))
(PRE) SF3->(dbGoTop())  

[XXX Pontos de entrada]
(PRE) _aTotal[80] := ExistBlock("MTDESCRNFE")
(PRE) _aTotal[98] := ExistBlock("MTCLINFE")
(PRE) _aTotal[99] := {}

[XXX Parametro para desconsiderar a IM passada na wizard]
(PRE) _aTotal[90] := GetNewPar("MV_NFEINSC","")
(PRE) _aTotal[91] := Iif(!Empty(_aTotal[90]),_aTotal[90],_aTotal[07][01][01]) 
                 
[XXX Registro tipo 1 - Cabecalho]
TIPO       C 001 0 "1"
INSCRMUNIC C 008 0 Replicate("0",8-Len(Alltrim(_aTotal[91]))) + Alltrim(_aTotal[91])
DATAINICIO C 002 0 StrZero(Month(_aTotal[01]),2)
DATAFIM    C 004 0 StrZero(Year(_aTotal[02]),4)
(POS)

[SF3 - Registro tipo 2 - Dados Gerais e do Tomador]
(PRE) SA1->(dbSetOrder(1))
(PRE) SC6->(dbSetOrder(4))
(PRE) SC5->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))
// Cliente/fornecedor do documento
(PREREG) Iif(!(SF3->F3_TIPO$"D/B"),SA1->(MsSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(MsSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[40] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_MUN,SA2->A2_MUN),.T.)
(PREREG) (_aTotal[41] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_CGC,SA2->A2_CGC),.T.)
(PREREG) (_aTotal[42] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_INSCRM,.F.),aRetDig(SA2->A2_INSCRM,.F.)),.T.)
(PREREG) (_aTotal[43] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_INSCR,SA2->A2_INSCR),.T.)
(PREREG) (_aTotal[44] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_NOME,SA2->A2_NOME),.T.)
(PREREG) (_aTotal[45] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_END,SA2->A2_END),.T.)
(PREREG) (_aTotal[46] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_BAIRRO,SA2->A2_BAIRRO),.T.)
(PREREG) (_aTotal[47] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EST,SA2->A2_EST),.T.)
(PREREG) (_aTotal[48] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_CEP,.F.),aRetDig(SA2->A2_CEP,.F.)),.T.)
(PREREG) (_aTotal[49] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EMAIL,SA2->A2_EMAIL),.T.)
(PREREG) (_aTotal[60] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_RECISS,SA2->A2_RECISS),.T.) 
(PREREG) (_aTotal[97] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_PAIS,SA2->A2_PAIS),.T.)  
// Verificando se utiliza a integracao TMS - Dados do tomador do servico
(PREREG) (_aTotal[86] := Iif(_aTotal[85],TMSInfSol(SF3->F3_FILIAL,SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA),{}),.T.)
(PREREG) (_aTotal[40] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][07],_aTotal[40]),.T.)
(PREREG) (_aTotal[41] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][01],_aTotal[41]),.T.)
(PREREG) (_aTotal[42] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),aRetDig(_aTotal[86][02],.F.),_aTotal[42]),.T.)
(PREREG) (_aTotal[43] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][03],_aTotal[43]),.T.)
(PREREG) (_aTotal[44] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][04],_aTotal[44]),.T.)
(PREREG) (_aTotal[45] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][05],_aTotal[45]),.T.)
(PREREG) (_aTotal[46] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][06],_aTotal[46]),.T.)
(PREREG) (_aTotal[47] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][08],_aTotal[47]),.T.)
(PREREG) (_aTotal[48] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),aRetDig(_aTotal[86][09],.F.),_aTotal[48]),.T.)
(PREREG) (_aTotal[49] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][10],_aTotal[49]),.T.)
(PREREG) (_aTotal[97] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),"",_aTotal[97]),.T.)
// Verificando se existe o ponto de entrada para troca das informacoes do cliente
(PREREG) (_aTotal[99] := Iif(_aTotal[98],Execblock("MTCLINFE",.F.,.F.,{SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA}),{}),.T.)
(PREREG) (_aTotal[40] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][07],_aTotal[40]),.T.)
(PREREG) (_aTotal[41] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][02],_aTotal[41]),.T.)
(PREREG) (_aTotal[42] := Iif(Len(_aTotal[99]) >= 12,aRetDig(_aTotal[99][03],.F.),_aTotal[42]),.T.)
(PREREG) (_aTotal[43] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][10],_aTotal[43]),.T.)
(PREREG) (_aTotal[44] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][01],_aTotal[44]),.T.)
(PREREG) (_aTotal[45] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][04],_aTotal[45]),.T.)
(PREREG) (_aTotal[46] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][05],_aTotal[46]),.T.)
(PREREG) (_aTotal[47] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][08],_aTotal[47]),.T.)
(PREREG) (_aTotal[48] := Iif(Len(_aTotal[99]) >= 12,aRetDig(_aTotal[99][06],.F.),_aTotal[48]),.T.)
(PREREG) (_aTotal[49] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][09],_aTotal[49]),.T.)
(PREREG) (_aTotal[60] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][12],_aTotal[60]),.T.)
(PREREG) (_aTotal[97] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][11],_aTotal[97]),.T.)
// CNPJ em branco para tomadores do exterior
(PREREG) (_aTotal[41] := Iif(_aTotal[47] == "EX","",_aTotal[41]),.T.)
// Verifica a situacao do RPS
// T = tributado conforme o documento
// I = isenta ou nao tributavel, executada em Sao Paulo
// F = isenta ou nao tributavel pelo municipio de Sao Paulo, executada em outro municipio
// Verifica se ha o campo ISSST no SF3/SF4 para indicar a prestacao dentro e fora do municipio
(PREREG) (_aTotal[87] := Iif(SF3->F3_ISSST == "2","F",""),.T.)
// Verifica se o servico foi prestado em Santo Andre pelo cadastro do cliente
(PREREG) (_aTotal[88] := Iif(Empty(_aTotal[87]),Iif(!Alltrim(_aTotal[40])$"SANTO ANDRE","F",""),_aTotal[87]),.T.)
// Verifica se o servico e isento e prestado em Santo Andre
(PREREG) (_aTotal[89] := Iif(Alltrim(_aTotal[40])$"SANTO ANDRE" .And. Empty(_aTotal[87]) .And. (SF3->F3_ISENICM > 0 .Or. SF3->F3_OUTRICM > 0),"I",""),.T.)
// Monta a situacao do documento de acordo com as verificacoes efetuadas
(PREREG) (_aTotal[17] := Iif(!Empty(_aTotal[88]),"5",Iif(!Empty(_aTotal[89]),"6","1")),.T.)
// Verifica se o documento a ser apresentado e CNPJ ou CPF
(PREREG) (_aTotal[18] := RetPessoa(_aTotal[41]),.T.)
(PREREG) (_aTotal[18] := Iif(_aTotal[18] == "J","2","1"),.T.)
(PREREG) (_aTotal[18] := Iif(_aTotal[47] == "EX","3",_aTotal[18]),.T.)
// Descricao dos servicos pelo pedido
(PREREG) (_aTotal[23] := "",.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC6->(dbSeek(xFilial("SC6")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC5->(dbSeek(xFilial("SC5")+SC6->C6_NUM)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",_aTotal[23] := SC5->C5_MENNOTA,.T.),.T.)
// Descricao dos servicos pelo codigo do servico - F3_CODISS
(PREREG) (Iif(Empty(_aTotal[23]),SX5->(dbSeek(xFilial("SX5")+"60"+SF3->F3_CODISS)),.T.),.T.)
(PREREG) (_aTotal[23] := Iif(Empty(_aTotal[23]),SX5->X5_DESCRI,_aTotal[23]),.T.)
(PREREG) (_aTotal[23] := Iif(_aTotal[17] == "C","",_aTotal[23]),.T.)
// Descricao dos servicos pelo ponto de entrada
(PREREG) (_aTotal[82] := SF3->(GetArea()),.T.)
(PREREG) (_aTotal[81] := Iif(_aTotal[80],Execblock("MTDESCRNFE",.F.,.F.,{SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA}),""),.T.)
(PREREG) (RestArea(_aTotal[82]),.T.)
(PREREG) (_aTotal[23] := Iif(!Empty(_aTotal[81]),_aTotal[81],_aTotal[23]),.T.)
// Totalizadores para o registro tipo 4
(PREREG) (_aTotal[20] += 1,.T.)
// Recolhimento do ISS de responsabilidade do cliente
(PREREG) (_aTotal[61] := SF3->F3_RECISS,.T.)
// Somente tomadores do municipio de Sao Paulo devem ter Inscricao Municipal
(PREREG) (_aTotal[42] := Iif(Alltrim(_aTotal[40])$"SANTO ANDRE" .And. _aTotal[47] == "SP",_aTotal[42],""),.T.)
// Quando o tomador for do Distrito Federal, nao dividimos o endereco para nao perder informacoes
(PREREG) (_aTotal[92] := FisGetEnd(_aTotal[45]))
(PREREG) (Iif(Len(_aTotal[92])==3,Aadd(_aTotal[92],""),.T.),.T.)
(PREREG) (_aTotal[93] := Iif(!(_aTotal[47] $ "DF/EX"),Substr(_aTotal[92][01],1,At(" ",_aTotal[92][01])),""),.T.)
(PREREG) (_aTotal[94] := Iif(!(_aTotal[47] $ "DF/EX"),Alltrim(Substr(_aTotal[92][01],At(" ",_aTotal[92][01])+1)),_aTotal[45]),.T.)
(PREREG) (_aTotal[95] := Iif(!(_aTotal[47] $ "DF/EX"),Alltrim(Str(_aTotal[92][02])),""),.T.)
(PREREG) (_aTotal[96] := Iif(!(_aTotal[47] $ "DF/EX"),_aTotal[92][04],""),.T.)
TIPO       C 001 0 "2"
NUMERORPS  C 010 0 Replicate("0",10-Len(Alltrim(SF3->F3_NFISCAL))) + SF3->F3_NFISCAL
EMIRPSD    C 002 0 StrZero(Day(SF3->F3_ENTRADA),2)
EMIRPSM    C 002 0 StrZero(Month(SF3->F3_ENTRADA),2)
EMIRPSA    C 004 0 Year(SF3->F3_ENTRADA)
NATUREZA   C 001 0 _aTotal[17]
RAZAOSOC   C 100 0 _aTotal[44]
TIPOEND    C 010 0 _aTotal[93]
ENDERECO   C 100 0 _aTotal[94]
NUMERO     C 010 0 Iif(!Empty(_aTotal[95]),_aTotal[95],"SN")
BAIRRO     C 030 0 _aTotal[46]
COMPLEM    C 050 0 _aTotal[96]
CIDADE     C 050 0 _aTotal[40]
UF         C 002 0 _aTotal[47]
CEP        C 008 0 Replicate("0",8-Len(Alltrim(_aTotal[48]))) + Alltrim(_aTotal[48])
EMAIL      C 100 0 _aTotal[49]
INSCRESTAD C 020 0 Replicate("0",20-Len(Alltrim(_aTotal[43]))) + Alltrim(_aTotal[43])
TPCNPJCPF  C 001 0 _aTotal[18]
CPF_CNPJ   C 014 0 Alltrim(_aTotal[41])
INSCRMUNIC C 008 0 Iif(Empty(_aTotal[42]),"",Replicate("0",8-Len(Alltrim(_aTotal[42]))) + Alltrim(_aTotal[42]))
IMPRET     C 001 0 Iif(Empty(_aTotal[61]),"2",_aTotal[61])
INFDIV     C 999 0 "" 

[SF3 - Registro tipo 3 - Discriminação dos Servicos]
(PRE) SA1->(dbSetOrder(1))
(PRE) SD2->(DbSetOrder(3))
(PRE) SC6->(dbSetOrder(4))
(PRE) SC5->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))                 
(PRE) SF3->(dbGoTop())
(PREREG) _aTotal[4] := {"SD2", ""}
(PREREG) FsQuery(_aTotal[4], 1, "D2_FILIAL='"+SF3->F3_FILIAL+"' AND D2_DOC='"+SF3->F3_NFISCAL + "' AND D2_SERIE = '" + SF3->F3_SERIE+"'", "D2_FILIAL=='"+SF3->F3_FILIAL+"' .AND. D2_DOC=='"+SF3->F3_NFISCAL + "' .AND. D2_SERIE == '" + SF3->F3_SERIE + "' .AND. !Empty(D2_CODISS) ", SD2->(IndexKey()))
// Descricao dos servicos pelo pedido
(PREREG) (_aTotal[23] := "",.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC6->(dbSeek(xFilial("SC6")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC5->(dbSeek(xFilial("SC5")+SC6->C6_NUM)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",_aTotal[23] := SC5->C5_MENNOTA,.T.),.T.)
// Descricao dos servicos pelo codigo do servico - F3_CODISS
(PREREG) (Iif(Empty(_aTotal[23]),SX5->(dbSeek(xFilial("SX5")+"60"+SF3->F3_CODISS)),.T.),.T.)
(PREREG) (_aTotal[23] := Iif(Empty(_aTotal[23]),SX5->X5_DESCRI,_aTotal[23]),.T.)
(PREREG) (_aTotal[24] += 1 ,.T.)
TIPO       C 001 0 "3"
NUMERORPS  C 010 0 Replicate("0",10-Len(Alltrim(SF3->F3_NFISCAL))) + SF3->F3_NFISCAL
IDENTIF    C 005 0 StrZero(_aTotal[24],5)
QUANT      C 015 0 StrTran(StrZero(SD2->D2_QUANT,16,2),".","")
DESCRI     C 250 0 _aTotal[23]
VUNIT      C 015 0 StrTran(StrZero(SD2->D2_PRCVEN,16,2),".","")
ALIQUOTA   C 004 2 StrTran(StrZero(SF3->F3_ALIQICM,5,2),".","")
DESCABAT   C 001 0 ""

[XXX Registro tipo 9 - Rodape]
TIPO       C 001 0 "4"
LINHAS     C 015 0 StrTran(StrZero(_aTotal[20],16,2),".","")
(POS)

