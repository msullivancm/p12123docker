?{"Nome do Arquivo INI","NFEBARUE.INI"}
?{"Descrição Completa do Arquivo Magnético","Arquivo de exportação de Recibos Provisórios de Serviços (RPS) para importação no site da Prefeitura Municipal de Barueri - SP - para conversão em Nota Fiscal Eletrônica (NFS-e)."}
?{"A Quem se Destina","A todas as Pessoas Jurídicas Prestadoras de Serviços estabelecidas na Cidade de Barueri - SP"}
?{"Objetivo","Gerar um arquivo magnético com as informações que devem ser convertidas em NFS-e."}
?{"Prazo de Entrega","Não há prazo de entrega. Após emitido, um RPS deverá ser transformado em NFS-e"}
?{"Aplicativo Disponibilizado pelo Fisco","Não há. O meio magnético deverá ser enviado via Internet para processamento."}
?{"Versão do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentários","Após o envio do arquivo contendo os RPS emitidos no período, o sistema disponibiliza a importação das NFS-e emitidas pela Prefeitura Municipal, através da rotina Importação Nf-e (Miscelânea/Arq. Magnéticos/Importação Nf-e)"}

[XXX Inicializacao]
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02
(PRE) _aTotal[03] := AliasIndic("SFT")
(PRE) _aTotal[04] := {}      
(PRE) _aTotal[05] := {}      
(PRE) _aTotal[06] := .F.      
(PRE) _aTotal[07] := {}                        
(PRE) _aTotal[20] := 0                        
(PRE) _aTotal[21] := 0                        
(PRE) _aTotal[22] := 0          
(PRE) _aTotal[24] := 0          
(PRE) _aTotal[12] := 0          
(PRE) _aTotal[13] := 0
(PRE) _aTotal[14] := 0           
(PRE) _aTotal[85] := IntTMS()
(PRE) _aTotal[86] := {}
(PRE) _aTotal[78] := ""
(PRE) _aTotal[79] := ""
(PRE) _aTotal[54] := .F.       
(PRE) _aTotal[74] := ""  
//Array contendo campos da Tabela SA1 do local do serviço prestado           
(PRE) _aTotal[83] :=  &(GetNewPar ("MV_ENDSER", "{}"))
//Tratamento Lei da Transparência 12.741/2012
(PRE) _aTotal[100] := 0  
(PRE) _aTotal[101] := ""
(PRE) _aTotal[102] := ""
(PRE) _aTotal[103] := ""

[XXX Parametros da rotina]                 
(PRE) _aTotal[30] := GetNewPar("MV_NFESERV","")
(PRE) _aTotal[31] := "Parâmetro inexistente"
(PRE) _aTotal[32] := "O parâmetro MV_NFESERV não está definido no dicionário de dados. "
(PRE) _aTotal[32] += "Este parâmetro irá indicar como deverá ser composta a descrição "
(PRE) _aTotal[32] += "do serviço prestado no documento. Caso este parâmetro não seja "
(PRE) _aTotal[32] += "cadastrado, a descrição sempre será composta pelo conteúdo "
(PRE) _aTotal[32] += "da tabela 60 do SX5. O programa tem a opção de compor a descrição "
(PRE) _aTotal[32] += "do serviço prestado observando também a mensagem da nota fiscal "
(PRE) _aTotal[32] += "lançada no pedido de vendas. Para tanto, será necessário observar "
(PRE) _aTotal[32] += "a solução proposta abaixo: "
(PRE) _aTotal[33] := "Estrutura do parâmetro MV_NFESERV: "
(PRE) _aTotal[33] += "<indica se a descrição do serviço prestado na Nota Fiscal "
(PRE) _aTotal[33] += "Eletrônica deverá ser composta 1 = pelo pedido de vendas ou "
(PRE) _aTotal[33] += "descrição do SX5 ou 2 - somente pela descrição do SX5>."
(PRE) _aTotal[33] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[30]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) _aTotal[30] := Iif(Empty(_aTotal[30]),"2",_aTotal[30])
(PRE) _aTotal[70] := GetNewPar("MV_NFECONJ","X")
(PRE) _aTotal[71] := "Parâmetro inexistente"
(PRE) _aTotal[72] := "O parâmetro MV_NFECONJ não está definido no dicionário de dados. "
(PRE) _aTotal[72] += "Este parâmetro irá indicar quais as espécies de notas fiscais "
(PRE) _aTotal[72] += "que devem ser tratadas como nota fiscal conjugada (produto + "
(PRE) _aTotal[72] += "serviço), para que seja possível classificar os documentos "
(PRE) _aTotal[72] += "que serão enviados à prefeitura. Para tanto, será necessário observar "
(PRE) _aTotal[72] += "a solução proposta abaixo: "
(PRE) _aTotal[73] := "Estrutura do parâmetro MV_NFECONJ: "
(PRE) _aTotal[73] += "<espécies utilizadas na emissão de Nota Fiscal Conjugada, "
(PRE) _aTotal[73] += "devendo ser preenchido da seguinte forma: ESPECIE/ESPECIE. "    
(PRE) _aTotal[73] += "Caso não utilize espécie na NF conjugada, preencher este parâmetro "
(PRE) _aTotal[73] += "com o conteúdo BRANCO. Caso não emita NF conjugada, deixar este parâmetro em branco>. "
(PRE) _aTotal[73] += "Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(_aTotal[70] == "X",xMagHelpFis(_aTotal[71],_aTotal[72],_aTotal[73]),.T.)
(PRE) _aTotal[25] := GetNewPar("MV_BARUMOT","")
(PRE) _aTotal[26] := Iif(!Empty(_aTotal[25]),SF3->(FieldPos(_aTotal[25])),0)
(PRE) _aTotal[71] := "Parâmetro inconsistente"
(PRE) _aTotal[72] := "O parâmetro MV_BARUMOT não está definido no dicionário de dados ou "
(PRE) _aTotal[72] += "o seu conteúdo é inválido. "
(PRE) _aTotal[72] += "Este parâmetro irá indicar o campo na tabela SF3 que contem o "
(PRE) _aTotal[72] += "motivo do cancelamento de um documento, devendo esse campo "
(PRE) _aTotal[72] += "ser alimentado manualmente ou através de customização. "
(PRE) _aTotal[72] += "Para tanto, será necessário observar a solução proposta abaixo: "
(PRE) _aTotal[73] := "Estrutura do parâmetro MV_BARUMOT: "
(PRE) _aTotal[73] += "<campo da tabela SF3 que contem o motivo do cancelamento do documento>. "
(PRE) _aTotal[73] += "Estrutura do campo a ser indicado no parâmetro: parâmetro do tipo caracter, "
(PRE) _aTotal[73] += "com duas posições, preenchido de acordo com o layout da NF-e, campo 'Código' "
(PRE) _aTotal[73] += "do motivo do cancelamento>. "
(PRE) _aTotal[73] += "Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!Empty(_aTotal[25]) .And. _aTotal[26]==0,xMagHelpFis(_aTotal[71],_aTotal[72],_aTotal[73]),.T.)
(PRE) _aTotal[27] := GetNewPar("MV_BARUCAN","")
(PRE) _aTotal[28] := Iif(!Empty(_aTotal[27]),SF3->(FieldPos(_aTotal[27])),0)
(PRE) _aTotal[71] := "Parâmetro inconsistente"
(PRE) _aTotal[72] := "O parâmetro MV_BARUCAN não está definido no dicionário de dados ou "
(PRE) _aTotal[72] += "o seu conteúdo é inválido. "
(PRE) _aTotal[72] += "Este parâmetro irá indicar o campo na tabela SF3 que contem a "
(PRE) _aTotal[72] += "descrição do cancelamento de um documento, devendo esse campo "
(PRE) _aTotal[72] += "ser alimentado manualmente ou através de customização. "
(PRE) _aTotal[72] += "Para tanto, será necessário observar a solução proposta abaixo: "
(PRE) _aTotal[73] := "Estrutura do parâmetro MV_BARUCAN: "
(PRE) _aTotal[73] += "<campo da tabela SF3 que contem a descricao do cancelamento do documento>. "
(PRE) _aTotal[73] += "Estrutura do campo a ser indicado no parâmetro: parâmetro do tipo caracter, "
(PRE) _aTotal[73] += "com tamanho definido pelo usuário do sistema, preenchido de acordo com o layout da NF-e, "
(PRE) _aTotal[73] += "campo Descrição do Cancelamento>. "
(PRE) _aTotal[73] += "Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!Empty(_aTotal[27]) .And. _aTotal[28]==0,xMagHelpFis(_aTotal[71],_aTotal[72],_aTotal[73]),.T.)

(PRE) Iif(!Empty(_aTotal[25]) .And. _aTotal[26]==0,xMagHelpFis(_aTotal[71],_aTotal[72],_aTotal[73]),.T.)
(PRE) _aTotal[57] := GetNewPar("MV_CODBSC","")
(PRE) _aTotal[58] := Iif(!Empty(_aTotal[57]),SF3->(FieldPos(_aTotal[57])),0)
(PRE) _aTotal[71] := "Parâmetro inconsistente"
(PRE) _aTotal[72] := "O parâmetro MV_CODSB não está definido no dicionário de dados ou "
(PRE) _aTotal[72] += "o seu conteúdo é inválido. "
(PRE) _aTotal[72] += "Este parâmetro irá indicar o campo na tabela SF3 que contem o "
(PRE) _aTotal[72] += "codigo de serviço "
(PRE) _aTotal[72] += "Para tanto, será necessário observar a solução proposta abaixo: "
(PRE) _aTotal[73] := "Estrutura do parâmetro MV_CODBSC: "
(PRE) _aTotal[73] += "<campo da tabela SF3 que contem a descricao do cancelamento do documento>. "
(PRE) _aTotal[73] += "Estrutura do campo a ser indicado no parâmetro: parâmetro do tipo caracter, "
(PRE) _aTotal[73] += "com campo definido pelo usuário do sistema."
(PRE) _aTotal[73] += "Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!Empty(_aTotal[57]) .And. _aTotal[58]==0,xMagHelpFis(_aTotal[71],_aTotal[72],_aTotal[73]),.T.)
[XXX Verifica se os campos necessarios foram implementados]
(PRE) _aTotal[50] := ""
(PRE) Iif(SF1->(FieldPos("F1_NFELETR"))	== 0,_atotal[50] += "F1_NFELETR - ",.T.)
(PRE) Iif(SF1->(FieldPos("F1_EMINFE"))		== 0,_atotal[50] += "F1_EMINFE - ",.T.)
(PRE) Iif(SF1->(FieldPos("F1_HORNFE"))		== 0,_atotal[50] += "F1_HORNFE - ",.T.)
(PRE) Iif(SF1->(FieldPos("F1_CODNFE"))		== 0,_atotal[50] += "F1_CODNFE - ",.T.)
(PRE) Iif(SF1->(FieldPos("F1_CREDNFE"))	== 0,_atotal[50] += "F1_CREDNFE - ",.T.)
(PRE) Iif(SF2->(FieldPos("F2_NFELETR"))	== 0,_atotal[50] += "F2_NFELETR - ",.T.)
(PRE) Iif(SF2->(FieldPos("F2_EMINFE"))		== 0,_atotal[50] += "F2_EMINFE - ",.T.)
(PRE) Iif(SF2->(FieldPos("F2_HORNFE"))		== 0,_atotal[50] += "F2_HORNFE - ",.T.)
(PRE) Iif(SF2->(FieldPos("F2_CODNFE"))		== 0,_atotal[50] += "F2_CODNFE - ",.T.)
(PRE) Iif(SF2->(FieldPos("F2_CREDNFE"))	== 0,_atotal[50] += "F2_CREDNFE - ",.T.)
(PRE) Iif(SF3->(FieldPos("F3_NFELETR"))	== 0,_atotal[50] += "F3_NFELETR - ",.T.)
(PRE) Iif(SF3->(FieldPos("F3_EMINFE"))		== 0,_atotal[50] += "F3_EMINFE - ",.T.)
(PRE) Iif(SF3->(FieldPos("F3_HORNFE"))		== 0,_atotal[50] += "F3_HORNFE - ",.T.)
(PRE) Iif(SF3->(FieldPos("F3_CODNFE"))		== 0,_atotal[50] += "F3_CODNFE - ",.T.)
(PRE) Iif(SF3->(FieldPos("F3_CREDNFE"))	== 0,_atotal[50] += "F3_CREDNFE - ",.T.)
(PRE) Iif(_aTotal[03] .And. SFT->(FieldPos("FT_NFELETR")) == 0,_atotal[50] += "FT_NFELETR - ",.T.)
(PRE) Iif(_aTotal[03] .And. SFT->(FieldPos("FT_EMINFE")) == 0,_atotal[50] += "FT_EMINFE - ",.T.)
(PRE) Iif(_aTotal[03] .And. SFT->(FieldPos("FT_HORNFE")) == 0,_atotal[50] += "FT_HORNFE - ",.T.)
(PRE) Iif(_aTotal[03] .And. SFT->(FieldPos("FT_CODNFE")) == 0,_atotal[50] += "FT_CODNFE - ",.T.)
(PRE) Iif(_aTotal[03] .And. SFT->(FieldPos("FT_CREDNFE")) == 0,_atotal[50] += "FT_CREDNFE - ",.T.)
(PRE) _aTotal[31] := "Implementação não efetuada"	
(PRE) _aTotal[32] := "A implementação do processo da Nota "
(PRE) _aTotal[32] += "Fiscal Eletrônica não foi efetuada corretamente, "
(PRE) _aTotal[32] += "visto que existem tabelas e campos que "
(PRE) _aTotal[32] += "não estão disponíveis no dicionário de dados."
(PRE) _aTotal[32] += Iif(!_aTotal[03],"Tabela SFT - ","")
(PRE) _aTotal[32] += "Campos: " + _aTotal[50]
(PRE) _aTotal[33] := "verifique a documentação que acompanha a rotina e "
(PRE) _aTotal[33] += "execute todos os procedimentos indicados e processe "
(PRE) _aTotal[33] += "esta rotina novamente."
(PRE) Iif(!Empty(_aTotal[50]),xMagHelpFis(_aTotal[31],_aTotal[32],_aTotal[33]),.T.)
(PRE) Iif(!Empty(_aTotal[50]),_aTotal[51] := .T.,_aTotal[51] := .F.)

[XXX Aborta a rotina, caso nao tenham sido implementados os campos]
(PRE) lAbtMT950	:= _aTotal[51]
[XXX Montagem do CFP Utilizado pela rotina - PRINCIPAL]
(PRE) aAdd(_aTotal[04],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[04],"")
(PRE) aAdd(_aTotal[04],"Preencha corretamente as informações solicitadas.")
(PRE) aAdd(_aTotal[04],"Informações necessárias à geração do arquivo de exportação para geração da Nota Fiscal Eletrônica no site da Prefeitura Municipal de Barueri.")

[XXX Painel 1 - Configuracoes Gerais]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][1],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[05][1],"Configurações gerais:")
(PRE) aAdd(_aTotal[05][1],{})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Inscrição Municipal do contribuinte: ",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"9999999",2,0,,,7})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1,"Número da Remessa",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{2,,"99999999999",2,0,,,11})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{1, "Informa e-mail do tomador?",,,,,,})
(PRE) aAdd(_aTotal[05][1][3],{3,,,,,{"1-Sim","2-Não"},,})

[XXX Painel 2 - Filtros para selecao dos RPSs]
(PRE) aAdd(_aTotal[05],{})
(PRE) aAdd(_aTotal[05][2],"Exportação da Nota Fiscal Eletrônica")
(PRE) aAdd(_aTotal[05][2],"Filtros para seleção dos RPSs:")
(PRE) aAdd(_aTotal[05][2],{})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Cliente final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Loja: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_CLIEFOR")[01]),1,,,,TamSX3("F3_CLIEFOR")[01],,,"SA1"})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_LOJA")[01]),1,,,,TamSX3("F3_LOJA")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"RPS inicial: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"RPS final: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",TamSX3("F3_NFISCAL")[01]),1,,,,TamSX3("F3_NFISCAL")[01]})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{0,"",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Série do RPS de: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{1,"Série do RPS Até: ",,,,,,})
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",SerieNfId("SF3",6,"F3_SERIE") ),1,,,, SerieNfId("SF3",6,"F3_SERIE") })
(PRE) aAdd(_aTotal[05][2][3],{2,,Replicate("X",SerieNfId("SF3",6,"F3_SERIE") ),1,,,, SerieNfId("SF3",6,"F3_SERIE") })

[XXX Chamada do Wizard]
(PRE) _aTotal[06] := xMagWizard(_aTotal[04],_aTotal[05],"NFESP")
(PRE) Iif(_aTotal[06],xMagLeWiz("NFESP",@_aTotal[07],.T.),Nil)
(PRE) lAbtMT950	:= !_aTotal[06]

[XXX Movimentos que serao apresentados no periodo - RPS]
(PRE) SF3->(dbSetOrder(1))
(PRE) _aTotal[10] := {"SF3",""}
(PRE) _aTotal[78] := "F3_FILIAL='"+xFilial("SF3")+"' AND F3_ENTRADA>='"+DTOS(_aTotal[01])+"' AND F3_ENTRADA<='"+DTOS(_aTotal[02])+"' AND "
(PRE) _aTotal[78] += " SUBSTRING(F3_CFO,1,1)>='5' AND ( F3_CODISS<>'' OR F3_CNAE<>'') AND F3_PDV='' AND (F3_NFELETR='' OR F3_DTCANC<>'' OR F3_OBSERV LIKE 'CANCEL$') AND "
(PRE) _aTotal[78] += " F3_CLIEFOR>='"+_aTotal[07][02][01]+"' AND F3_LOJA>='"+_aTotal[07][02][02]+"' AND F3_CLIEFOR<='"+_aTotal[07][02][03]+"' AND F3_LOJA<='"+_aTotal[07][02][04]+"' AND "
(PRE) _aTotal[78] += " F3_NFISCAL>='"+_aTotal[07][02][05]+"' AND F3_NFISCAL<= '"+_aTotal[07][02][06]+"' AND "
(PRE) _aTotal[78] += " F3_SERIE>='"+_aTotal[07][02][07]+"' AND F3_SERIE<= '"+_aTotal[07][02][08]+"'"

(PRE) _aTotal[79] := "F3_FILIAL== '"+xFilial("SF3")+"' .And. DTOS(F3_ENTRADA)>= '"+DTOS(_aTotal[01])+"' .And. DTOS(F3_ENTRADA)<= '"+DTOS(_aTotal[02])+"' .And. "
(PRE) _aTotal[79] += "Substr(F3_CFO,1,1)>= '5' .And. (Alltrim(F3_CODISS)<>'' .Or. Alltrim(F3_CNAE)<>'') .And. Alltrim(F3_PDV)='' .And. (Alltrim(F3_NFELETR)='' .Or. Alltrim(F3_DTCANC)<>'' .Or. 'CANCEL'$F3_OBSERV) .And. "
(PRE) _aTotal[79] += "F3_CLIEFOR>= '"+_aTotal[07][02][01]+"' .And. F3_LOJA>= '"+_aTotal[07][02][02]+"' .And. F3_CLIEFOR<= '"+_aTotal[07][02][03]+"' .And. F3_LOJA<= '"+_aTotal[07][02][04]+"' .And. "
(PRE) _aTotal[79] += "F3_NFISCAL>= '"+_aTotal[07][02][05]+"' .And. F3_NFISCAL<= '"+_aTotal[07][02][06]+"' .And. "
(PRE) _aTotal[79] += "F3_SERIE>= '"+_aTotal[07][02][07]+"' .And. F3_SERIE<= '"+_aTotal[07][02][08]+"'"
(PRE) FsQuery(_aTotal[10],1,_aTotal[78],_aTotal[79],SF3->(IndexKey()))
(PRE) SF3->(dbGoTop())

[XXX Pontos de entrada]
(PRE) _aTotal[80] := ExistBlock("MTDESCRNFE")
(PRE) _aTotal[98] := ExistBlock("MTCLINFE")
(PRE) _aTotal[99] := {}

[XXX Parametro para desconsiderar a IM passada na wizard]
(PRE) _aTotal[90] := GetNewPar("MV_NFEINSC","")
(PRE) _aTotal[91] := Iif(!Empty(_aTotal[90]),_aTotal[90],_aTotal[07][01][01]) 
                 
[XXX Registro tipo 1 - Cabecalho]
TIPO       C 001 0 "1"
INSCRMUNIC C 007 0 Replicate("0",7-Len(Alltrim(_aTotal[91]))) + Alltrim(_aTotal[91])
VERSAO     C 006 0 "PMB002"
IDENTREMES C 011 0 _aTotal[07][1][2]
(PREREG) (_aTotal[20] += 1,.T.)
(POS)

[SF3 - Registro tipo 2 - Detalhe]
(PRE) SA1->(dbSetOrder(1))
(PRE) SC6->(dbSetOrder(4))
(PRE) SC5->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1))
(PRE) SX5->(dbSetOrder(1))
(PRE) SYA->(dbSetOrder(1))
(PRE) SE4->(dbSetOrder(1))
(PRE) SFT->(dbSetOrder(3))
(PRE) SB1->(dbSetOrder(1))
// Cliente/fornecedor do documento
(PREREG) Iif(!(SF3->F3_TIPO$"D/B"),SA1->(MsSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(MsSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[40] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_MUN,SA2->A2_MUN),.T.)
(PREREG) (_aTotal[41] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_CGC,SA2->A2_CGC),.T.)
(PREREG) (_aTotal[42] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_INSCRM,.F.),aRetDig(SA2->A2_INSCRM,.F.)),.T.)
(PREREG) (_aTotal[43] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_INSCR,SA2->A2_INSCR),.T.)
(PREREG) (_aTotal[44] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_NOME,SA2->A2_NOME),.T.)
(PREREG) (_aTotal[45] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_END,SA2->A2_END),.T.)
(PREREG) (_aTotal[46] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_BAIRRO,SA2->A2_BAIRRO),.T.)
(PREREG) (_aTotal[47] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EST,SA2->A2_EST),.T.)
(PREREG) (_aTotal[48] := Iif(!(SF3->F3_TIPO$"D/B"),aRetDig(SA1->A1_CEP,.F.),aRetDig(SA2->A2_CEP,.F.)),.T.)
(PREREG) (_aTotal[49] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_EMAIL,SA2->A2_EMAIL),.T.)
(PREREG) (_aTotal[60] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_RECISS,SA2->A2_RECISS),.T.)  
(PREREG) (_aTotal[97] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_PAIS,SA2->A2_PAIS),.T.)
(PREREG) (_aTotal[34] := Iif(!(SF3->F3_TIPO$"D/B"),SA1->A1_COD_MUN,SA2->A2_COD_MUN),.T.)
// Verificando se utiliza a integracao TMS - Dados do tomador do servico
(PREREG) (_aTotal[86] := Iif(_aTotal[85],TMSInfSol(SF3->F3_FILIAL,SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA),{}),.T.)
(PREREG) (_aTotal[40] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][07],_aTotal[40]),.T.)
(PREREG) (_aTotal[41] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][01],_aTotal[41]),.T.)
(PREREG) (_aTotal[42] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),aRetDig(_aTotal[86][02],.F.),_aTotal[42]),.T.)
(PREREG) (_aTotal[43] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][03],_aTotal[43]),.T.)
(PREREG) (_aTotal[44] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][04],_aTotal[44]),.T.)
(PREREG) (_aTotal[45] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][05],_aTotal[45]),.T.)
(PREREG) (_aTotal[46] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][06],_aTotal[46]),.T.)
(PREREG) (_aTotal[47] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][08],_aTotal[47]),.T.)
(PREREG) (_aTotal[48] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),aRetDig(_aTotal[86][09],.F.),_aTotal[48]),.T.)
(PREREG) (_aTotal[49] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),_aTotal[86][10],_aTotal[49]),.T.)
(PREREG) (_aTotal[97] := Iif(_aTotal[85] .And. !Empty(_aTotal[86]),"",_aTotal[97]),.T.)
// Verificando se existe o ponto de entrada para troca das informacoes do cliente
(PREREG) (_aTotal[99] := Iif(_aTotal[98],Execblock("MTCLINFE",.F.,.F.,{SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA}),{}),.T.)
(PREREG) (_aTotal[40] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][07],_aTotal[40]),.T.)
(PREREG) (_aTotal[41] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][02],_aTotal[41]),.T.)
(PREREG) (_aTotal[42] := Iif(Len(_aTotal[99]) >= 12,aRetDig(_aTotal[99][03],.F.),_aTotal[42]),.T.)
(PREREG) (_aTotal[43] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][10],_aTotal[43]),.T.)
(PREREG) (_aTotal[44] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][01],_aTotal[44]),.T.)
(PREREG) (_aTotal[45] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][04],_aTotal[45]),.T.)
(PREREG) (_aTotal[46] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][05],_aTotal[46]),.T.)
(PREREG) (_aTotal[47] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][08],_aTotal[47]),.T.)
(PREREG) (_aTotal[48] := Iif(Len(_aTotal[99]) >= 12,aRetDig(_aTotal[99][06],.F.),_aTotal[48]),.T.)
(PREREG) (_aTotal[49] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][09],_aTotal[49]),.T.)
(PREREG) (_aTotal[60] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][12],_aTotal[60]),.T.)
(PREREG) (_aTotal[97] := Iif(Len(_aTotal[99]) >= 12,_aTotal[99][11],_aTotal[97]),.T.)
// Verifica a situacao do RPS
// T = tributado conforme o documento
// I = isenta ou nao tributavel, executada em Sao Paulo
// F = isenta ou nao tributavel pelo municipio de Sao Paulo, executada em outro municipio
// C = cancelado
// E = extraviado
(PREREG) (_aTotal[87] := Iif(SF3->(FieldPos("F3_ISSST")) > 0 ,SF3->F3_ISSST,""),.T.)
(PREREG) (_aTotal[17] := NFePstServ(_aTotal[40],_aTotal[47],"BARUERI","SP",SF3->F3_DTCANC,_aTotal[87],SF3->F3_ISENICM+SF3->F3_OUTRICM,.F.),.T.)
// Para o caso de Barueri, apenas existem os tratamentos abaixo:
// 1 = servico prestado no municipio (T, I)
// 2 = servico prestado fora do municipio (F)
(PREREG) (_aTotal[17] := Iif(_aTotal[17]$"T/I","1","2"),.T.)
// Guarda a informacao de documento cancelado para ser utilizada na montagem dos registros. Apos a montagem, sera utilizada a tributacao retornada da funcao NfePstServ()
(PREREG) (_aTotal[74] := _aTotal[17],.T.)
(PREREG) (_aTotal[17] := Iif(!Empty(SF3->F3_DTCANC),"C",_aTotal[17]),.T.)
// Verifica se o documento a ser apresentado e CNPJ ou CPF
(PREREG) (_aTotal[18] := RetPessoa(_aTotal[41]),.T.)
(PREREG) (_aTotal[18] := Iif(_aTotal[18] == "J","2","1"),.T.)
// Descricao dos servicos pelo pedido
(PREREG) (_aTotal[23] := "",.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC6->(dbSeek(xFilial("SC6")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",SC5->(dbSeek(xFilial("SC5")+SC6->C6_NUM)),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "1",_aTotal[23] := SC5->C5_MENNOTA,.T.),.T.)
// Descricao dos servicos pelo codigo do servico - F3_CODISS
(PREREG) SFT->(dbGoTop()) 
(PREREG) (Iif(_aTotal[30] == "2",_aTotal[23] := SFT->(DBSeek(xFilial("SFT")+"S"+SF3->F3_CLIEFOR+SF3->F3_LOJA+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_IDENTFT)),.T.) ,.T.)
(PREREG) (Iif(_aTotal[30] == "2",_aTotal[23] := Iif(SB1->(dbSeek(xFilial("SB1")+SFT->FT_PRODUTO)),SB1->B1_DESC,""),.T.),.T.)
(PREREG) (Iif(_aTotal[30] == "2",_aTotal[23] := AllTrim(Iif(_aTotal[17] == "C","",_aTotal[23])),.T.),.T.)
// Descricao dos servicos pelo ponto de entrada
(PREREG) (_aTotal[82] := SF3->(GetArea()),.T.)
(PREREG) (_aTotal[81] := Iif(_aTotal[80],Execblock("MTDESCRNFE",.F.,.F.,{SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA}),""),.T.)
(PREREG) (RestArea(_aTotal[82]),.T.)
(PREREG) (_aTotal[23] := Iif(!Empty(_aTotal[81]),_aTotal[81],_aTotal[23]),.T.)
// Totalizadores para o registro tipo 9
(PREREG) (_aTotal[20] += 1,.T.)
(PREREG) (_aTotal[21] += Iif(_aTotal[17] == "C",0,SF3->F3_VALCONT),.T.)
(PREREG) (_aTotal[22] += Iif(_aTotal[17] == "C",0,Iif(SF3->(FieldPos("F3_ISSSUB")) > 0 ,SF3->F3_ISSSUB,0)),.T.)
(PREREG) (_aTotal[24] += Iif(_aTotal[17] == "C",0,Iif(SF3->(FieldPos("F3_ISSMAT")) > 0 ,SF3->F3_ISSMAT,0)),.T.)
// Recolhimento do ISS de responsabilidade do cliente
(PREREG) (_aTotal[61] := Iif(SF3->(FieldPos("F3_RECISS")) > 0,SF3->F3_RECISS,_aTotal[60]),.T.)
// Tipo do RPS - RPS = Nota Fiscal so de servicos / RPS-M - Nota Fiscal Conjugada - Mista
(PREREG) (_aTotal[75] := Iif(Alltrim(SF3->F3_ESPECIE)$(_aTotal[70]),"RPS-M","RPS"),.T.)
// Especie em branco
(PREREG) (_aTotal[76] := Iif(Empty(SF3->F3_ESPECIE) .And. "BRANCO"$(_aTotal[70]),"RPS-M","RPS"),.T.)
(PREREG) (_aTotal[77] := Iif(Empty(SF3->F3_ESPECIE),_aTotal[76],_aTotal[75]),.T.)
// Somente tomadores do municipio de Sao Paulo devem ter Inscricao Municipal
(PREREG) (_aTotal[42] := Iif(Alltrim(_aTotal[40])$"BARUERI" .And. _aTotal[47] == "SP",_aTotal[42],""),.T.)
// Quando o tomador for do Distrito Federal, nao dividimos o endereco para nao perder informacoes
(PREREG) (_aTotal[92] := FisGetEnd(_aTotal[45]))
(PREREG) (Iif(Len(_aTotal[92])==3,Aadd(_aTotal[92],""),.T.),.T.)
(PREREG) (_aTotal[93] := Iif(!(_aTotal[47] $ "EX"),Substr(_aTotal[92][01],1,At(" ",_aTotal[92][01])),""),.T.)
(PREREG) (_aTotal[94] := Iif(!(_aTotal[47] $ "EX"),Alltrim(Substr(_aTotal[92][01],At(" ",_aTotal[92][01])+1)),_aTotal[45]),.T.)
(PREREG) (_aTotal[95] := Iif(!(_aTotal[47] $ "EX"),Substr (_aTotal[45], 1, At (" ", _aTotal[45]))+Substr (_aTotal[45], At (" ",_aTotal[45])+1, (At (",", _aTotal[45])-At (" ", _aTotal[45]))-1),""),.T.)
// Bairro deve conter o nome da cidade e o pais do tomador do exterior   
(PREREG) (SYA->(dbSeek(xFilial("SYA")+_aTotal[97])),.T.)
(PREREG) (_aTotal[46] := Iif(_aTotal[47] == "EX",Alltrim(_aTotal[40]) + "-" + Alltrim(SYA->YA_DESCR),_aTotal[46]),.T.)
// Informacoes sobre o pagamento da fatura
(PREREG) (_aTotal[66] := SF2->(dbSeek(xFilial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA)),.T.)
(PREREG) (_aTotal[67] := AllTrim(SF2->F2_COND),.T.)
(PREREG) (_aTotal[68] := SE4->(dbSeek(xFilial("SE4")+SF2->F2_COND)),.T.)
(PREREG) (_aTotal[69] := AllTrim(SE4->E4_DESCRI),.T.) 
// Verificacao do endereco da prestacao do servico:
// Se municipio do cliente == municipio do prestador,
// Apresentar dados do cliente/fornecedor
(PREREG) (_aTotal[35] := Iif(Alltrim(_aTotal[34]) == Alltrim(SM0->M0_CODMUN),"1",""),.T.)
// Se municipio do cliente <> municipio prestador e o TES indique prestacao dentro do municipio,
// significa que o cliente veio ate minha empresa, neste caso os dados sao do SIGAMAT           
(PREREG) (_aTotal[35] := Iif(Alltrim(_aTotal[34]) <> Alltrim(SM0->M0_CODMUN) .And. (_aTotal[17] == "1" .Or. _aTotal[74] == "1"),"1",_aTotal[35]),.T.)
// Se municipio do cliente <> municipio prestador e o TES indique prestacao fora do municipio,
// significa que o servico foi prestado no cliente, neste caso os dados sao do SA1/SA2
(PREREG) (_aTotal[35] := Iif(Alltrim(_aTotal[34]) <> Alltrim(SM0->M0_CODMUN) .And. (_aTotal[17] == "2" .Or. _aTotal[74] == "2"),"2",_aTotal[35]),.T.)
// Endereco do contribuinte
(PREREG) (_aTotal[36] := FisGetEnd(SM0->M0_ENDENT),.T.)
// Monta a quantidade de servicos pelo 
(PREREG) (_aTotal[37] := NfQtdServ(SF3->F3_FILIAL,SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA,SF3->F3_ALIQICM,SF3->F3_CODISS,_aTotal[03]))
(PREREG) (_aTotal[11] := RetImpost(SF3->F3_FILIAL,SF3->F3_NFISCAL,SF3->F3_SERIE,SF3->F3_CLIEFOR,SF3->F3_LOJA,@_aTotal[12],.T.,SF3->F3_IDENTFT))
(PREREG) (_aTotal[13] += _aTotal[12],.T.)
(PREREG) (_aTotal[38] := SF3->F3_VALCONT%_aTotal[37])
(PREREG) (_aTotal[39] := (SF3->F3_VALCONT/_aTotal[37]))
(PREREG) (_aTotal[40] := Iif(_aTotal[17] == "C",0,_aTotal[40]))
//Monta o numero filtrando por virgula
(PREREG) (_aTotal[56] := Alltrim(SubStr(_aTotal[45],At(",",_aTotal[45])+1)))
//Monta o complemento filtando por virgula
(PREREG) (_aTotal[55] := ALLTRIM(SA1->A1_COMPLEM))
//Monta o endereco
(PREREG) (_aTotal[96] := Iif(!(_aTotal[47] $ "EX"),Alltrim(Substr (_aTotal[56], At(",",_aTotal[56])+1)),""),.T.)
(PREREG) (_aTotal[59] := Iif(_aTotal[35] == "1",SM0->M0_COMPENT,_aTotal[96]),.T.)
(PREREG) (_aTotal[62] := Iif(_aTotal[35] == "1",SM0->M0_BAIRENT,_aTotal[46]),.T.)
(PREREG) (_aTotal[63] := Iif(_aTotal[35] == "1",SM0->M0_CIDENT,_aTotal[40]),.T.)
(PREREG) (_aTotal[64] := Iif(_aTotal[35] == "1",SM0->M0_ESTENT,_aTotal[47]),.T.)
(PREREG) (_aTotal[65] := Iif(_aTotal[35] == "1",SM0->M0_CEPENT,_aTotal[48]),.T.)
//Tratamento Lei da Transparência 12.741/2012
(PREREG) (_aTotal[100] := Iif(SF2->(FieldPos("F2_TOTIMP"))> 0 .And. SF2->F2_TOTIMP > 0,SF2->F2_TOTIMP,0),.T.) 
(PREREG) (_aTotal[101] := Iif(_aTotal[100] > 0," - Valor Aproximado dos Tributos: R$ "+Alltrim(Transform(_aTotal[100],"@E 999,999,999,999.99"))+".",""),.T.)
(PREREG) (_aTotal[102] := Iif(!Empty(_aTotal[101]),AlqLeiTran("SB1","SBZ")[2],""),.T.)
(PREREG) (_aTotal[103] := Iif("IBPT" $ UPPER(_aTotal[102])," Fonte:"+Alltrim(_aTotal[102])+".",""),.T.)

TIPO       C 001 0 "2"
TIPORPS    C 005 0 _aTotal[77]
SERIERPS   C 004 0 SerieNfId("SF3",2,"F3_SERIE")
SERIENFE   C 005 0 ""
NUMERORPS  C 010 0 Iif(Empty(SF3->F3_DTCANC),Replicate("0",10-Len(Alltrim(SF3->F3_NFISCAL)))+Alltrim(SF3->F3_NFISCAL),Replicate("0",10)) 
EMIRPS     C 008 0 dtos(SF3->F3_ENTRADA)
HORARPS    C 006 0 StrTran(Time(),":","")
SITUARPS   C 001 0 Iif(Empty(SF3->F3_DTCANC),"E","C")
MOTCANC    C 002 0 Iif(_aTotal[17] == "C" .And. _aTotal[26] > 0,SF3->&(_aTotal[25]),"")
NFECANC    C 007 0 Replicate("0",7-Len(Alltrim(SF3->F3_NFELETR)))+Alltrim(SF3->F3_NFELETR)
SERNFECANC C 005 0 ""
DTEMISCANC C 008 0 DToS(SF3->F3_DTCANC)
DESCCANC   C 180 0 Iif(_aTotal[17] == "C" .And. _aTotal[28] > 0,SF3->&(_aTotal[27]),"")
CODSERV    C 009 0 Replicate("0",9-Len(Alltrim(SF3->&(_aTotal[57]))))+Alltrim(SF3->&(_aTotal[57]))
LOCSERV    C 001 0 Iif(Empty(SF3->F3_DTCANC),_aTotal[17],_aTotal[74])
LOCSERVPUB C 001 0 "2"                       
ENDSRVPRES C 075 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][1])),FisGetEnd(&(_aTotal[83][1]))[1],_aTotal[95])
NUMSRVPRES C 009 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][1])),FisGetEnd(&(_aTotal[83][1]))[3],Iif(_aTotal[35]=="1",_aTotal[36][03],Alltrim(_aTotal[56])))
COMSRVPRES C 030 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][2])),&(_aTotal[83][2]),Alltrim(_aTotal[55]))
BAISRVPRES C 040 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][3])),&(_aTotal[83][3]),_aTotal[62])
CIDSRVPRES C 040 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][4])),&(_aTotal[83][4]),_aTotal[63])
UFSRVPRES  C 002 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][5])),&(_aTotal[83][5]),_aTotal[64])
CEPSRVPRES C 008 0 Iif ((Len (&(SuperGetMv ("MV_ENDSER")))>=6 .and. !Empty(_aTotal[83][6])),&(_aTotal[83][6]),_aTotal[65])
QTDSRV     N 006 0 Iif(_aTotal[38] > 0, 1,_aTotal[37])
VALSERV    N 015 2 Iif(_aTotal[38] > 0, SF3->F3_VALCONT, _aTotal[39])
RESERVADO  C 005 0 "" 
VALRET     N 015 2 _aTotal[12] 
TOMAESTRA  N 001 0 Iif(_aTotal[47] == "EX",1,2)
PAISTOMAD  N 003 0 Iif(_aTotal[47] == "EX",Val(_aTotal[97]),0)
SRVPRESEX  N 001 0 Iif(_aTotal[47] == "EX",Iif(SC5->C5_ESTPRES == "EX",1,2),0)
CPF_CNPJ   N 001 0 Iif(_aTotal[47] <> "EX",Iif((SA1->A1_PESSOA)$"F",1,2),0)
CPF_CNPJTO C 014 0 Iif(_aTotal[47] <> "EX",Replicate("0",14-Len(Alltrim(_aTotal[41])))+Alltrim(_aTotal[41]),"")
RAZAOSOC   C 060 0 _aTotal[44]      
ENDERECO   C 075 0 Iif(_aTotal[47] <> "EX",_aTotal[95],"")
NUMERO     C 009 0 Iif(_aTotal[47] <> "EX",Alltrim(_aTotal[56]),"")
COMPLEM    C 030 0 Iif(_aTotal[47] <> "EX",Alltrim(_aTotal[55]),"")
BAIRRO     C 040 0 Iif(_aTotal[47] <> "EX",_aTotal[46],"")
CIDADE     C 040 0 Iif(_aTotal[47] <> "EX",_aTotal[40],"")
UF         C 002 0 Iif(_aTotal[47] <> "EX",_aTotal[47],"")
CEP        C 008 0 Iif(_aTotal[47] <> "EX",Replicate("0",8-Len(Alltrim(_aTotal[48]))) + Alltrim(_aTotal[48]),"")
EMAIL      C 152 0 Iif("1"$_aTotal[07][01][03],_aTotal[49]," ")
NUMFATURA  C 006 0 Iif(Len(Alltrim(SF2->F2_DUPL))<6,Replicate("0",6-Len(Alltrim(SF2->F2_DUPL))) + Right(SF2->F2_DUPL,6),SF2->F2_DUPL)
VALFATURA  N 015 2 Iif(_aTotal[17] == "C",0,SF3->F3_VALCONT)
FORMAPAGT  C 015 0 _aTotal[69]
DRISCRSRV  C 000 0 AllTrim(_aTotal[23])+Alltrim(_aTotal[101])+Alltrim(_aTotal[103])

{NFE - Registro tipo 3 - Detalhe}
(PRE) NFE->(dbGoTop())
(PREREG) (_aTotal[14] += NFE->VALIMP,.T.)
(PREREG) (_aTotal[20] += 1,.T.)
TIPO       C 001 0 "3"
CODIMPOST  C 002 0 NFE->TIPOIMP
VALIMPOST  N 015 2 NFE->VALIMP
(POS) NFE->(dbCloseArea())

[XXX Registro tipo 9 - Rodape]
TIPO       C 001 0 "9"         
(PREREG) (_aTotal[20] += 1,.T.)
LINHAS     N 007 0 _aTotal[20]
TOTSERV    N 015 2 _aTotal[21]
TOTVALREG3 N 015 2 _aTotal[22]+_aTotal[24]+_aTotal[14]
(POS)
