?{"Nome do Arquivo INI","ISSLONDR.INI"}
?{"Descrição Completa do Arquivo Magnético","ISS Londrina - Declaração mensal de Serviços"}
?{"A Quem se Destina","Todas as Pessoas Jurídicas estabelecidas ou não no Município, sejam elas Prestadoras ou Tomadoras de Serviços."}
?{"Objetivo","O ISS Londrina é um sistema Integrado para gerenciamento do ISSQN (Imposto sobre Serviços de Qualquer Natureza) cujo objetivo é promover a administração e controle da arrecadação deste imposto."}
?{"Prazo de Entrega","O imposto sobre serviços será recolhido até o dia previsto na legislação tributária, relativo ao mês subseqüente: I – à prestação de serviços, quando o recolhimento couber ao prestador; II – àquele em que ocorrer o pagamento de serviços, quando o recolhimento couber ao tomador de serviços, relativamente às retenções de imposto realizadas durante o mês de competência."}
?{"Aplicativo Disponibilizado pelo Fisco","Não há. O meio magnético deverá ser enviado via Internet para processamento."}
?{"Versão do Aplicativo Contemplada pela Microsiga","Não há."}
?{"Comentarios",""}

[XXX Inicializacao]
(PRE) _atotal[001] := MV_PAR01
(PRE) _atotal[002] := MV_PAR02  
// Cria a estrutura do temporario para armazenar os clientes e fornecedores
(PRE) _aTotal[016] := ISSLONDR(1)
(POS)

[XXX Selecionando os movimentos de Serviços Prestados]
(PRE) SF3->(DbSetOrder(1))
(PRE) SA2->(dbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1))
(PRE) _aTotal[006] := {"SF3", ""}
(PRE) FsQuery (_aTotal[006], 1, "F3_FILIAL='"+xFilial("SF3")+"' AND F3_ENTRADA>='"+DTOS(_aTotal[001])+"' AND F3_ENTRADA<='"+DTOS(_aTotal[002])+"' AND SUBSTRING(F3_CFO,1,1)>='5' AND F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' AND F3_TIPO IN('S','L') " ,"F3_FILIAL=='"+xFilial ("SF3")+"' .And. DTOS(F3_ENTRADA)>='"+DTOS(_aTotal[001])+"' .And. DTOS(F3_ENTRADA)<='"+DTOS(_aTotal[002])+"' .And. SUBS(F3_CFO,1,1)>='5' .And. F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' .And. F3_TIPO='S' ",SF3->(IndexKey ()))
(POS)

[SF3 Serviços Prestados]                                                 
(ARQ) LONDRPRES.TXT
(DEL) ; M                                        
(PRE) _aTotal[013] := GetNewPar ("MV_F3RECIS", .F.)
(PREREG) Iif(SubStr(SF3->F3_CFO,1,1) >= "5",SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)),SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[014] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5",SA1->A1_RECISS,SA2->A2_RECISS),.T.)
(PREREG) (_aTotal[015] := Iif(_aTotal[013],SF3->F3_RECISS,_aTotal[014]),.T.)
(PREREG) Iif(Empty(SF3->F3_DTCANC),Iif(SubStr(SF3->F3_CFO,1,1) >= "5",SF2->(DbSeek(F3Filial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE)),SF1->(DbSeek(F3Filial("SF1")+SF3->F3_NFISCAL+SF3->F3_SERIE))),.T.)
(PREREG) (_aTotal[010] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5",SF2->F2_VALBRUT,SF1->F1_VALBRUT),.T.)
(PREREG) (_aTotal[011] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5",SA1->A1_CGC,SA2->A2_CGC),.T.)
(PREREG) (_aTotal[011] := Iif(Empty(Alltrim(_aTotal[11])),"PFNI",_aTotal[11]),.T.)
// Situacao da Nota Fiscal conforme do layout de serviços prestados
(PREREG) (_aTotal[012] := "")
// ca = Cancelada
(PREREG) (_aTotal[012] := Iif(!Empty(SF3->F3_DTCANC),"ca",_aTotal[12]),.T.)
// is = Isenta
(PREREG) (_aTotal[012] := Iif(SF3->F3_ISENICM > 0 .And. Empty(_aTotal[12]),"is",_aTotal[12]),.T.)
// tt = Tomador (quando ISSQN retido pelo cliente)
(PREREG) (_aTotal[012] := Iif(Empty(_aTotal[12]) .And. (Iif(SubStr(SF3->F3_CFO,1,1) >= "5",_aTotal[015]$"1S",_aTotal[015]$"2N")),"tt",_aTotal[12]),.T.)
// nt = Outro Municipio (quando o pagamento do imposto, indicado no TES, for fora do municipio
(PREREG) (_aTotal[012] := Iif(SF3->F3_ISSST == "2" .And. Empty(_aTotal[12]),"nt",_aTotal[12]),.T.)
// tp = Prestador (padrão)
(PREREG) (_aTotal[012] := Iif(Empty(_aTotal[12]),"tp",_aTotal[12]),.T.)
// Armazena o cliente/fornecedor
(PREREG) (_aTotal[015] := Iif(SubStr(SF3->F3_CFO,1,1) >= "5",{_aTotal[011],SA1->A1_INSCR,SA1->A1_NOME,SA1->A1_END,SA1->A1_BAIRRO,SA1->A1_MUN,SA1->A1_EST,SA1->A1_CEP,SA1->A1_TEL,SA1->A1_EMAIL},{_aTotal[011],SA2->A2_INSCR,SA2->A2_NOME,SA2->A2_END,SA2->A2_BAIRRO,SA2->A2_MUN,SA2->A2_EST,SA2->A2_CEP,SA2->A2_TEL,SA2->A2_EMAIL}),.T.)
(PREREG) (ISSLONDR(2,_aTotal[015]),.T.)
INSCRM     C 000 0 Alltrim(SM0->M0_INSCM)
NFINICIAL  C 000 0 Alltrim(SF3->F3_NFISCAL)
NFINAL     C 000 0 Alltrim(SF3->F3_NFISCAL)
SERIE      C 000 0 Alltrim( SerieNfId("SF3",2,"F3_SERIE") )
SUB_SERIE  C 000 0 ""
DIA_EMISS  C 000 0 Alltrim(Str(Day(SF3->F3_ENTRADA)))
CODISS     C 000 0 Alltrim(SF3->F3_CODISS)
SITUACAO   C 000 0 _aTotal[012]
VALOR_NF   C 000 0 Alltrim(Transform(_aTotal[010],"@E 9999999999.99"))
VALOR_SERV C 000 0 Alltrim(Transform(SF3->F3_VALCONT,"@E 9999999999.99"))
TOMADOR    C 000 0 Alltrim(_aTotal[011])
TIPO_NF    C 000 0 "F"
(POS) FsQuery(_aTotal[006],2)

[XXX Selecionando os movimentos de Serviços Tomados]
(PRE) _aTotal[006] := {"SF3", ""}
(PRE) FsQuery (_aTotal[006], 1, "F3_FILIAL='"+xFilial("SF3")+"' AND F3_ENTRADA>='"+DTOS(_aTotal[001])+"' AND F3_ENTRADA<='"+DTOS(_aTotal[002])+"' AND SUBSTRING(F3_CFO,1,1)<'5' AND F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' AND F3_TIPO IN('S','L') " ,"F3_FILIAL=='"+xFilial ("SF3")+"' .And. DTOS(F3_ENTRADA)>='"+DTOS(_aTotal[001])+"' .And. DTOS(F3_ENTRADA)<='"+DTOS(_aTotal[002])+"' .And. SUBS (F3_CFO, 1, 1)<'5' .And. F3_CODISS<>'"+Space (Len (SF3->F3_CODISS))+"' .And. F3_TIPO=='S'",SF3->(IndexKey ()))
(POS)

[SF3 Serviços Tomados]                                                 
(ARQ) LONDRTOM.TXT
(DEL) ; M                                        
(PRE) _aTotal[010] := 0
(PRE) _aTotal[011] := ""
(PRE) _aTotal[013] := GetNewPar ("MV_F3RECIS", .F.)
(PRE) _aTotal[030] := GetNewPar("MV_LONDSIM","")
(PRE) _aTotal[031] := SA2->(FieldPos(_aTotal[030]))
(PRE) _aTotal[033] := .T.
(PREREG) SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
(PREREG) (_aTotal[015] := Iif(_aTotal[013],SF3->F3_RECISS,SA2->A2_RECISS),.T.)
(PREREG) (_aTotal[032] := Iif(_aTotal[031]>0,SA2->(FieldGet(_aTotal[031])),0),.T.)
// Situacao da Nota Fiscal conforme do layout de serviços prestados
(PREREG) (_aTotal[012] := "",.T.)
// Quando a Nota Fiscal foi emitida com fomulario proprio = Sim -> Servico por conta do tomador (que emitiu o documento)
//(PREREG) (_aTotal[012] := Iif(!(SF3->F3_FORMUL $ " N") .And. Empty(_aTotal[012]),"tt",_aTotal[12]),.T.)
// tt = Tomador (quando ISSQN retido pelo tomador - no caso pelo SIGAMAT)
(PREREG) (_aTotal[012] := Iif(_aTotal[015]$"2N" .And. Empty(_aTotal[012]),"tt",_aTotal[12]),.T.)
// is = Isenta
(PREREG) (_aTotal[012] := Iif(SF3->F3_ISENICM > 0 .And. Empty(_aTotal[012]),"is",_aTotal[12]),.T.)
// nt = Outro Municipio (quando o pagamento do imposto, indicado no TES, for fora do municipio
(PREREG) (_aTotal[012] := Iif(SF3->F3_ISSST == "2" .And. Empty(_aTotal[012]),"nt",_aTotal[12]),.T.)
// tp = Prestador (padrão)
(PREREG) (_aTotal[012] := Iif(Empty(_aTotal[012]),"tp",_aTotal[012]),.T.)
// Armazena o cliente/fornecedor
(PREREG) (_aTotal[015] := {SA2->A2_CGC,SA2->A2_INSCR,SA2->A2_NOME,SA2->A2_END,SA2->A2_BAIRRO,SA2->A2_MUN,SA2->A2_EST,SA2->A2_CEP,SA2->A2_TEL,SA2->A2_EMAIL},.T.)
(PREREG) (ISSLONDR(2,_aTotal[015]),.T.)
CNPJ       C 000 0 Alltrim(SA2->A2_CGC)
NFINICIAL  C 000 0 Alltrim(SF3->F3_NFISCAL)
SERIE      C 000 0 Alltrim( SerieNfId("SF3",2,"F3_SERIE") )
SUB_SERIE  C 000 0 ""
DIA_EMISS  C 000 0 Alltrim(Str(Day(SF3->F3_ENTRADA)))
CODISS     C 000 0 Alltrim(SF3->F3_CODISS)
SITUACAO   C 000 0 _aTotal[012]
VALOR_SERV C 000 0 Alltrim(Transform(SF3->F3_VALCONT,"@E 9999999999.99"))
INSCRM     C 000 0 Alltrim(SM0->M0_INSCM)
TIPO       C 000 0 Iif(Alltrim(SF3->F3_ESPECIE) == "RPS","R","T")
ALQ_SIMPL  C 000 0 Iif(_aTotal[033] .And. SA2->A2_SIMPNAC == "1",Alltrim(TransForm(_aTotal[032],"@E 99.99")),"")
(POS) FsQuery(_aTotal[006],2)

[TMP Dados cadastrais de clientes e fornecedores - todos os utilizados nos documentos]
(ARQ) LONDRCAD.TXT
(DEL) ; M                              
(PRE) TMP->(dbGotop())
CPF_CNPJ   C 000 0 Alltrim(TMP->CPF_CNPJ)
IE         C 000 0 Alltrim(TMP->IE)
NOME       C 000 0 Alltrim(TMP->NOME)
ENDERECO   C 000 0 Alltrim(TMP->ENDERECO)
NUMEND     C 000 0 Alltrim(TMP->NUMEND)
COMPLEND   C 000 0 Alltrim(TMP->COMPLEND)
BAIRRO     C 000 0 Alltrim(TMP->BAIRRO)
CIDADE     C 000 0 Alltrim(TMP->CIDADE)
UF         C 000 0 Alltrim(TMP->UF)
CEP        C 000 0 Alltrim(TMP->CEP)
TEL        C 000 0 Alltrim(TMP->TEL) 
EMAIL      C 000 0 Alltrim(TMP->EMAIL) 
(POS)

[XXX Exclui o arquivo temporario criado]
(PRE) ISSLONDR(3,,_aTotal[016]) 
(POS)
