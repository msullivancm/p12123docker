?{"Nome do Arquivo INI","SISS.INI"}
?{"Descricao Completa do Arquivo Magnetico","Simplificacao Sobre Serviços - Declaracao mensal de servicos prestados e/ou tomados de qualquer natureza do municipio de Ponta Grossa."}
?{"A Quem se Destina","Destina-se a todos os prestadores e/ou tomadores de serviço de qualquer natureza do município de Ponta Grossa."}
?{"Objetivo","Declarar mensalmente os serviços prestados e/ou tomados de qualquer natureza do município de Ponta Grossa."}
?{"Prazo de Entrega","Até o 15º dia  do mês subseqüente à ocorrência do fato gerador"}
?{"Aplicativo Disponibilizado pelo Fisco","SISS"}
?{"Versao do Aplicativo Contemplada pela Microsiga","1.00.10"}
?{"Comentarios",""}
[XXX Inicializacao ]
(PRE) _aTotal[99] := MV_PAR01
(PRE) _aTotal[98] := MV_PAR02   
(PRE) _aTotal[97] := cFilAnt

(PRE) _aTotal[89] := {}
(PRE) _aTotal[88] := {} 
(PRE) _aTotal[87] := .F.
(PRE) _aTotal[86] := {} 

(PRE) _aTotal[10] := ""
(PRE) _aTotal[50] := GetNewPar ("MV_F3RECIS", .F.)

[SX6 Verificacao dos paramentros da rotina]
(PRE) _aTotal[55] := ""
(PRE) SX6->(DbGoTop ())
(PRE) SX6->(DbSeek (xFilial ("SX6")+"MV_TPSERIE"))
(PREREG) !SX6->(Eof ()) .And. xFilial ("SX6")==SX6->X6_FIL .And. "MV_TPSERIE"$SX6->X6_VAR
(PREREG) (_aTotal[55] += SX6->X6_CONTEUD, .T.)    


[XXX Montagem da Wizard]                        
(PRE) aAdd (_aTotal[89], "Processamento da SISS")
(PRE) aAdd (_aTotal[89], "")
(PRE) aAdd (_aTotal[89], "Preencha corretamente as informações solicitadas.")
(PRE) aAdd (_aTotal[89], "Informações necessárias para o preenchimento automático da SISS            Simplificacao Sobre Serviços do Município de Ponta Grossa - PR.")

[XXX Montagem do CFP Utilizado pela rotina - COMPLEMENTAR]
(PRE) aAdd (_aTotal[88], {})
(PRE) aAdd (_aTotal[88][1], "Processamento da SISS")
(PRE) aAdd (_aTotal[88][1], "Dados de identificação do Registro.")
(PRE) aAdd (_aTotal[88][1], {})
(PRE) aAdd (_aTotal[88][1][3], {1, "Numero do Alvará",,,,,,})
(PRE) aAdd (_aTotal[88][1][3], {1, "Versao SISS",,,,,,})
(PRE) aAdd (_aTotal[88][1][3], {2,,"99999999999",1,,,,11})
(PRE) aAdd (_aTotal[88][1][3], {2,,"999",1,,,,03})

                                       
[XXX Chamada do Wizard]
(PRE) _aTotal[87] := xMagWizard (_aTotal[89], _aTotal[88], "SISS")
(PRE) Iif (_aTotal[87], xMagLeWiz ("SISS", @_aTotal[86], .T.), Nil)
(PRE) lAbtMT950	:= !_aTotal[87]     


[XXX Registro Tipo H - Identificacao ]
IDENTREG   C 001 0 "H"        
CMC        C 011 0 Replicate ("0", 11-Len (AllTrim (_aTotal[86][1][1])))+ _aTotal[86][1][1]
VERSAO     C 003 0 _aTotal[86][1][2] 

[SF3 Registro Tipo E - Notas Fiscais Emitidas ]
(PRE) SF3->(DbSetOrder (1))
(PRE) SF2->(DbSetOrder (1))
(PRE) SA1->(DbSetOrder (1))
(PRE) SA2->(DbSetOrder (1))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+_aTotal[97]+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING (F3_CFO,1,1)>='5' AND F3_TIPO='S'","F3_FILIAL=='"+_aTotal[97]+"' .AND. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .AND. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .AND. SUBS (F3_CFO, 1, 1)>='5' .AND. F3_TIPO=='S' ", SF3->(IndexKey ()))
(PRE) SF3->(DbGotop ()) 
(PREREG) Iif (SF3->F3_TIPO$"DB", SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)), SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) SF2->(MsSeek (_aTotal[97]+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA)) .Or. .T.
(PREREG) Eval ({|| _aTotal[2] := Iif (SF3->F3_TIPO$"DB", SA2->A2_END, SA1->A1_END),.T.})
(PREREG) Eval ({|| _aTotal[3] := Iif (SF3->F3_TIPO$"DB", SA2->A2_BAIRRO, SA1->A1_BAIRRO),.T.})
(PREREG) Eval ({|| _aTotal[4] := Iif (SF3->F3_TIPO$"DB", SA2->A2_CGC, SA1->A1_CGC),.T.})
(PREREG) Eval ({|| _aTotal[10] := Iif (_aTotal[50], Iif (SF3->F3_RECISS$"S,1", "R", "A"), Iif (SF3->F3_TIPO$"DB", Iif (SA2->A2_RECISS$"S,1", "R", "A"), Iif (SA1->A1_RECISS$"S,1", "R", "A"))),.T.})
(PREREG) (_aTotal[5] := Iif (!Empty (SF3->F3_PDV), "CF",IIF(Empty(_aTotal[55]),Left ( SerieNfId("SF3",2,"F3_SERIE") , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2))), .T.)
(PREREG) (_aTotal[6] := Iif (!Empty (SF3->F3_PDV), StrZero (Val (SF3->F3_PDV), 3)+SF3->F3_NFISCAL, SF3->F3_NFISCAL), .T.)
(PREREG) _aTotal[53] := _aTotal[5]
(PREREG) _aTotal[54] := _aTotal[8]
(PREREG) _aTotal[56] := SubStr (AllTrim (SF3->F3_CFOEXT), 1, 1)
IDENTREG   C 001 0 "E"
EMISSAO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO),7,2)+"/"+Substr (DTOS (SF3->F3_EMISSAO),5,2)+"/"+Str (Year (SF3->F3_EMISSAO),4)
SERIENF    C 002 0 _aTotal[53]
MODELONF   C 001 0 ""
NATUREZA   C 001 0 _aTotal[56]
NF         C 009 0 _aTotal[6]
VLRBRUTO   C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, 0, StrZero (SF2->F2_VALBRUT, 15, 2))
VLRSERV    C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, 0, StrZero (SF3->F3_VALCONT, 15, 2))
TIPOREC    C 001 0 _aTotal[10]
ALQISSQN   C 005 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV .Or. SubStr (AllTrim (SF3->F3_CFOEXT), 1, 1) == "E", 0, StrZero (SF3->F3_ALIQICM, 05, 2))
NALVARAT   C 011 0 Replicate ("0",11)
CNPJ       C 014 0 aFisFill (Num2Chr (Val (_aTotal[4]), 14, 0), 14)
CPF        C 011 0 Iif (RetPessoa (_aTotal[4])=="F", _aTotal[4], Replicate ("0",11))
NOME       C 040 0 Iif (SF3->F3_TIPO$"DB", SA2->A2_NOME, SA1->A1_NOME)
TIPORUA    C 010 0 Substr (_aTotal[2], 1, At(" ", _aTotal[2]))
NOMERUA    C 050 0 Substr (_aTotal[2], At(" ",_aTotal[2])+1, (At (",", _aTotal[2])-At (" ", _aTotal[2]))-1)
NUMERO     C 006 0 If( Val(Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))==0,"000000",Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))
COMPL      C 020 0 If( Val(Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))==0,"S/N",SPACE(20))
TIPOBAIRRO C 010 0 "BAIRRO"          
NOMEBAIRRO C 050 0 Substr (_aTotal[3], 1, Len (AllTrim (_aTotal[3])))
NOMECIDADE C 030 0 Iif (SF3->F3_TIPO$"DB", SA2->A2_MUN, SA1->A1_MUN)
UF         C 002 0 Iif (SF3->F3_TIPO$"DB", SA2->A2_EST, SA1->A1_EST)
CEP        C 008 0 Iif (SF3->F3_TIPO$"DB", SA2->A2_CEP, SA1->A1_CEP)
(POS) FsQuery (_aTotal[1], 2)

[SF3 Registro Tipo R - Notas Fiscais Recebidas]
(PRE) SF3->(DbSetOrder (1))
(PRE) SF1->(DbSetOrder (1))
(PRE) SA1->(DbSetOrder (1))
(PRE) SA2->(DbSetOrder (1))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+_aTotal[97]+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING (F3_CFO,1,1)<'4' AND F3_TIPO='S'", "F3_FILIAL=='"+_aTotal[97]+"' .AND. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .AND. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .AND. SUBS (F3_CFO,1,1)<'4' .AND.F3_TIPO=='S'",SF3->(IndexKey ()))
(PRE) SF3->(DbGotop ())
(PREREG) Iif (!SF3->F3_TIPO$"DB", SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)), SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) SF1->(MsSeek (_aTotal[97]+SF3->F3_NFISCAL+SF3->F3_SERIE+SF3->F3_CLIEFOR+SF3->F3_LOJA)).Or. .T. 
(PREREG) Eval ({|| _aTotal[2] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_END, SA1->A1_END),.T.})
(PREREG) Eval ({|| _aTotal[3] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_BAIRRO, SA1->A1_BAIRRO),.T.})
(PREREG) Eval ({|| _aTotal[4] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_CGC, SA1->A1_CGC),.T.})
(PREREG) Eval ({|| _aTotal[5] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_MUN, SA1->A1_MUN),.T.})
(PREREG) Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCELAD"$SF3->F3_OBSERV, .F., .T.)                      
(PREREG) (_aTotal[6] := Iif (!Empty (SF3->F3_PDV), "CF",IIF(Empty(_aTotal[55]),Left ( SerieNfId("SF3",2,"F3_SERIE")  , 2),SubStr (_aTotal[55], Iif(At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])>0,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+4,At (SubStr ( SerieNfId("SF3",2,"F3_SERIE") , 1, 3), _aTotal[55])+5), 2))), .T.)
(PREREG) (_aTotal[7] := Iif (!Empty (SF3->F3_PDV), StrZero (Val (SF3->F3_PDV), 3)+SF3->F3_NFISCAL, SF3->F3_NFISCAL), .T.)
(PREREG) _aTotal[53] := _aTotal[6]
(PREREG) _aTotal[54] := _aTotal[8]
(PREREG) _aTotal[56] := SubStr (AllTrim (SF3->F3_CFOEXT), 1, 1)
IDENTREG   C 001 0 "R"  
DTPAGTO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO), 7, 2)+"/"+Substr (DTOS (SF3->F3_EMISSAO), 5, 2)+"/"+Str (Year (SF3->F3_EMISSAO), 4)
EMISSAO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO), 7, 2)+"/"+Substr (DTOS (SF3->F3_EMISSAO), 5, 2)+"/"+Str (Year (SF3->F3_EMISSAO), 4)
SERIENF    C 002 0 _aTotal[53]
MODELONF   C 001 0 ""
NATUREZA   C 001 0 _aTotal[56]                                                										
NF         C 009 0 _aTotal[7]
VLRBRUTO   C 015 0 StrZero (SF1->F1_VALBRUT, 15, 2)
VLRSERV    C 015 0 StrZero (SF3->F3_VALCONT, 15, 2)         
ALQISSQN   C 005 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, 0, StrZero (SF3->F3_ALIQICM, 05, 2))
PARCELA    C 006 0 Space (06)
QTDPARC    C 006 0 Space (06)
MOTIVONRET C 030 0 Space (30)
NALVARAP   C 011 0 Replicate ("0",11)
CNPJ       C 014 0 aFisFill (Num2Chr (Val (_aTotal[4]), 14, 0), 14)         
CPF        C 011 0 Iif (RetPessoa (_aTotal[4])=="F", _aTotal[4], Replicate ("0",11))         
NOMEPREST  C 040 0 Iif (!SF3->F3_TIPO$"DB", SA2->A2_NOME, SA1->A1_NOME)         
TIPORUA    C 010 0 Substr (_aTotal[2], 1, At (" ", _aTotal[2]))         
NOMERUA    C 050 0 Substr (_aTotal[2], At (" ", _aTotal[2])+1, (At (",", _aTotal[2])-At (" ", _aTotal[2]))-1)
NUMERO     C 006 0 If( Val(Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))==0,"000000",Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))
COMPL      C 020 0 If( Val(Substr (_aTotal[2], At(",",_aTotal[2])+1, Len (AllTrim (_aTotal[2]))))==0,"S/N",SPACE(20))
TIPOBAIRRO C 010 0 "BAIRRO"
NOMEBAIRRO C 050 0 Substr (_aTotal[3], 1,Len (AllTrim (_aTotal[3])))         
NOMECIDADE C 030 0 Iif (!SF3->F3_TIPO$"DB", SA2->A2_MUN, SA1->A1_MUN)
UF         C 002 0 Iif (!SF3->F3_TIPO$"DB", SA2->A2_EST, SA1->A1_EST)         
CEP        C 008 0 Iif (!SF3->F3_TIPO$"DB", SA2->A2_CEP, SA1->A1_CEP)         
(POS) FsQuery (_aTotal[1], 2)   

