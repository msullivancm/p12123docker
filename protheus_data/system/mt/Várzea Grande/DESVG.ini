?{"Nome do Arquivo INI","DESVG.INI"}
?{"Descicao Completa do Arquivo Magnetico","Declaracao Mensal de Servicos"}
?{"A Quem se Destina","Empresas tomadoras e/ou prestadoras de serviços do município de Várzea Grande - MT."}
?{"Objetivo","Declarar mensalmente, ao fisco, as informações dos serviços tomados/prestados no período de competência"}
?{"Prazo de Entrega","Até o dia 20 do mês subseqüente ao fato gerador do tributo."}
?{"Aplicativo Disponibilizado pelo Fisco","Livro eletrônico (On-Line)"}
?{"Legislacao Contemplada","Lei Complementar Nº 035 de 29 de Dezembro de 2004"}
?{"Comentarios",""}
                                                               
[XXX Inicializacao]
(PRE) _aTotal[20] := {}
(PRE) _aTotal[21] := {}
(PRE) _aTotal[22] := .F.
(PRE) _aTotal[23] := {} 

(PRE) _aTotal[24] := .F. 
(PRE) _aTotal[25] := .F.
(PRE) _aTotal[27] := SF2->(FieldPos(GetNewPar("MV_CDCRICL","")))
(PRE) _aTotal[28] := ""
(PRE) _aTotal[29] := SF1->(FieldPos(GetNewPar("MV_CDCRIFO","")))
(PRE) _aTotal[30] := ""
(PRE) _aTotal[31] := ""
(PRE) _aTotal[32] := ""
(PRE) _aTotal[33] := ""
(PRE) _aTotal[34] := ""
(PRE) _aTotal[35] := ""
(PRE) _aTotal[38] := Alltrim(GetNewPar("MV_CODBSC",""))
(PRE) _aTotal[99] := MV_PAR01
(PRE) _aTotal[98] := MV_PAR02
(PRE) _aTotal[50] := ""
(PRE) _aTotal[51] := ""
(PRE) _aTotal[52] := .F. 

[XXX Wizard da rotina]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³TELA PRINCIPAL³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) aAdd (_aTotal[21], "Processamento da Declaração de Serviços de Várzea Grande - MT")
(PRE) aAdd (_aTotal[21], "")
(PRE) aAdd (_aTotal[21], "Preencha corretamente as informações solicitadas.")
(PRE) aAdd (_aTotal[21], "Informações necessárias para a Declaração de Serviços de Várzea Grande - MT")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³TELAS SECUNDARIAS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) aAdd (_aTotal[20], {})
(PRE) aAdd (_aTotal[20][1], "Processamento da Declaração de Serviços de Várzea Grande - MT")
(PRE) aAdd (_aTotal[20][1], "Informações necessárias para a Declaração de Serviços de Várzea Grande - MT")
(PRE) aAdd (_aTotal[20][1], {})
(PRE) aAdd (_aTotal[20][1][3], {1, "Informe o CNPJ da Prefeitura:",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Informe o tipo de arquivo a ser gerado:",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {2,,"@!",1,0,,,14})
(PRE) aAdd (_aTotal[20][1][3], {3,,,,,{"1P-Serviços Prestados","1T-Serviços Tomados"},,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Informe a Codificação de Cidades utilizadas:",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "Considera retenção ?",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {3,,,,,{"1-IBGE","2-SIAFI/SIPREV"},,})
(PRE) aAdd (_aTotal[20][1][3], {3,,,,,{"1-AMBOS","2-TOMADOR","3-PRESTADOR"},,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
(PRE) aAdd (_aTotal[20][1][3], {1, "",,,,,,})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³CHAMADA WIZARD³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) _aTotal[22] := xMagWizard (_aTotal[21], _aTotal[20], "DESVG")
(PRE) Iif (_aTotal[22], xMagLeWiz ("DESVG", @_aTotal[23], .T.), Nil)
(PRE) lAbtMT950	:= !_aTotal[22]

[XXX Registro Tipo 0 - Identificacao Prefeitura ]
(PREREG) !Empty(AllTrim(_aTotal[23][1][1]))
IDENTREG   N 001 0 0
CNPJPRE    C 014 0 _aTotal[23][1][1]
VERSAO     N 003 0 001

[XXX Registro Tipo 1 - Declaracao ]
IDENTREG   C 001 0 "1"
TIPO       C 001 0 Iif("1P"$_aTotal[23][1][2],"P","T")
CODCIDAD   C 001 0 Substr(_aTotal[23][1][3],1,1)
INSC       C 014 0 SM0->M0_CGC
NOME       C 050 0 SM0->M0_NOME
DATAINI    C 008 0 StrZero(Day(_aTotal[99]),2)+StrZero(Month(_aTotal[99]),2)+StrZero(Year(_aTotal[99]),4)
DATAFIM    C 008 0 StrZero(Day(_aTotal[98]),2)+StrZero(Month(_aTotal[98]),2)+StrZero(Year(_aTotal[98]),4)

[SF3 Registro Tipo 2 - Documentos / Serviços Prestados]
(PRE) SF3->(dbSetOrder(1))
(PRE) SA1->(dbSetOrder(1))
(PRE) SF2->(dbSetOrder(1))
(PRE) _aTotal[24] := AliasIndic ("SFT")
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery(_aTotal[1],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_EMISSAO >= '" + dTos(_aTotal[99]) + "' AND F3_EMISSAO <= '" + dTos(_aTotal[98]) + "' AND F3_CODISS <> '' AND F3_TIPO = 'S' AND SUBSTRING(F3_CFO,1,1) >= '5'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_EMISSAO) >= '" + DTOS(_aTotal[99]) + "' .AND. DTOS(F3_EMISSAO) <= '" + DTOS(_aTotal[98]) + "' .And. !Empty(F3_CODISS) .And. F3_TIPO == 'S' .And. SubStr(F3_CFO,1,1) >= '5'",SF3->(IndexKey()))
(PRE) SF3->(dbGotop())
(PREREG) "1P"$_aTotal[23][1][2]
//Verifico através da SFT se a Nota é Conjugada
(PREREG) (_aTotal[25] := .F.,.T.)
(PREREG) Iif(_aTotal[24], SFT->(DBSeek(xFilial("SFT")+"S"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA)), .T.)
(PREREG) Iif(_aTotal[24],(SFT->(DbEval ({|| Iif(SFT->FT_TIPO<>"S",_aTotal[25]:=.T.,"")},,{||!SFT->(Eof ()).And. xFilial("SFT")+"S"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA ==xFilial("SFT")+"S"+SFT->FT_SERIE+SFT->FT_NFISCAL+SFT->FT_CLIEFOR+SFT->FT_LOJA})),.T.),.T.)
//Busco o Cliente
(PREREG) SA1->(dbSeek(xFilial("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
//Esse seek é preciso pois o Municipio pode ser customizado na SF2
(PREREG) (SF2->(DbSeek(F3Filial("SF2")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.)
// Monta a serie a ser apresentada
(PREREG) (_aTotal[31] := Alltrim(SF3->F3_SERIE),.T.)
// Tratamento para o código de servico quando tiver 3 caracteres - LC 116/03
//(PREREG) (_aTotal[34] := IIf(_aTotal[38]>0, Alltrim(SF3->(FieldGet(_aTotal[38]))),""), .T.)
(PREREG) (_aTotal[34] := IIf(SF3->(FieldPos(_aTotal[38]))>0, Alltrim(SF3->(&(_aTotal[38]))),""), .T.)
(PREREG) (_aTotal[35] := Iif(Len(_aTotal[34])==3,"0"+_aTotal[34],_aTotal[34]), .T.)
//UF cliente
(PREREG) (_aTotal[33] := Iif(FindFunction("RetUfIBGE"), RetUfIBGE(SA1->A1_EST) , UfCodIBGE(SA1->A1_EST)),.T.)
//Codigo Municipio Cliente Siaf ou IBGE
(PREREG) (_aTotal[43] := IIf(FindFunction("RetSIAFI"),RetSIAFI(SA1->A1_EST,SA1->A1_COD_MUN),"") ,.T.)
(PREREG) (_aTotal[44] := (_aTotal[33]) + SA1->A1_COD_MUN, .T.)
(PREREG) (_aTotal[45] := Iif("1"$_aTotal[23][1][3],_aTotal[44],_aTotal[43]), .T.)
//Optante Simples Nacional
(PREREG) (_aTotal[32] := Alltrim(SA1->A1_SIMPNAC),.T.)
//Local da Prestação do Serviço
(PREREG) (_aTotal[28] := Iif(_aTotal[27] > 0, SF2->(FieldGet(FieldPos(GetNewPar("MV_CDCRICL")))),""), .T.)
(PREREG) (_aTotal[46] := Iif(!Empty(_aTotal[28]),Iif(FindFunction("RetUfIBGE"), RetUfIBGE(SubsTR(_aTotal[28],1,2)) , UfCodIBGE(SubsTR(_aTotal[28],1,2))),SA1->A1_EST), .T.)
(PREREG) (_aTotal[47] := Iif(!Empty(_aTotal[28]),SubsTR(_aTotal[28],3,5),SA1->A1_COD_MUN), .T.)
(PREREG) (_aTotal[48] := Iif(!Empty(_aTotal[28]),_aTotal[28],_aTotal[44]), .T.)
(PREREG) (_aTotal[49] := Iif("1"$_aTotal[23][1][3],_aTotal[48],IIf(FindFunction("RetSIAFI"),RetSIAFI(_aTotal[46],_aTotal[47]),"")), .T.)
//Considerar apenas Documentos que tenham Retenção pelo Tomador ->"1-AMBOS","2-TOMADOR","3-PRESTADOR"
//Se opção 2-Tomador verifico se o F3_RECISS contém "2N"
//Se opção 3-Prestador verifico se o F3_RECISS contém "1S"
//Senão considera ambas situações
(PREREG) (_aTotal[53] :=Iif("2"$_aTotal[23][1][4],"1S",IIf("3"$_aTotal[23][1][4],"2N","12SN")), .T.)
//MOTIVO_CANC - Como não há no sistema onde informar o motivo do cancelamento e o layout permite que o campo seja Nulo, este campo não será gerado.

(PREREG) SF3->F3_RECISS $ _aTotal[53] 
IDENTREG   C 001 0 "2"
INSCPRES   C 014 0 Iif(RetPessoa(SA1->A1_CGC)=="F",aFisFill(SA1->A1_CGC,11),aFisFill(SA1->A1_CGC,14))
NOME       C 050 0 SA1->A1_NOME
SERIE      C 006 0 AllTrim(_aTotal[31])
DOCINI     C 009 0 RetNf(SF3->F3_NFISCAL,9,"N")
DOCFIM     C 009 0 RetNf(SF3->F3_NFISCAL,9,"N")
DTEMIS     C 008 0 StrZero(Day(SF3->F3_EMISSAO),2)+StrZero(Month(SF3->F3_EMISSAO),2)+StrZero(Year(SF3->F3_EMISSAO),4)
TIPO       C 001 0 Iif(!Empty(SF3->F3_PDV),"C",Iif(_aTotal[25],"J","N"))
SITUAC     C 001 0 Iif(!Empty(SF3->F3_DTCANC),"C",Iif(!Empty(SF3->F3_ISENICM),"I",Iif(SF3->F3_RECISS$"1S","N","R")))
VALDOC     N 015 2 SF3->F3_VALCONT
LOCALI     C 001 0 Iif(_aTotal[44] <> SM0->M0_CODMUN,"F","D")
ICIDADE    C 007 0 _aTotal[45]
SIMPLESNA  C 001 0 Iif(_aTotal[32]$"S1","S","N")
(POS) FsQuery(_aTotal[1],2)

{XXX Registro Tipo 3 - Servicos}
(PREREG)   Empty(SF3->F3_DTCANC)
IDENTREG   C 001 0 "3"
CNAESERV   C 007 0 Replicate(" ",7-len(_aTotal[35]))+_aTotal[35]
VALSERV    N 015 2 SF3->F3_VALCONT
LOCSERV    C 007 0 _aTotal[49]
ALIQUOTA   N 004 2 SF3->F3_ALIQICM 

[SF3 Registro Tipo 2 - Documentos / Serviços Tomados]
(PRE) SA2->(dbSetOrder(1))
(PRE) SF3->(dbSetOrder(1))
(PRE) SF1->(dbSetOrder(1))
(PRE) _aTotal[24] := AliasIndic ("SFT")
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery(_aTotal[1],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_EMISSAO >= '" + dTos(_aTotal[99]) + "' AND F3_EMISSAO <= '" + dTos(_aTotal[98]) + "' AND F3_CODISS <> '' AND F3_TIPO = 'S' AND SUBSTRING(F3_CFO,1,1) < '5'","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_EMISSAO) >= '" + DTOS(_aTotal[99]) + "' .AND. DTOS(F3_EMISSAO) <= '" + DTOS(_aTotal[98]) + "' .And. !Empty(F3_CODISS) .And. F3_TIPO == 'S' .And. SubStr(F3_CFO,1,1) < '5'",SF3->(IndexKey()))
(PRE) SF3->(dbGotop())
(PREREG) "1T"$_aTotal[23][1][2]
//Verifico através da SFT se a Nota é Conjugada
(PREREG) (_aTotal[25] := .F.,.T.)
(PREREG) Iif(_aTotal[24], SFT->(DBSeek(xFilial("SFT")+"E"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA)), .T.)
(PREREG) Iif(_aTotal[24],(SFT->(DbEval ({|| Iif(SFT->FT_TIPO<>"S",_aTotal[25]:=.T.,"")},,{||!SFT->(Eof ()).And. xFilial("SFT")+"E"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA ==xFilial("SFT")+"E"+SFT->FT_SERIE+SFT->FT_NFISCAL+SFT->FT_CLIEFOR+SFT->FT_LOJA})),.T.),.T.)
//Esse seek é preciso pois o Municipio pode ser customizado na SF1
(PREREG) (SF1->(DbSeek(F3Filial("SF1")+SF3->F3_NFISCAL+SF3->F3_SERIE)),.T.)
//Busco o Fornecedor
(PREREG) SA2->(dbSeek(xFilial("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA))
// Monta a serie a ser apresentada
(PREREG) (_aTotal[31] := Alltrim(SF3->F3_SERIE),.T.)
//Optante Simples Nacional
(PREREG) (_aTotal[32] := Alltrim(SA2->A2_SIMPNAC),.T.)
//UF Fornecedor
(PREREG) (_aTotal[33] := Iif(FindFunction("RetUfIBGE"), RetUfIBGE(SA2->A2_EST) , UfCodIBGE(SA2->A2_EST)),.T.)
// Tratamento para o código de servico quando tiver 3 caracteres - LC 116/03
//(PREREG) (_aTotal[34] := IIf(_aTotal[38]>0, Alltrim(SF3->(FieldGet(_aTotal[38]))),""), .T.)
(PREREG) (_aTotal[34] := IIf(SF3->(FieldPos(_aTotal[38]))>0, Alltrim(SF3->(&(_aTotal[38]))),""), .T.)
(PREREG) (_aTotal[35] := Iif(Len(_aTotal[34])==3,"0"+_aTotal[34],_aTotal[34]), .T.)
//Codigo Municipio Fornecedor Siaf ou IBGE
(PREREG) (_aTotal[43] := IIf(FindFunction("RetSIAFI"),RetSIAFI(SA2->A2_EST,SA2->A2_COD_MUN),"") ,.T.)
(PREREG) (_aTotal[44] := (_aTotal[33]) + SA2->A2_COD_MUN, .T.)
(PREREG) (_aTotal[45] := Iif("1"$_aTotal[23][1][3],_aTotal[44],_aTotal[43]), .T.)
//Local da Prestação do Serviço
(PREREG) (_aTotal[28] := Iif(_aTotal[29] > 0, SF1->(FieldGet(FieldPos(GetNewPar("MV_CDCRIFO")))), SM0->M0_CODMUN), .T.)
(PREREG) (_aTotal[46] := Iif(FindFunction("RetUfIBGE"), RetUfIBGE(SubsTR(_aTotal[28],1,2)) , UfCodIBGE(SubsTR(_aTotal[28],1,2))), .T.)
(PREREG) (_aTotal[47] := SubsTR(_aTotal[28],3,5), .T.)
(PREREG) (_aTotal[48] := Iif("1"$_aTotal[23][1][3],_aTotal[28],IIf(FindFunction("RetSIAFI"),RetSIAFI(_aTotal[46],_aTotal[47]),"")), .T.)
//Inscrição Prestador - Considerar apenas CNPJ
(PREREG) (_aTotal[50] := RetPessoa(SA2->A2_CGC), .T.)
(PREREG) (_aTotal[51] := IIF(_aTotal[50]=="J",aFisFill(SA2->A2_CGC,14),Replicate(" ",14)), .T.)
//Tratamento para que seja gerada informações no arquivo somente para prestador fora do Municipio ou se for do Municipio que não emita NFS-e
(PREREG) (_aTotal[52] := IIf(!Empty(_aTotal[44]) .And. (_aTotal[44] <> Alltrim(SM0->M0_CODMUN) .Or. (_aTotal[44] == Alltrim(SM0->M0_CODMUN) .And. Alltrim(SF3->F3_ESPECIE)<>"NFSE")),.T.,.F.),.T.)
//Considerar apenas Documentos que tenham Retenção pelo Tomador ->"1-AMBOS","2-TOMADOR","3-PRESTADOR"
//Se opção 2-Tomador verifico se o F3_RECISS contém "2N"
//Se opção 3-Prestador verifico se o F3_RECISS contém "1S"
//Senão considera ambas situações
(PREREG) (_aTotal[53] :=Iif("2"$_aTotal[23][1][4],"2N",IIf("3"$_aTotal[23][1][4],"1S","12SN")), .T.)
//MOTIVO_CANC - Como não há no sistema onde informar o motivo do cancelamento e o layout permite que o campo seja Nulo, este campo não será gerado.

(PREREG) _aTotal[50] == "J" .And. _aTotal[52] .And. SF3->F3_RECISS $ _aTotal[53] 
IDENTREG   C 001 0 "2"
INSCPRES   C 014 0 _aTotal[51]
NOME       C 050 0 SA2->A2_NOME
SERIE      C 006 0 AllTrim(_aTotal[31])
DOCINI     C 009 0 RetNf(SF3->F3_NFISCAL,9,"N")
DOCFIM     C 009 0 RetNf(SF3->F3_NFISCAL,9,"N")
DTEMIS     C 008 0 StrZero(Day(SF3->F3_EMISSAO),2)+StrZero(Month(SF3->F3_EMISSAO),2)+StrZero(Year(SF3->F3_EMISSAO),4)
TIPO       C 001 0 Iif(!Empty(SF3->F3_PDV),"C",Iif(_aTotal[25],"J","N"))
SITUAC     C 001 0 Iif(!Empty(SF3->F3_DTCANC),"C",Iif(!Empty(SF3->F3_ISENICM),"I",Iif(SF3->F3_RECISS$"1S","N","R")))
VALDOC     N 015 2 SF3->F3_VALCONT
LOCALI     C 001 0 Iif(_aTotal[44] <> SM0->M0_CODMUN,"F","D")
ICIDADE    C 007 0 _aTotal[45]
SIMPLESNA  C 001 0 Iif(_aTotal[32]$"S1","S","N")
(POS) FsQuery(_aTotal[1],2)

{XXX Registro Tipo 3 - Servicos}
(PREREG)   Empty(SF3->F3_DTCANC)
IDENTREG   C 001 0 "3"
CNAESERV   C 007 0 Replicate(" ",7-len(_aTotal[35]))+_aTotal[35]
VALSERV    N 015 2 SF3->F3_VALCONT
ICIDADE    C 007 0 _aTotal[48]
ALIQUOTA   N 004 2 SF3->F3_ALIQICM