?{"Nome do Arquivo INI","ISSFNI .INI"}
?{"Descricao Completa do Arquivo Magnetico","Declaracao Mensal de Servico da Prefeitura Municipal de Nova Iguaçu - RJ"}
?{"A Quem se Destina","Todos os prestadores e tomadores de serviços, sejam de direito público ou privado"}
?{"Objetivo","substituir os procedimentos manuais de declaração e recolhimento do ISS por um sistema integrado de gestão, proporcionando facilidade, agilidade, segurança e comodidade na declaração do imposto sobre serviços."}
?{"Prazo de Entrega","Mensal, vence no dia 15 (quinze) do mês subseqüente àquele em que ocorrer a prestação do serviço."}
?{"Aplicativo Disponibilizado pelo Fisco","ISS + Facil"}
?{"Versao do Aplicativo Contemplada pela Microsiga","2.00.02"}
?{"Comentarios",""}
[XXX Inicializacao ]
(PRE) _aTotal[99] := MV_PAR01
(PRE) _aTotal[98] := MV_PAR02
(PRE) _aTotal[97] := {}
(PRE) _aTotal[96] := {} 
(PRE) _aTotal[11] := .F.
(PRE) _aTotal[12] := {} 
(PRE) _aTotal[09] := cFilAnt 
(PRE) _aTotal[16]:= 0
(PRE) _aTotal[17]:= 0 



[XXX Wizard da rotina]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³TELA PRINCIPAL³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) aAdd (_aTotal[97], "Processamento do ISS + Facil")
(PRE) aAdd (_aTotal[97], "")
(PRE) aAdd (_aTotal[97], "Preencha corretamente as informações solicitadas.")
(PRE) aAdd (_aTotal[97], "Informações necessárias para a geração automática do ISS + Facil")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³TELAS SECUNDARIAS³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) aAdd (_aTotal[96], {})
(PRE) aAdd (_aTotal[96][1], "Processamento do ISS + Facil")
(PRE) aAdd (_aTotal[96][1], "Informações necessárias para a geração automática do ISS + Facil")
(PRE) aAdd (_aTotal[96][1], {})
(PRE) aAdd (_aTotal[96][1][3], {1, "Inscrição Municipal da Empresa",,,,,,})   
(PRE) aAdd (_aTotal[96][1][3], {1, "Versão",,,,,,})
(PRE) aAdd (_aTotal[96][1][3], {2,,"@!",1,0,,,11}) 
(PRE) aAdd (_aTotal[96][1][3], {2,,"@!",1,0,,,3})  
(PRE) aAdd (_aTotal[96][1][3], {1, "Enquadrado no Simples Nacional",,,,,,}) 
(PRE) aAdd (_aTotal[96][1][3], {1, "",,,,,,}) 
(PRE) aAdd (_aTotal[96][1][3],{3,,,,,{"1-Sim", "2-Não"},,}) 
(PRE) aAdd (_aTotal[96][1][3], {1, "",,,,,,}) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³CHAMADA WIZARD³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
(PRE) _aTotal[11] := xMagWizard (_aTotal[97], _aTotal[96], "ISSFNI")
(PRE) Iif (_aTotal[11], xMagLeWiz ("ISSFNI", @_aTotal[12], .T.), Nil)
(PRE) lAbtMT950	:= !_aTotal[11]  

(PRE) _aTotal[80] := GetNewPar("MV_SERFNI","")
(PRE) _aTotal[81] := "Parâmetro não existe"
(PRE) _aTotal[82] := "O parâmetro MV_SERFNI não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[82] += "Para que as séries dos documentos fiscais sejam lançadas corretamente no meio magnético "
(PRE) _aTotal[82] += "é necessário respeitar a solução proposta abaixo"
(PRE) _aTotal[83] := "Incluir o parâmetro MV_SERFNI (tipo caractere) na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[83] += "[Serie no Sistema (com três caracteres)]-[Serie no Sistema do ISS + Facil (com dois caracteres)]" 
(PRE) _aTotal[83] += "  Exemplo:  1  -U /2  -U /. Para separar a serie do sistema da serie do ISS + Facil, utilize o '-' (hífen)."
(PRE) _aTotal[83] += " Para separar grupos de séries, utilize a '/' (barra). Para maiores informações, consultar a documentação da rotina"
(PRE) Iif(Empty(_aTotal[80]),xMagHelpFis(_aTotal[81],_aTotal[82],_aTotal[83]),.T.)

(PRE) _aTotal[90] := Alltrim(Upper(GetNewPar("MV_CIDADE","")))  
  
(PRE) _aTotal[91] := GetNewPar ("MV_F3RECIS", .F.)
(PRE) _aTotal[91] := Iif (_aTotal[91], .T., .F.)
(PRE) _aTotal[93]	:=	&(GetNewPar ("MV_MUNSIAF", "{}"))

[XXX Registro Tipo H - Identificacao ]
IDENTREG   C 001 0 "H"        
CMC        C 011 0 Replicate ("0",11-Len(Alltrim(Substr(_aTotal[12][1][1],1,11))))+Alltrim(Substr(_aTotal[12][1][1],1,11))
VERSAO     C 003 0 Alltrim(Substr(_aTotal[12][1][2],1,3))

[SF3 Registro Tipo E - Notas Fiscais Emitidas ]
(PRE) SF3->(DbSetOrder (1))
(PRE) SA1->(DbSetOrder (1))
(PRE) SA2->(DbSetOrder (1))  
(PRE) SFT->(DbSetOrder (1))
(PRE) _aTotal[1] := {"SF3", ""}                 
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+_aTotal[09]+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING(F3_CFO,1,1)>='5' AND F3_TIPO IN ('S','L') AND F3_CODISS <> ''","F3_FILIAL=='"+_aTotal[09]+"' .AND. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .AND. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .AND. SUBS(F3_CFO, 1, 1)>='5' .AND. F3_TIPO$'SL' .AND. !Empty(F3_CODISS)",SF3->(IndexKey ()))
(PRE) SF3->(DbGotop ())
(PREREG) Iif (SF3->F3_TIPO$"DB", SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)), SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (SFT->(DBSeek(xFilial("SFT")+"S"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA)),.T.)
(PREREG) (_aTotal[94]:= Iif(Len(_aTotal[93])>0,Iif (SF3->F3_TIPO$"DB", Iif(Len(_aTotal[93][2])>0,SA2->&(_aTotal[93][2]),""),Iif(Len(_aTotal[93][1])>0,SA1->&(_aTotal[93][1]),"")),""),.T.)
(PREREG) (_aTotal[40] := Iif((SF3->F3_TIPO$"DB"),SA2->A2_MUN,SA1->A1_MUN),.T.)
(PREREG) Eval ({|| _aTotal[2] := Iif (SF3->F3_TIPO$"DB", SA2->A2_END, SA1->A1_END),.T.})
(PREREG) Eval ({|| _aTotal[3] := Iif (SF3->F3_TIPO$"DB", SA2->A2_BAIRRO, SA1->A1_BAIRRO),.T.})
(PREREG) Eval ({|| _aTotal[4] := Iif (SF3->F3_TIPO$"DB", SA2->A2_CGC, SA1->A1_CGC),.T.}) 
(PREREG) Eval ({|| _aTotal[15] := Iif (_aTotal[91], Iif (SF3->F3_RECISS$"S,1", "R", "A"), Iif (SF3->F3_TIPO$"DB", Iif (SA2->A2_RECISS$"S,1", "R", "A"), Iif (SA1->A1_RECISS$"S,1", "R", "A"))),.T.})
(PREREG) Eval ({|| _aTotal[16] := IIF(SFT->FT_TIPO <> "S",SFT->FT_VALCONT,0),.T.}) 
(PREREG) (_aTotal[5] := Iif(!(AllTrim(SerieNfId("SF3",2,"F3_SERIE"))$_aTotal[80]),0,At(AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[80])), .T.)
(PREREG) (_aTotal[7] := Iif(_aTotal[5]==0,AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),SubStr(_aTotal[80],_aTotal[5]+4,2)),.T.)
(PREREG) (_aTotal[6] := Iif (!Empty (SF3->F3_PDV), StrZero (Val (SF3->F3_PDV), 3)+SF3->F3_NFISCAL, SF3->F3_NFISCAL), .T.)
(PREREG) (_aTotal[10] := Iif(Substr(_aTotal[12][1][3],1,1)$"1","H",""),.T.)
// Verifica se o servico foi prestado em Belem pelo cadastro do cliente
(PREREG) (_aTotal[88] := Iif(!Alltrim(_aTotal[40])$Alltrim(_aTotal[90]),"E",""),.T.)
(PREREG) (_aTotal[85] := Iif(SF3->F3_ISENICM>0, "C", IIF(!Empty(_aTotal[10]),_aTotal[10],Iif(!Empty(_aTotal[88]),_aTotal[88],"T"))), .T.)
(PREREG) (_aTotal[86] := Iif (SF3->F3_TIPO$"DB",SA2->A2_SIMPNAC,SA1->A1_SIMPNAC),.T.)
(PREREG) (_aTotal[17] := Iif(_aTotal[16]>0, SF3->F3_VALCONT+_aTotal[16],SF3->F3_VALCONT),.T.)
IDENTREG   C 001 0 "E"
EMISSAO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO),7,2)+"/"+Substr (DTOS (SF3->F3_EMISSAO),5,2)+"/"+Str (Year (SF3->F3_EMISSAO),4)
SERIENF    C 002 0 _aTotal[7]
MODELONF   C 001 0 IIf(AllTrim(_aTotal[7])$"OT","T","")
TIPONF     C 001 0 _aTotal[85]
NF         C 009 0 RetNf(_aTotal[6],9,"N")
VLRBRUTO   C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, StrZero(0,15,2), StrZero (_aTotal[17], 15, 2))
VLRSERV    C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, StrZero(0,15,2), StrZero (SF3->F3_VALCONT, 15, 2))
FORMAREC   C 001 0 _aTotal[15]        
ALQISSQN   C 005 0 Iif (Alltrim(Substr(_aTotal[12][1][3],1,1))$"1",StrZero(0,5,2),Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, StrZero(0,5,2), StrZero (SF3->F3_ALIQICM, 05, 2)))
CNPJ       C 014 0 Iif (SF3->F3_TIPO$"L",Replicate ("0",14),Iif (RetPessoa (_aTotal[4])=="J", _aTotal[4], Replicate ("0",14)))
CPF        C 011 0 Iif (SF3->F3_TIPO$"L",Replicate ("0",11),Iif (RetPessoa (_aTotal[4])=="F", _aTotal[4], Replicate ("0",11)))
NOME       C 040 0 Iif (SF3->F3_TIPO$"L","CONSUMIDOR",Iif (SF3->F3_TIPO$"DB", SA2->A2_NOME, SA1->A1_NOME))
CSIAFI     C 010 0 _aTotal[94]
CNAE       C 010 0 Iif (SF3->F3_TIPO$"DB", Alltrim(SA2->A2_ATIVIDA)+Replicate ("0", 10-Len (Alltrim(SA2->A2_ATIVIDA))), Alltrim(SA1->A1_ATIVIDA)+Replicate ("0", 10-Len (Alltrim(SA1->A1_ATIVIDA))))
CSIAFIP    C 010 0 Iif (Alltrim(_aTotal[90])<>Alltrim(Upper(_aTotal[90])),"",_aTotal[94])
NFLOTE     C 009 0 Iif (SF3->F3_TIPO$"L",SF3->F3_DOCOR,"000000000")
SIT        C 001 0 Iif (SF3->F3_TIPO$"L","N",Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV,"C","N"))
SIMPLESN   C 001 0 Iif(_aTotal[86]$'1',"S",Iif(_aTotal[86]$'2',"N",""))  
NATUREZA   C 001 0 IIf(SF3->F3_ISSMAT > 0,"B",Iif(SF3->F3_ISENICM>0,"C","A"))
(POS) FsQuery (_aTotal[1], 2)

[SF3 Registro Tipo D - Deducao de Materiais da Nota Fiscal Emitida da Construção Civil ]
(PRE) SF3->(DbSetOrder (1))
(PRE) SF2->(DbSetOrder (1))
(PRE) SA1->(DbSetOrder (1))
(PRE) SA2->(DbSetOrder (1))
(PRE) _aTotal[1] := {"SF3", ""}                 
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+_aTotal[09]+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING(F3_CFO,1,1)>='5' AND F3_TIPO='S'","F3_FILIAL=='"+_aTotal[09]+"' .AND. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .AND. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .AND. SUBS(F3_CFO, 1, 1)>='5' .AND. F3_TIPO='S'",SF3->(IndexKey ()))
(PRE) SF3->(DbGotop ())
(PREREG) Iif (SF3->F3_TIPO$"DB", SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)), SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (_aTotal[94]:= Iif(Len(_aTotal[93])>0,Iif (SF3->F3_TIPO$"DB", Iif(Len(_aTotal[93][2])>0,SA2->&(_aTotal[93][2]),""),Iif(Len(_aTotal[93][1])>0,SA1->&(_aTotal[93][1]),"")),""),.T.)
(PREREG) Eval ({|| _aTotal[2] := Iif (SF3->F3_TIPO$"DB", SA2->A2_END, SA1->A1_END),.T.})
(PREREG) Eval ({|| _aTotal[3] := Iif (SF3->F3_TIPO$"DB", SA2->A2_BAIRRO, SA1->A1_BAIRRO),.T.})
(PREREG) Eval ({|| _aTotal[4] := Iif (SF3->F3_TIPO$"DB", SA2->A2_CGC, SA1->A1_CGC),.T.})
(PREREG) Eval ({|| _aTotal[16]:= IIF(SFT->FT_TIPO <> "S",SFT->FT_VALCONT,0),.T.}) 
(PREREG) (_aTotal[5] := Iif(!(AllTrim( SerieNfId("SF3",2,"F3_SERIE") )$_aTotal[80]),0,At(AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[80])), .T.)
(PREREG) (_aTotal[7] := Iif(_aTotal[5]==0,AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),SubStr(_aTotal[80],_aTotal[5]+4,2)),.T.)
(PREREG) (_aTotal[6] := Iif (!Empty (SF3->F3_PDV), StrZero (Val (SF3->F3_PDV), 3)+SF3->F3_NFISCAL, SF3->F3_NFISCAL), .T.)
(PREREG) _aTotal[52] := IIf(SF3->F3_ISSMAT > 0 , .T.,.F.)     
IDENTREG   C 001 0 "D"
EMISSAO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO),7,2)+"/"+Substr (DTOS (SF3->F3_EMISSAO),5,2)+"/"+Str (Year (SF3->F3_EMISSAO),4)
SERIENF    C 002 0 _aTotal[7]
MODELONF   C 001 0 IIf(AllTrim(_aTotal[7])$"OT","T","")
NF         C 009 0 RetNf(_aTotal[6],9,"N")
VLRBRUTO   C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, StrZero(0,15,2), StrZero (SF3->F3_VALCONT, 15, 2))
TIPODED    C 001 0 "M"
NFDED      C 009 0 RetNf(_aTotal[6],9,"N")
VLBRUTOD   C 015 0 Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCEL"$SF3->F3_OBSERV, StrZero(0,15,2), StrZero (SF3->F3_VALCONT, 15, 2))
VLMAT      C 015 0 StrZero (SF3->F3_ISSMAT, 15, 2)  
CNPJ       C 014 0 aFisFill (Num2Chr (Val (_aTotal[4]), 14, 0), 14)
CPF        C 011 0 Iif (RetPessoa (_aTotal[4])=="F", _aTotal[4], Replicate ("0",11))
NOME       C 040 0 Iif (SF3->F3_TIPO$"DB", SA2->A2_NOME, SA1->A1_NOME)
CSIAFI     C 010 0 _aTotal[94]
(POS) FsQuery (_aTotal[1], 2)

[SF3 Registro Tipo R - Notas Fiscais Recebidas]
(PRE) SF3->(DbSetOrder (1))
(PRE) SA1->(DbSetOrder (1))
(PRE) SA2->(DbSetOrder (1))
(PRE) SFT->(DbSetOrder (1))
(PRE) _aTotal[1] := {"SF3", ""}
(PRE) FsQuery (_aTotal[1], 1, "F3_FILIAL='"+_aTotal[09]+"' AND F3_EMISSAO>='"+DTOS (_aTotal[99])+"' AND F3_EMISSAO<='"+DTOS (_aTotal[98])+"' AND SUBSTRING(F3_CFO,1,1)<'4' AND F3_TIPO='S'", "F3_FILIAL=='"+_aTotal[09]+"' .AND. DTOS (F3_EMISSAO)>='"+DTOS (_aTotal[99])+"' .AND. DTOS (F3_EMISSAO)<='"+DTOS (_aTotal[98])+"' .AND. SUBS(F3_CFO,1,1)<'4' .AND. F3_TIPO=='S'",SF3->(IndexKey ()))
(PRE) SF3->(DbGotop ())
(PREREG) Iif (!SF3->F3_TIPO$"DB", SA2->(DbSeek (xFilial ("SA2")+SF3->F3_CLIEFOR+SF3->F3_LOJA)), SA1->(DbSeek (xFilial ("SA1")+SF3->F3_CLIEFOR+SF3->F3_LOJA)))
(PREREG) (SFT->(DBSeek(xFilial("SFT")+"E"+SF3->F3_SERIE+SF3->F3_NFISCAL+SF3->F3_CLIEFOR+SF3->F3_LOJA)),.T.)
(PREREG) (_aTotal[94]:= Iif(Len(_aTotal[93])>0,Iif (!SF3->F3_TIPO$"DB", Iif(Len(_aTotal[93][2])>0,SA2->&(_aTotal[93][2]),""),Iif(Len(_aTotal[93][1])>0,SA1->&(_aTotal[93][1]),"")),""),.T.)
(PREREG) Eval ({|| _aTotal[2] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_END, SA1->A1_END),.T.})
(PREREG) Eval ({|| _aTotal[3] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_BAIRRO, SA1->A1_BAIRRO),.T.})
(PREREG) Eval ({|| _aTotal[4] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_CGC, SA1->A1_CGC),.T.})
(PREREG) Eval ({|| _aTotal[60]:= Iif(!(SF3->F3_TIPO$"DB"),SA2->A2_RECISS,SA1->A1_RECISS),.T.}) 
(PREREG) Eval ({|| _aTotal[92] := Iif (_aTotal[91], Iif (SF3->F3_RECISS$"S,1", "C", ""), Iif (!SF3->F3_TIPO$"DB", Iif (SA2->A2_RECISS$"S,1", "C", ""), Iif (SA1->A1_RECISS$"S,1", "C", ""))),.T.})
(PREREG) Eval ({|| _aTotal[16] := IIF(SFT->FT_TIPO <> "S",SFT->FT_VALCONT,0),.T.}) 
(PREREG) Iif (!Empty (SF3->F3_DTCANC) .Or. "CANCELAD"$SF3->F3_OBSERV, .F., .T.)
(PREREG) (_aTotal[5] := Iif(!(AllTrim( SerieNfId("SF3",2,"F3_SERIE") )$_aTotal[80]),0,At(AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),_aTotal[80])), .T.)
(PREREG) (_aTotal[7] := Iif(_aTotal[5]==0,AllTrim( SerieNfId("SF3",2,"F3_SERIE") ),SubStr(_aTotal[80],_aTotal[5]+4,2)),.T.)
(PREREG) (_aTotal[6] := Iif (!Empty (SF3->F3_PDV), StrZero (Val (SF3->F3_PDV), 3)+SF3->F3_NFISCAL, SF3->F3_NFISCAL), .T.)
(PREREG) (_aTotal[8] := Iif (!SF3->F3_TIPO$"DB", SA2->A2_MUN, SA1->A1_MUN),.T.)    
(PREREG) (_aTotal[85] := Iif (_aTotal[92]$"C",_aTotal[92],Iif(SF3->F3_ISENICM>0, "E","T")), .T.) 
(PREREG) (_aTotal[86] := Iif (!SF3->F3_TIPO$"DB",SA2->A2_SIMPNAC,SA1->A1_SIMPNAC),.T.)
(PREREG) (_aTotal[17] := Iif(_aTotal[16]>0, SF3->F3_VALCONT+_aTotal[16],SF3->F3_VALCONT),.T.)  
IDENTREG   C 001 0 "R"        
DTPAGTO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO), 7, 2)+"/"+Substr (DTOS (SF3->F3_EMISSAO), 5, 2)+"/"+Str (Year (SF3->F3_EMISSAO), 4)
EMISSAO    C 010 0 Substr (DTOS (SF3->F3_EMISSAO), 7, 2)+"/"+Substr (DTOS (SF3->F3_EMISSAO), 5, 2)+"/"+Str (Year (SF3->F3_EMISSAO), 4)
SERIENF    C 002 0 _aTotal[7]
MODELONF   C 001 0 IIf(AllTrim(_aTotal[7])$"OT","T","")
TIPONF     C 001 0 _aTotal[85]
NF         C 009 0 RetNf(_aTotal[6],9,"N")
VLRBRUTO   C 015 0 StrZero (_aTotal[17], 15, 2)
VLRSERV    C 015 0 StrZero (SF3->F3_VALCONT, 15, 2)         
ALQISSQN   C 005 0 Iif(Empty(_aTotal[92]),StrZero (SF3->F3_ALIQICM, 05, 2),"00.00")         
PARCELA    C 006 0 Replicate("0",06)
QTDPARC    C 006 0 Replicate("0",06)
MOTIVONRET C 030 0 Space (30)
CNPJ       C 014 0 Iif (RetPessoa (_aTotal[4])=="J", _aTotal[4], Replicate ("0",14))      
CPF        C 011 0 Iif (RetPessoa (_aTotal[4])=="F", _aTotal[4], Replicate ("0",11))         
NOMEPREST  C 040 0 Iif (!SF3->F3_TIPO$"DB", SA2->A2_NOME, SA1->A1_NOME)         
CSIAFI     C 010 0 _aTotal[94]
SIMPLESN   C 001 0 Iif(_aTotal[86]$'1',"S",Iif(_aTotal[86]$'2',"N",""))  
CODSERV    C 010 0 Iif(Alltrim(_aTotal[90])<>Alltrim(Upper(_aTotal[8])),SF3->F3_CODISS,"")
CODSIAFIP  C 010 0 Iif(Alltrim(_aTotal[90])<>Alltrim(Upper(_aTotal[8])),"",_aTotal[94])
NATUREZA   C 001 0 IIf(SF3->F3_ISSMAT > 0,"B",Iif(SF3->F3_ISENICM>0,"C","A"))
(POS) FsQuery (_aTotal[1], 2)
