?{"Nome do Arquivo INI","CPRLEGAL.INI"}
?{"Descricao Completa do Arquivo Magnetico","Compra Legal - Bahia"}
?{"A Quem se Destina","Aos contribuintes que efetuaram vendas de mercadorias destinadas a órgãos ou entidades da Administração pública Estadual ou Municipal, direta ou indireta, localizados no Estado da Bahia, em que seja exigida a emissão de Notas Fiscais modelos 1 ou 1-A."}
?{"Objetivo","Gerar um arquivo de exportação para a emissão automática das notas fiscais por meio eletrônico, nas exigências da legislação estadual."}
?{"Prazo de Entrega","Todo documento fiscal modelo 1 ou 1-A, com valor superior a R$ 1.000,00 destinada a òrgão Público deve ter emitida também a nota fiscal eletrônica, não havendo prazo de entrega. O meio magnético apenas facilita a emissão dessa nota fiscal pelo programa da Receita Estadual."}
?{"Aplicativo Disponibilizado pelo Fisco","Compra Legal"}
?{"Versao do Aplicativo Contemplada pela Microsiga","Versao 2.3.0"}
?{"Comentarios",""}

[XXX Inicializacao]
(PRE) _aTotal[01] := SuperGetMv("MV_A1PUBLI")
(PRE) _aTotal[02] := Iif(!Empty(_aTotal[01]),SA1->(FieldPos((_aTotal[01]))),0)
(PRE) _aTotal[03] := "Parâmetro não existe"
(PRE) _aTotal[04] := "O parâmetro MV_A1PUBLI não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[04] += "Para que a rotina continue corretamente, "
(PRE) _aTotal[04] += "será necessário respeitar a solução proposta abaixo."
(PRE) _aTotal[05] := "Incluir o parâmetro MV_A1PUBLI na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[05] += "<campo da tabela SA1 que indica se o cliente é Órgão Público>."
(PRE) _aTotal[05] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(Empty(_aTotal[01]) .Or. _aTotal[02] == 0,xMagHelpFis(_aTotal[03],_aTotal[04],_aTotal[05]),.T.)
(PRE) _aTotal[06] := 0   
(PRE) _aTotal[07] := {}         
(PRE) _aTotal[10] := {"SF2",""}
(PRE) SF2->(dbSetOrder(1))
(PRE) FsQuery(_aTotal[10],1,"F2_FILIAL = '" + xFilial("SF2") + "' AND F2_EMISSAO >= '" + DTOS(mv_par01) + "' AND F2_EMISSAO <= '" + DTOS(mv_par02) + "' AND F2_TIPO NOT IN('S','D','B')","F2_FILIAL == '" + xFilial("SF2") + "' .AND. DTOS(F2_EMISSAO) >= '" + DTOS(mv_par01) + "' .AND. DTOS(F2_EMISSAO) <= '" + DTOS(mv_par02) + "' .AND. !(F2_TIPO$'SDB')",SF2->(IndexKey()))
(PRE) SF2->(dbGoTop())
(PRE) SF3->(dbSetOrder(4))
(PRE) SA1->(dbSetOrder(1))
(PRE) SA4->(dbSetOrder(1))
(PRE) SC6->(dbSetOrder(4))
(PRE) SC5->(dbSetOrder(1))
(PRE) _aTotal[25] := SuperGetMv("MV_VLMNLEG")
(PRE) _aTotal[26] := SuperGetMv("MV_INFTRAN")  
(PRE) _aTotal[27] := !Empty(_aTotal[26]) .And. _aTotal[26] <> '{"","","",""}' .And. Len(&(_aTotal[26])) == 4
(PRE) _aTotal[28] := Iif(_aTotal[27],SF2->(FieldPos(&(SuperGetMv("MV_INFTRAN"))[1])),0) 
(PRE) _aTotal[29] := Iif(_aTotal[27],SF2->(FieldPos(&(SuperGetMv("MV_INFTRAN"))[2])),0) 
(PRE) _aTotal[30] := Iif(_aTotal[27],SF2->(FieldPos(&(SuperGetMv("MV_INFTRAN"))[3])),0) 
(PRE) _aTotal[31] := Iif(_aTotal[27],SF2->(FieldPos(&(SuperGetMv("MV_INFTRAN"))[4])),0) 

[SF2 Dados da Nota Fiscal]                                                                                                                                                                                                                                                                                                                                                                                                           
(DEL) | MF
(PREREG) _aTotal[02] > 0
(PREREG) SA1->(dbSeek(xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA))
(PREREG) SA1->(FieldGet(_aTotal[02])) == "2" .Or. SA1->(FieldGet(_aTotal[02])) == "3"
(PREREG) SF3->(dbSeek(xFilial("SF3")+SF2->F2_CLIENTE+SF2->F2_LOJA+SF2->F2_DOC+SF2->F2_SERIE))
(PREREG) Iif(!Empty(SF2->F2_TRANSP),SA4->(dbSeek(xFilial("SA4")+SF2->F2_TRANSP)),.T.)
// Localiza o pedido para verificar se o frete e por conta do remetente (CIF) ou destinatario (FOB)
(PREREG) (SC6->(dbSeek(xFilial("SC6")+SF2->F2_DOC+SF2->F2_SERIE)),.T.)
(PREREG) (SC5->(dbSeek(xFilial("SC5")+SC6->C6_NUM)),.T.)
(PREREG) SA1->A1_EST == "BA"                                   
// Verifica o valor minimo para ser informado o documento no meio magnetico
(PREREG) SF2->F2_VALMERC+SF2->F2_FRETE+SF2->F2_SEGURO+SF2->F2_DESPESA+SF2->F2_VALIPI+SF2->F2_ICMSRET > _aTotal[25]
(PREREG) (_aTotal[06] += 1,.T.)
// Somente e possivel validar um arquivo com no maximo 500 notas
(PREREG) _aTotal[06] <= 500
// O tamanho dos registros esta 000 porque, quando utiliza-se o delimitador, essa opcao e possivel, para gerar cada registro
// apenas com o tamanho utilizado para apresentar a informacao (para nao ficar espacos em branco no final do registro).
TIPO       C 000 0 "1"
NF         C 000 0 Alltrim(SubStr(SF2->F2_DOC,1,9))
SERIE      C 000 0 Alltrim(SubStr( SerieNfId("SF2",2,"F2_SERIE") ,1,4))
CNPJ       C 000 0 SubStr(SM0->M0_CGC,1,8)
CNPJFIL    C 000 0 SubStr(SM0->M0_CGC,9,4)
DIGCNPJ    C 000 0 SubStr(SM0->M0_CGC,13,2)
EMISSAO    C 000 0 StrZero(Day(SF2->F2_EMISSAO),2) + "/" + StrZero(Month(SF2->F2_EMISSAO),2) + "/" + StrZero(Year(SF2->F2_EMISSAO),4)
IE         C 000 0 Iif(SM0->M0_ESTENT == "BA",SubStr(SM0->M0_INSC,1,9),"")
UF         C 000 0 SubStr(SM0->M0_ESTENT,1,2)
SAIDA      C 000 0 StrZero(Day(SF2->F2_EMISSAO),2) + "/" + StrZero(Month(SF2->F2_EMISSAO),2) + "/" + StrZero(Year(SF2->F2_EMISSAO),4)
CFOP       C 000 0 Alltrim(SubStr(SF3->F3_CFO,1,4))
BASEICMS   C 000 0 Alltrim(Str(SF2->F2_BASEICM,14,2))
BASEST     C 000 0 Alltrim(Str(SF2->F2_BRICMS,14,2))
VALICMS    C 000 0 Alltrim(Str(SF2->F2_VALICM,12,2))
VALST      C 000 0 Alltrim(Str(SF2->F2_ICMSRET,12,2))
VALPROD    C 000 0 Alltrim(Str(SF2->F2_VALMERC+SF2->F2_DESCONT,14,2))
FRETE      C 000 0 Alltrim(Str(SF2->F2_FRETE,12,2))
SEGURO     C 000 0 Alltrim(Str(SF2->F2_SEGURO,12,2))
DESPESAS   C 000 0 Alltrim(Str(SF2->F2_DESPESA,14,2))
IPI        C 000 0 Alltrim(Str(SF2->F2_VALIPI,12,2))
TOTNF      C 000 0 Alltrim(Str(SF2->F2_VALMERC+SF2->F2_FRETE+SF2->F2_SEGURO+SF2->F2_DESPESA+SF2->F2_VALIPI+SF2->F2_ICMSRET+SF2->F2_DESCONT,12,2))
IETRANSP   C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),Iif(SA4->A4_EST == "BA",Iif(Upper(Alltrim(SA4->A4_INSEST)) == "ISENTO","",SubStr(SA4->A4_INSEST,1,9)),""),""))
CNPJTRANSP C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),Iif(Len(Alltrim(SA4->A4_CGC)) == 14,SubStr(SA4->A4_CGC,1,8),SubStr(SA4->A4_CGC,1,9)),""))
CNPJFTRANS C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),Iif(Len(Alltrim(SA4->A4_CGC)) == 14,SubStr(SA4->A4_CGC,9,4),"0"),""))
DCNPJTRANS C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),Iif(Len(Alltrim(SA4->A4_CGC)) == 14,SubStr(SA4->A4_CGC,13,2),SubStr(SA4->A4_CGC,10,2)),""))
NOMETRANSP C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),SubStr(SA4->A4_NOME,1,150),""))
UFTRANS    C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),SubStr(SA4->A4_EST,1,2),""))
MUNICTRANS C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),SubStr(SA4->A4_MUN,1,50),""))
VALVOL     C 000 0 Iif(!Empty(SF2->F2_TRANSP),Alltrim(Str(SF2->F2_VOLUME1,10,2)),"")
ESPVOL     C 000 0 Alltrim(Iif(!Empty(SF2->F2_TRANSP),SubStr(SF2->F2_ESPECI1,1,20),""))
PESOBRUTO  C 000 0 Iif(!Empty(SF2->F2_TRANSP),Alltrim(Str(SF2->F2_PBRUTO,8,3)),"")
PESOLIQ    C 000 0 Iif(!Empty(SF2->F2_TRANSP),Alltrim(Str(SF2->F2_PLIQUI,8,3)),"")
PLACA      C 000 0 Alltrim(SubStr(Iif(_aTotal[28]==0,"",SF2->(FieldGet(_aTotal[28]))),1,7))
UFPLACA    C 000 0 Alltrim(SubStr(Iif(_aTotal[29]==0,"",SF2->(FieldGet(_aTotal[29]))),1,2))
MUNICVEIC  C 000 0 Alltrim(SubStr(Iif(_aTotal[30]==0,"",SF2->(FieldGet(_aTotal[30]))),1,50))
INFORMA    C 000 0 Alltrim(SubStr(Iif(_aTotal[31]==0,"",SF2->(FieldGet(_aTotal[31]))),1,225))
TIPOFRE    C 000 0 Alltrim(Iif(!Empty(SC5->C5_TPFRETE),Iif(SC5->C5_TPFRETE=="C","1","0"),Iif(SF2->F2_FRETE > 0,"1","0")))
EMPENHO    C 000 0 ""
CNPJDES    C 000 0 Alltrim(SubStr(SA1->A1_CGC,1,8))
CNPJFILDES C 000 0 Alltrim(SubStr(SA1->A1_CGC,9,4))
DIGCNPJDES C 000 0 Alltrim(SubStr(SA1->A1_CGC,13,2))
RAZAODEST  C 000 0 Alltrim(SubStr(SA1->A1_NOME,1,150))
ENDDEST    C 000 0 Alltrim(SubStr(SA1->A1_END,1,100))
BAIRRODEST C 000 0 Alltrim(SubStr(SA1->A1_BAIRRO,1,40))
CEPDEST    C 000 0 Alltrim(aRetDig(SA1->A1_CEP,.F.))
DDDDEST    C 000 0 Alltrim(SA1->A1_DDD)
TELDEST    C 000 0 Alltrim(SubStr(aRetDig(SA1->A1_TEL,.F.),1,8))
UFDEST     C 000 0 Alltrim(SubStr(SA1->A1_EST,1,2))
MUNDEST    C 000 0 Alltrim(SubStr(SA1->A1_MUN,1,50))
PERCDESC   C 000 0 "0.00"    
TOTGERAL   C 000 0 Alltrim(Str(SF2->F2_VALMERC+SF2->F2_FRETE+SF2->F2_SEGURO+SF2->F2_DESPESA+SF2->F2_VALIPI+SF2->F2_ICMSRET,14,2))
VALDESC    C 000 0 If(SF2->F2_DESCONT > 0,Alltrim(Str(SF2->F2_DESCONT,14,2)),"")
STATUSREC  C 000 0 "0"
ESFERA     C 000 0 ""
CONVENIO   C 000 0 ""
UFCONVENIO C 000 0 ""
MUNCONV    C 000 0 ""                                                   
{SD2 - Itens da Nota Fiscal}
(DEL) | MF
(PRE) _aTotal[11] := {"SD2",""}
(PRE) SD2->(dbSetOrder(3))
(PRE) FsQuery(_aTotal[11],1,"D2_FILIAL = '" + xFilial("SD2") + "' AND D2_DOC = '" + SF2->F2_DOC + "' AND D2_SERIE = '" + SF2->F2_SERIE + "' AND D2_CLIENTE = '" + SF2->F2_CLIENTE + "' AND D2_LOJA = '" + SF2->F2_LOJA + "'","D2_FILIAL == '" + xFilial("SD2") + "' .AND. D2_DOC == '" + SF2->F2_DOC + "' .AND. D2_SERIE == '" + SF2->F2_SERIE + "' .AND. D2_CLIENTE == '" + SF2->F2_CLIENTE + "' .AND. D2_LOJA == '" + SF2->F2_LOJA + "'",SD2->(IndexKey()))
(PRE) SD2->(dbGoTop()) 
(PRE) SB1->(dbSetOrder(1))
(PRE) SF4->(dbSetOrder(1))     
(PREREG) SD2->D2_FILIAL == xFilial("SD2") .And. SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA == SF2->F2_DOC+SF2->F2_SERIE+SF2->F2_CLIENTE+SF2->F2_LOJA
(PREREG) SB1->(dbSeek(xFilial("SB1")+SD2->D2_COD))
(PREREG) SF4->(dbSeek(xFilial("SF4")+SD2->D2_TES))
(PREREG) (_aTotal[20] := Iif(Len(Alltrim(SB1->B1_ORIGEM)) == 2,SB1->B1_ORIGEM + "0",aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+Substr(SB1->B1_CLASFIS,1,1)+"0"),3,0),3)),.T.)
(PREREG) (_aTotal[21] := aFISFill(Num2Chr(Val(Substr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB),3,0),3),.T.)
(PREREG) (_aTotal[22] := Alltrim(SD2->D2_CLASFIS) ,.T.)
(PREREG) (_aTotal[23] := _aTotal[22] + Iif(Len(_aTotal[22])==1,"00",IIf(Len(_aTotal[22])==2,"0","")),.T.)
(PREREG) (_aTotal[24] := SD2->D2_DESCON/SD2->D2_QUANT,.T.)
TIPO       C 000 0 "2"                      
NF         C 000 0 Alltrim(SubStr(SF2->F2_DOC,1,9))
SERIE      C 000 0 Alltrim(SubStr( SerieNfId("SF2",2,"F2_SERIE") ,1,4))
CNPJ       C 000 0 SubStr(SM0->M0_CGC,1,8)
CNPJFIL    C 000 0 SubStr(SM0->M0_CGC,9,4)
DIGCNPJ    C 000 0 SubStr(SM0->M0_CGC,13,2)
EMISSAO    C 000 0 StrZero(Day(SF2->F2_EMISSAO),2) + "/" + StrZero(Month(SF2->F2_EMISSAO),2) + "/" + StrZero(Year(SF2->F2_EMISSAO),4)
ITEM       C 000 0 Alltrim(SubStr(SD2->D2_ITEM,1,5))
CODPROD    C 000 0 Alltrim(SubStr(SD2->D2_COD,1,50))
DESCR      C 000 0 Alltrim(SubStr(SB1->B1_DESC,1,255))
CST        C 000 0 Iif(Empty(SD2->D2_CLASFIS),_aTotal[21],_aTotal[23])
MEDIDA     C 000 0 Alltrim(SubStr(SD2->D2_UM,1,30))
QTDE       C 000 0 Alltrim(Str(SD2->D2_QUANT,14,6))
VALPROD    C 000 0 Alltrim(Str(SD2->D2_PRCVEN+_aTotal[24],14,6))
ALIQIPI    C 000 0 Alltrim(Str(SD2->D2_IPI,5,2))
ALIQICMS   C 000 0 Alltrim(Str(SD2->D2_PICM,5,2))
DESCONTO   C 000 0 Iif(SD2->D2_DESCON > 0,Alltrim(Str(SD2->D2_DESCON,14,6)),"")
PERCDESC   C 000 0 "0.00"                          
SUBTOTAL   C 000 0 Alltrim(Str(SD2->D2_TOTAL+SD2->D2_DESCON,14,2))
TOTAL      C 000 0 Alltrim(Str(SD2->D2_TOTAL,14,2))
(POS) FsQuery(_aTotal[11],2) 
(POS)
                                                                                  
[XXX Excluindo areas de trabalho]                                                 
(PRE) FsQuery(_aTotal[10],2)
