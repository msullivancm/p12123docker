?{"Nome do Arquivo INI","DEMMSMA.INI"}
?{"Descrição Completa do Arquivo Magnético","Declaração Eletrônica da Movimentação Mensal de Serviços - Maceió - Alagoas."}
?{"A Quem se Destina","I - os prestadores de serviços que no ano anterior obtiveram faturamento bruto anual igual ou superior a R$ 50.000,00 (cinqüenta mil reais);"}
?{"","II - as empresas industriais e comerciais com faturamento bruto anual, no exercício anterior, igual ou superior a R$ 200.000,00 (duzentos mil reais);"}
?{"","III - os tomadores de serviços que efetuarem Retenção na Fonte e/ou Responsáveis por Substituição, conforme definido pela legislação tributária."}
?{"","IV - outras empresas não enquadradas nos incisos anteriores, conforme definir a Secretaria Municipal de Finanças."}
?{"Objetivo","A Declaração Eletrônica da Movimentação Mensal de Serviços - DEMMS é um sistema de informações sobre os serviços prestados e tomados por Prestadores de Serviços e Contribuintes Substitutos do ISS."}
?{"Prazo de Entrega","Mensal. Até o dia 10 do mês subsequente ao mês declarado. Por exemplo, a DEMMS referente ao mês de março, deverá ser entregue até o dia 10 de abril."}
?{"Aplicativo Disponibilizado pelo Fisco","DEMMS."}
?{"Versao do Aplicativo Contemplada pela Microsiga","1.7"}
?{"Comentários","A DEMMS foi instituída pelo art. 1º, do decreto nº 6.243, de 05/06/2002."}

[XXX Inicializacao de variaveis]
(PRE) SA1->(dbSetOrder(1))
(PRE) SA2->(dbSetOrder(1))
(PRE) SF3->(dbSetOrder(1))
// Periodo de Apuracao
(PRE) _aTotal[01] := mv_par01
(PRE) _aTotal[02] := mv_par02
// Controle do ISS Retido no movimento
(PRE) _aTotal[03] := SF3->F3_RECISS
(PRE) _aTotal[04] := GetNewPar("MV_F3RECIS",.F.)
// Inscricao Municipal do Cliente
(PRE) _aTotal[05] := GetNewPar("MV_DEMMSA1","")
(PRE) _aTotal[06] := SA1->(FieldPos(_aTotal[05])) > 0
// Inscricao Municipal do Fornecedor
(PRE) _aTotal[07] := GetNewPar("MV_DEMMSA2","")
(PRE) _aTotal[08] := SA2->(FieldPos(_aTotal[07])) > 0
// Inscricao Municipal do Contribuinte
(PRE) _aTotal[09] := GetNewPar("MV_DEMMSIM","")
// Totalizadores
(PRE) _aTotal[15] := 0
(PRE) _aTotal[16] := 0
(PRE) _aTotal[17] := 0
(PRE) _aTotal[18] := 0
(PRE) _aTotal[19] := 0
(PRE) _aTotal[20] := 0

[XXX Verifica o conteudo dos parametros da rotina]
(PRE) _aTotal[21] := (!Empty(_aTotal[05])) .And. _aTotal[06]
(PRE) _aTotal[22] := "Parâmetro inconsistente"
(PRE) _aTotal[23] := "O parâmetro MV_DEMMSA1 não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[23] += "Para que a rotina continue corretamente, "
(PRE) _aTotal[23] += "será necessário respeitar a solução proposta abaixo."
(PRE) _aTotal[24] := "Incluir o parâmetro MV_DEMMSA1 na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[24] += "<campo da tabela SA1 que contém a Inscrição Municipal do cliente>."
(PRE) _aTotal[24] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!_aTotal[21],xMagHelpFis(_aTotal[22],_aTotal[23],_aTotal[24]),.T.)
(PRE) _aTotal[25] := (!Empty(_aTotal[07])) .And. _aTotal[08]
(PRE) _aTotal[22] := "Parâmetro inconsistente"
(PRE) _aTotal[23] := "O parâmetro MV_DEMMSA2 não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[23] += "Para que a rotina continue corretamente, "
(PRE) _aTotal[23] += "será necessário respeitar a solução proposta abaixo."
(PRE) _aTotal[24] := "Incluir o parâmetro MV_DEMMSA2 na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[24] += "<campo da tabela SA2 que contém a Inscrição Municipal do fornecedor>."
(PRE) _aTotal[24] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!_aTotal[25],xMagHelpFis(_aTotal[22],_aTotal[23],_aTotal[24]),.T.)
(PRE) _aTotal[26] := !Empty(_aTotal[09])
(PRE) _aTotal[22] := "Parâmetro inconsistente"
(PRE) _aTotal[23] := "O parâmetro MV_DEMMSIM não está definido no dicionário de dados ou o seu conteúdo é inválido. "
(PRE) _aTotal[23] += "Para que a rotina continue corretamente, "
(PRE) _aTotal[23] += "será necessário respeitar a solução proposta abaixo."
(PRE) _aTotal[24] := "Incluir o parâmetro MV_DEMMSIM na tabela SX6 com a seguinte estrutura: "
(PRE) _aTotal[24] += "<número da Inscrição Municipal do contribuinte, sem pontos ('.'), barras ('/') ou hífens ('-')>."
(PRE) _aTotal[24] += " Para maiores referências, consultar a documentação que acompanha a rotina."
(PRE) Iif(!_aTotal[26],xMagHelpFis(_aTotal[22],_aTotal[23],_aTotal[24]),.T.)

[XXX Header do meio magnetico]                     
(PREREG) _aTotal[21] .And. _aTotal[25] .And. _aTotal[26]
TIPO       C 001 0 "0"
INSC_MUN   N 011 0 Val(_aTotal[09])
MES_REF    N 002 0 Month(_aTotal[01])
ANO_REF    N 004 0 Year(_aTotal[01])
FILLER     C 131 0 ""  
(POS)

[SF3 Notas Emitidas]
(PRE) _aTotal[10] := {"SF3",""}
(PRE) FsQuery(_aTotal[10],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + DTOS(_aTotal[01]) + "' AND F3_ENTRADA <= '" + DTOS(_aTotal[02]) + "' AND SUBSTRING(F3_CFO,1,1) >= '5' AND F3_TIPO = 'S' AND F3_CODISS <> ''","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. SubStr(AllTrim(F3_CFO),1,1) >= '5' .And. F3_TIPO == 'S' .And. !Empty(F3_CODISS)",SF3->(IndexKey()))
(PRE) Iif(_aTotal[21] .And. _aTotal[25] .And. _aTotal[26],SF3->(dbGoTop()),SF3->(dbGoBottom()))
(PREREG) _aTotal[21] .And. _aTotal[25] .And. _aTotal[26]
(PREREG) (SA1->(dbSeek( xFilial("SA1") + SF3->F3_CLIEFOR + SF3->F3_LOJA )), .T.)
// Documento Fiscal Cancelado
(PREREG) (_aTotal[11] := Iif(!Empty(SF3->F3_DTCANC),2,0),.T.)
// Imunidade ou Isencao
(PREREG) (_aTotal[12] := Iif(SF3->F3_ISENICM > 0,3,0),.T.)
// Retencao do ISS Normal
(PREREG) (_aTotal[13] := Iif(_aTotal[04],Iif(SF3->F3_RECISS$"1S",4,1),Iif(SA1->A1_RECISS$"1S",4,1)),.T.)
// Verificando o tipo de Recolhimento
(PREREG) (_aTotal[14] := Iif(_aTotal[11]==2,_aTotal[11],Iif(_aTotal[12]==3,_aTotal[12],_aTotal[13])),.T.)
// Totalizadores do Filler
(PREREG) (_aTotal[16] += Iif(_aTotal[14]==2,0,Iif(_aTotal[14]==4,0,SF3->F3_VALICM)),.T.)
(PREREG) (_aTotal[17] += Iif(_aTotal[14]==2,0,Iif(_aTotal[14]==4,SF3->F3_VALICM,0)),.T.)
TIPO       C 001 0 "1"
NMR_DOCU   C 011 0 RetNf(SF3->F3_NFISCAL,11,"N")
MODEL_NF   C 003 0 Iif(AllTrim(SF3->F3_ESPECIE)=="NFSS","2",Iif(AllTrim(SF3->F3_ESPECIE)=="NFA","3",Iif(AllTrim(SF3->F3_ESPECIE)=="NFSE","4","1")))
SERIE_NE   C 003 0 SerieNfId("SF3",2,"F3_SERIE") 
EMISS_NF   D 008 0 SF3->F3_ENTRADA
TIPO_DOC   N 003 0 1
SERVICO    N 003 0 Val(SF3->F3_CODISS)
CMC        N 011 0 Val(SA1->&(_aTotal[05]))
RAZ_SOCIA  C 055 0 SA1->A1_NOME
CNPJ       C 014 0 SA1->A1_CGC
TP_RECOLH  N 003 0 _aTotal[14]	
VL_SERVIC  N 012 2 Iif(_aTotal[11]==2,0,SF3->F3_VALCONT)
BASE_CALC  N 012 2 Iif(_aTotal[11]==2,0,SF3->F3_BASEICM+SF3->F3_ISENICM+SF3->F3_OUTRICM)
VL_RETIDO  N 012 2 Iif(_aTotal[11]==2,0,Iif(_aTotal[14]==4,SF3->F3_VALICM,0))
(CONT) _aTotal[15] += 1
(POS) FsQuery(_aTotal[10],2)

[SF3 Notas Recebidas]
(PRE) _aTotal[10] := {"SF3",""}
(PRE) FsQuery(_aTotal[10],1,"F3_FILIAL = '" + xFilial("SF3") + "' AND F3_ENTRADA >= '" + DTOS(_aTotal[01]) + "' AND F3_ENTRADA <= '" + DTOS(_aTotal[02]) + "' AND SUBSTRING(F3_CFO,1,1) < '5' AND F3_TIPO = 'S' AND F3_DTCANC ='' AND F3_CODISS <> ''","F3_FILIAL == '" + xFilial("SF3") + "' .AND. DTOS(F3_ENTRADA) >= '" + DTOS(_aTotal[01]) + "' .AND. DTOS(F3_ENTRADA) <= '" + DTOS(_aTotal[02]) + "' .And. SubStr(AllTrim(F3_CFO),1,1) < '5' .And. F3_TIPO =='S' .And. Empty(F3_DTCANC) .And. !Empty(F3_CODISS)",SF3->(IndexKey()))
(PRE) Iif(_aTotal[21] .And. _aTotal[25] .And. _aTotal[26],SF3->(dbGoTop()),SF3->(dbGoBottom()))
(PREREG) _aTotal[21] .And. _aTotal[25] .And. _aTotal[26]
(PREREG) (SA2->(dbSeek( xFilial("SA2") + SF3->F3_CLIEFOR + SF3->F3_LOJA )), .T.)
// Imunidade ou Isencao
(PREREG) (_aTotal[12] := Iif(SF3->F3_ISENICM > 0,3,0),.T.)                                               
// Retencao do ISS Normal
(PREREG) (_aTotal[13] := Iif(_aTotal[04],Iif(SF3->F3_RECISS$"1S",4,1),Iif(SA2->A2_RECISS$"1S",4,1)),.T.)
// Verificando o tipo de Recolhimento
(PREREG) (_aTotal[14] := Iif(_aTotal[12]==3,_aTotal[12],_aTotal[13]),.T.)
// Totalizadores do Filler
(PREREG) (_aTotal[18] += Iif(_aTotal[14] == 4,0,SF3->F3_VALICM),.T.)
(PREREG) (_aTotal[19] += Iif(_aTotal[14] == 4,SF3->F3_VALICM,0),.T.)
TIPO       C 001 0 "2"
NMR_DOCU   C 011 0 RetNf(SF3->F3_NFISCAL,11,"N")
MODEL_NF   C 003 0 Iif(AllTrim(SF3->F3_ESPECIE)=="NFSS","2",Iif(AllTrim(SF3->F3_ESPECIE)=="NFA","3",Iif(AllTrim(SF3->F3_ESPECIE)=="NFSE","4","1")))
SERIE_NE   C 003 0 SerieNfId("SF3",2,"F3_SERIE")
EMISS_NF   D 008 0 SF3->F3_ENTRADA
DT_PGTO    D 008 0 SF3->F3_ENTRADA
TIPO_DOC   N 003 0 1
SERVICO    N 003 0 Val(SF3->F3_CODISS)
CMC        N 011 0 Val(SA2->&(_aTotal[07]))
RAZ_SOCIA  C 055 0 SA2->A2_NOME
CNPJ       C 014 0 SA2->A2_CGC
VL_SERVIC  N 012 2 SF3->F3_VALCONT
BASE_CALC  N 012 2 SF3->F3_BASEICM + SF3->F3_ISENICM + SF3->F3_OUTRICM
TP_RECOLH  N 003 0 _aTotal[14]
VL_RETIDO  N 012 2 Iif(_aTotal[14] == 4,SF3->F3_VALICM,0)
(CONT) _aTotal[15] += 1
(POS) FsQuery(_aTotal[10],2)

[XXX Trailer]                                            
(ARQ) DEMMSMA.DMS
(PREREG) _aTotal[21] .And. _aTotal[25] .And. _aTotal[26]
TIPO       C 001 0 "9"
QTDE_REG   N 004 0 _aTotal[15]
TOT_REC_EM N 012 2 _aTotal[16]
TOT_RET_EM N 012 2 _aTotal[17]
TOT_IMP_RE N 012 2 _aTotal[18]
TOT_RET_RE N 012 2 _aTotal[19]
FILLER     C 096 0 ""
(POS)
